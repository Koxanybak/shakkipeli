{"version":3,"sources":["sprites/blackking.svg","sprites/blackqueen.svg","sprites/blackrook.svg","sprites/blackbishop.svg","sprites/blackknight.svg","sprites/blackpawn.svg","sprites/whiteking.svg","sprites/whitequeen.svg","sprites/whiterook.svg","sprites/whitebishop.svg","sprites/whiteknight.svg","sprites/whitepawn.svg","components/Footer.js","queries.js","index.js","utils/errorHandlers.js","utils/stateHooks.js","components/LoginForm.js","components/Menu.js","components/RegisterForm.js","components/GameMenu.js","utils/constants.js","components/chess/pieces.js","components/chess/Square.js","components/chess/Board.js","components/chess/GameText.js","components/chess/LastMove.js","components/chess/gameUtils.js","components/chess/GameButtons.js","components/chess/Game.js","App.js"],"names":["module","exports","Footer","className","wsUri","LOCATION","gql","IDLE_PIECE","MOVED_PIECE","MOVE_HISTORY_ENTRY","GAME_STATE_DETAILS","GET_GAME","SKIP_TURN","GAME_STATE_UPDATED","JOIN_GAME","PROMOTE","MAKE_MOVE","CREATE_GAME","GET_LOGGED_USER","LOGIN","ADD_USER","handleApolloError","err","graphQLErrors","console","log","message","stack","useUser","client","useApolloClient","useState","token","setToken","useLazyQuery","variables","window","localStorage","getItem","sessionStorage","onCompleted","data","setUser","getLoggedUser","onError","getUser","useQuery","loading","error","removeUser","useCallback","removeItem","user","remember","newUserData","setItem","writeQuery","query","useEffect","userDataInStore","readQuery","userLoading","userError","LoginForm","username","setUsername","password","setPassword","setRemember","history","useHistory","useMutation","login","loginResult","push","onSubmit","event","preventDefault","TextField","label","onChange","e","target","value","name","type","FormControlLabel","control","Checkbox","checked","color","Button","variant","onClick","Menu","AppBar","position","Toolbar","component","Link","to","RegisterForm","confirmation","setConfirmation","tag","setTag","alert","addUser","addedResult","length","helperText","required","style","paddingTop","paddingBottom","GameMenu","link","setLink","createGame","createResult","id","location","Paper","background","padding","href","pieceStyle","width","height","verticalAlign","getImgSrc","side","blackKing","blackQueen","blackBishop","blackRook","blackKnight","blackPawn","whiteKing","whiteQueen","whiteBishop","whiteRook","whiteKnight","whitePawn","Piece","opacity","draggable","src","alt","King","kingStyle","Queen","queenStyle","Rook","rookStyle","Knight","knightStyle","Bishop","bishopStyle","Pawn","pawnStyle","Square","makeMove","piece","dragHelperMap","highlight","specificColor","useMemo","squareColor","setSquareColor","pieceToRender","squareStyle","backgroundColor","textAlign","row","column","Board","boardAlignment","board","handleClick","chosenPiece","Map","forEach","i","j","set","squares","Array","from","boardStyle","SQUARE_SIZE","borderStyle","borderColor","borderWidth","cellSpacing","map","key","availableMoves","move","newLocation","useStyles","makeStyles","turnText","GameText","game","check","currentPlayer","gameOver","promotionPlayerID","winner","blackPlayer","promote","text","setText","emphasize","setEmphasize","classes","threatenedPlayer","Typography","getLocation","Move","emphasizeStyle","borderLeftStyle","borderLeftWidth","moveStyle","margin","undefined","__typename","promotedPiece","promotedTo","MoveHistory","moveHistory","overflowY","index","LastMove","showAll","setShowAll","lastMove","isNotValid","squareNode","pieceToMove","clickedPiece","isValidPiece","whitePlayer","GameButtons","skipTurn","disabled","showSkipConfirm","setShowSkipConfirm","size","Game","useParams","setGame","newGameData","gameDataInStore","gameId","getGame","gameStateUpdated","initialResult","joinGame","useSubscription","onSubscriptionData","subscriptionData","gameLoading","gameError","pieceType","oldLocation","useGame","setPieceToMove","CircularProgress","toString","a","clickedElem","Math","floor","Number","parentNode","res","success","clickedPieceElem","firstChild","Grid","container","direction","justify","spacing","wrap","item","xs","lg","alignItems","root","App","Container","path","authLink","setContext","_","headers","authorization","loc","protocol","host","httpLink","HttpLink","uri","wsLink","WebSocketLink","options","reconnect","splitLink","split","definition","getMainDefinition","kind","operation","concat","ApolloClient","cache","InMemoryCache","connectToDevTools","ReactDOM","render","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.d47c5323.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blackking.66e1bcad.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackqueen.7b3e33e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackrook.96872a66.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackbishop.1f3b8d1a.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackknight.d39f1d02.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackpawn.1c52d8c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteking.250510ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/whitequeen.4320a2dd.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiterook.095b1a06.svg\";","module.exports = __webpack_public_path__ + \"static/media/whitebishop.09004fd2.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteknight.e6294efe.svg\";","module.exports = __webpack_public_path__ + \"static/media/whitepawn.d69014fb.svg\";","import React from \"react\"\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      Student project for Full Stack open 2020. By using this site you accept the use of essential cookies.\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer","import { gql } from \"@apollo/client\"\r\n\r\n\r\n// fragments\r\nconst LOCATION = gql`\r\n  fragment location on Location {\r\n    row\r\n    column\r\n  }\r\n`\r\n\r\nconst IDLE_PIECE = gql`\r\n  fragment idlePiece on Piece {\r\n    type\r\n    side\r\n    location {\r\n      ...location\r\n    }\r\n  }\r\n  ${LOCATION}\r\n`\r\n\r\nconst MOVED_PIECE = gql`\r\n  fragment movedPiece on Piece {\r\n    type\r\n    side\r\n    lastLocation {\r\n      ...location\r\n    }\r\n  }\r\n  ${LOCATION}\r\n`\r\n\r\nconst MOVE_HISTORY_ENTRY = gql`\r\n fragment moveHistoryEntry on MoveHistoryEntry {\r\n   leadToCheck\r\n   wonTheGame\r\n }\r\n`\r\n\r\nconst GAME_STATE_DETAILS = gql`\r\n  fragment gameStateDetails on Game {\r\n    board {\r\n      ...idlePiece\r\n      id\r\n      availableMoves {\r\n        newLocation {\r\n          ...location\r\n        }\r\n      }\r\n    }\r\n    id\r\n    currentPlayer\r\n    whitePlayer\r\n    blackPlayer\r\n    winner\r\n    gameOver\r\n    promotionPlayerID\r\n    check {\r\n      threatenedPlayer\r\n      movesAvailable {\r\n        piece {\r\n          type\r\n          side\r\n        }\r\n        newLocation {\r\n          ...location\r\n        }\r\n      }\r\n    }\r\n    moveHistory {\r\n      ... on CastlingMove {\r\n        piece {\r\n          ...movedPiece\r\n        }\r\n        castledPiece {\r\n          ...movedPiece\r\n        }\r\n      }\r\n      ... on PromotionMove {\r\n        promotedPiece {\r\n          ...idlePiece\r\n        }\r\n        promotedTo\r\n      }\r\n      ... on OrdinaryMove {\r\n        piece {\r\n          ...movedPiece\r\n        }\r\n        pieceEaten {\r\n          ...idlePiece\r\n        }\r\n        newLocation {\r\n          ...location\r\n        }\r\n      }\r\n      ...moveHistoryEntry\r\n    }\r\n  }\r\n  ${LOCATION}\r\n  ${IDLE_PIECE}\r\n  ${MOVED_PIECE}\r\n  ${MOVE_HISTORY_ENTRY}\r\n`\r\n/* ${MOVED_PIECE}\r\n  ${MOVE_HISTORY_ENTRY} */\r\n\r\n/* moveHistory {\r\n  ... on OrdinaryMove {\r\n    piece {\r\n      ...movedPiece\r\n    }\r\n    pieceEaten {\r\n      ...idlePiece\r\n    }\r\n    newLocation {\r\n      ...location\r\n    }\r\n  }\r\n  ... on CastlingMove {\r\n    piece {\r\n      ...movedPiece\r\n    }\r\n    castledPiece {\r\n      ...movedPiece\r\n    }\r\n  }\r\n  ... on PromotionMove {\r\n    promotedPiece {\r\n      ...idlePiece\r\n    }\r\n    promotedTo\r\n  }\r\n  ...moveHistoryEntry\r\n} */\r\n\r\n/* const USER_DETAILS = gql`\r\n  fragment userDetails on User {\r\n    username\r\n    tag\r\n    friends {\r\n      tag\r\n    }\r\n    guest\r\n    id\r\n  }\r\n` */\r\n\r\n\r\n// mutations and queries\r\n\r\n// game related\r\nexport const GET_GAME = gql`\r\n  query getGame($gameId: String!) {\r\n    getGame(\r\n      gameId: $gameId\r\n    ) {\r\n      ...gameStateDetails\r\n    }\r\n  }\r\n  ${GAME_STATE_DETAILS}\r\n`\r\n\r\nexport const SKIP_TURN = gql`\r\n  mutation skipTurn($gameId: String!) {\r\n    skipTurn(\r\n      gameId: $gameId\r\n    ) {\r\n      ...gameStateDetails\r\n    }\r\n  }\r\n  ${GAME_STATE_DETAILS}\r\n`\r\n\r\nexport const GAME_STATE_UPDATED = gql`\r\n  subscription gameStateUpdated($gameId: String!) {\r\n    gameStateUpdated(\r\n      gameId: $gameId\r\n    ) {\r\n      ...gameStateDetails\r\n    }\r\n  }\r\n  ${GAME_STATE_DETAILS}\r\n`\r\n\r\nexport const JOIN_GAME = gql`\r\n  mutation joinGame($gameId: String!) {\r\n    joinGame(\r\n      gameId: $gameId\r\n    ) {\r\n      ...gameStateDetails\r\n    }\r\n  }\r\n  ${GAME_STATE_DETAILS}\r\n`\r\n\r\nexport const PROMOTE = gql`\r\n  mutation promote($gameId: String!, $pieceType: String!) {\r\n    promote(\r\n      gameId: $gameId,\r\n      pieceType: $pieceType\r\n    ) {\r\n      ...gameStateDetails\r\n    }\r\n  }\r\n  ${GAME_STATE_DETAILS}\r\n`\r\n\r\nexport const MAKE_MOVE = gql`\r\n  mutation makeMove($move: MoveInput!) {\r\n    makeMove(\r\n      move: $move\r\n    ) {\r\n      lastMove {\r\n        success\r\n        message\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const CREATE_GAME = gql`\r\n  mutation createGame {\r\n    createGame {\r\n      board {\r\n        type\r\n        side\r\n      }\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\n// user related\r\nexport const GET_LOGGED_USER = gql`\r\n  query getLoggedUser($token: String) {\r\n    getLoggedUser(\r\n      token: $token\r\n    ) {\r\n      username\r\n      tag\r\n      friends {\r\n        tag\r\n      }\r\n      id\r\n      token\r\n      guest\r\n    }\r\n  }\r\n`\r\n\r\nexport const LOGIN = gql`\r\n  mutation login($username: String!, $password: String!) {\r\n    login(\r\n      username: $username,\r\n      password: $password\r\n    ) {\r\n      username\r\n      tag\r\n      friends {\r\n        tag\r\n      }\r\n      token\r\n      guest\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nexport const ADD_USER = gql`\r\n  mutation addUser($user: NewUserInput!) {\r\n    addUser(\r\n      user: $user\r\n    ) {\r\n      username\r\n      tag\r\n      id\r\n      friends {\r\n        tag\r\n      }\r\n    }\r\n  }\r\n`","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport App from \"./App\"\n\nimport { ApolloProvider, ApolloClient, InMemoryCache, HttpLink, split } from \"@apollo/client\"\nimport { setContext } from \"@apollo/link-context\"\nimport { getMainDefinition } from \"@apollo/client/utilities\"\nimport { WebSocketLink } from \"@apollo/link-ws\"\n\nconst authLink = setContext((_, { headers }) => {\n  const token = sessionStorage.getItem(\"loggedChessUser\")\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `bearer ${token}` : null\n    }\n  }\n})\n\nlet loc = window.location, wsUri\nif (loc.protocol === \"https:\") {\n  wsUri = \"wss:\"\n} else {\n  wsUri = \"ws:\"\n}\nwsUri += \"//\" + loc.host\nconsole.log(`${wsUri}/graphql`)\n\nconst httpLink = new HttpLink({\n  uri: \"/graphql\"\n})\n\nconst wsLink = new WebSocketLink({\n  uri: `${wsUri}/graphql`,\n  options: {\n    reconnect: true\n  }\n})\n\nconst splitLink = split(\n  ({query}) => {\n    const definition = getMainDefinition(query)\n    return (\n      definition.kind === \"OperationDefinition\" &&\n      definition.operation === \"subscription\"\n    )\n  },\n  wsLink,\n  authLink.concat(httpLink),\n)\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: splitLink,\n  connectToDevTools: true,\n})\n\n\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Router>\n      <App />\n    </Router>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n)\n","export const handleApolloError = err => {\r\n  if (!err.graphQLErrors || !err.graphQLErrors[0]) {\r\n    console.log(err.message)\r\n    if (err.stack) {\r\n      console.log(err.stack)\r\n    }\r\n  } else {\r\n    console.log(err.graphQLErrors[0].message)\r\n    if (err.graphQLErrors[0].stack) {\r\n      console.log(err.graphQLErrors[0].stack)\r\n    }\r\n  }\r\n}","import { useEffect, useCallback, useState } from \"react\"\r\nimport { useQuery, useMutation, useSubscription, useApolloClient, useLazyQuery } from \"@apollo/client\"\r\nimport {\r\n  GET_GAME,\r\n  MAKE_MOVE,\r\n  GAME_STATE_UPDATED,\r\n  JOIN_GAME, PROMOTE,\r\n  GET_LOGGED_USER,\r\n  SKIP_TURN,\r\n} from \"../queries\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport { handleApolloError } from \"./errorHandlers\"\r\n\r\n// hook that gets the game state\r\nexport const useGame = () => {\r\n  const client = useApolloClient()\r\n  const { id } = useParams()\r\n\r\n  const setGame = newGameData => {\r\n    let gameDataInStore = client.readQuery({ query: GET_GAME, variables: { gameId: id } })\r\n    gameDataInStore = { getGame: newGameData.gameStateUpdated }\r\n  \r\n    /* console.log(\"newGameData:\", newGameData)\r\n    console.log(\"gameState tobe:\", gameDataInStore) */\r\n    client.writeQuery({\r\n      query: GET_GAME,\r\n      data: gameDataInStore,\r\n      variables: { id }\r\n    })\r\n    /* console.log(\"Game state updated with:\", client.readQuery({\r\n      query: GET_GAME,\r\n      variables: { id }\r\n    })) */\r\n  }\r\n\r\n  const initialResult = useQuery(GET_GAME, {\r\n    variables: { gameId: id },\r\n    onError: err => {\r\n      handleApolloError(err)\r\n    },\r\n  })\r\n  const [makeMove] = useMutation(MAKE_MOVE)\r\n  const [promote] = useMutation(PROMOTE)\r\n  const [skipTurn] = useMutation(SKIP_TURN, {\r\n    variables: { gameId: id },\r\n    onError: err => {\r\n      handleApolloError(err)\r\n    }\r\n  })\r\n  const [joinGame] = useMutation(JOIN_GAME, {\r\n    variables: { gameId: id },\r\n    onError: err => {\r\n      handleApolloError(err)\r\n    },\r\n    onCompleted: data => {\r\n      setGame(data)\r\n    }\r\n  })\r\n\r\n  useSubscription(GAME_STATE_UPDATED, {\r\n    onSubscriptionData: ({ subscriptionData }) => {\r\n      setGame(subscriptionData.data)\r\n      /* console.log(\"subscriptionBoard\",subscriptionData.data.gameStateUpdated.board) */\r\n      /* console.log(subscriptionData.data.gameStateUpdated.moveHistory) */\r\n    },\r\n    variables: { gameId: id }\r\n  })\r\n\r\n  useEffect(() => {\r\n    joinGame()\r\n  }, [joinGame])\r\n\r\n  const sendPromotedType = type => {\r\n    promote({ variables: { gameId: id, pieceType: type } })\r\n  }\r\n\r\n  return {\r\n    game: initialResult.loading || initialResult.error ? null : initialResult.data.getGame,\r\n    gameLoading: initialResult.loading,\r\n    gameError: initialResult.error,\r\n    promote: sendPromotedType,\r\n    makeMove: ({ piece, oldLocation, newLocation }) => makeMove({\r\n      variables: { move: { piece, oldLocation, newLocation, gameId: id } }\r\n    }),\r\n    skipTurn,\r\n  }\r\n}\r\n\r\n\r\n\r\n// hook that gets the user\r\nexport const useUser = () => {\r\n  const client = useApolloClient()\r\n  const [token, setToken] = useState(null)\r\n\r\n  // lazy user query\r\n  const [getUser] = useLazyQuery(GET_LOGGED_USER, {\r\n    variables: {\r\n      token: window.localStorage.getItem(\"loggedChessUser\")\r\n        ? window.localStorage.getItem(\"loggedChessUser\")\r\n        : window.sessionStorage.getItem(\"loggedChessUser\")\r\n    },\r\n    onCompleted: data => {\r\n      setUser(data.getLoggedUser)\r\n    },\r\n    onError: err => {\r\n      handleApolloError(err)\r\n    },\r\n  })\r\n  \r\n  // user query\r\n  const { loading, data, error } = useQuery(GET_LOGGED_USER, {\r\n    variables: {\r\n      token: window.localStorage.getItem(\"loggedChessUser\")\r\n        ? window.localStorage.getItem(\"loggedChessUser\")\r\n        : window.sessionStorage.getItem(\"loggedChessUser\")\r\n    },\r\n    onError: err => {\r\n      handleApolloError(err)\r\n    },\r\n  })\r\n\r\n  const removeUser = useCallback(() => {\r\n    console.log(\"logged out\")\r\n    window.localStorage.removeItem(\"loggedChessUser\")\r\n    window.sessionStorage.removeItem(\"loggedChessUser\")\r\n    setToken(null)\r\n    getUser()\r\n    return\r\n  }, [getUser])\r\n\r\n  const setUser = useCallback((user, remember) => {\r\n    let newUserData = { getLoggedUser: user }\r\n\r\n    if (remember) {\r\n      console.log(\"localStorageen meni\")\r\n      window.localStorage.setItem(\"loggedChessUser\", user.token)\r\n    }\r\n    window.sessionStorage.setItem(\"loggedChessUser\", user.token)\r\n\r\n    client.writeQuery({\r\n      query: GET_LOGGED_USER,\r\n      data: newUserData,\r\n      variables: { token: user.token }\r\n    })\r\n\r\n  }, [client])\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setUser(data.getLoggedUser)\r\n      setToken(data.getLoggedUser.token)\r\n    }\r\n  }, [data, setUser])\r\n\r\n  let userDataInStore = null\r\n\r\n  if ((!loading && !error) && token) {\r\n    /* console.log(token) */\r\n    userDataInStore = client.readQuery({\r\n      query: GET_LOGGED_USER,\r\n      variables: { token }\r\n    })\r\n  }\r\n\r\n\r\n  return {\r\n    user: (!loading && !error) && token ? userDataInStore.getLoggedUser : null,\r\n    userLoading: loading,\r\n    userError: error,\r\n    setUser,\r\n    removeUser,\r\n  }\r\n}","import React, { useState, useEffect } from \"react\"\r\nimport { TextField, Button, Checkbox, FormControlLabel, } from \"@material-ui/core\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { LOGIN } from \"../queries\"\r\nimport { useMutation } from \"@apollo/client\"\r\nimport { useUser } from \"../utils/stateHooks\"\r\n\r\n\r\nconst LoginForm = () => {\r\n  const [username, setUsername] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [remember, setRemember] = useState(true)\r\n\r\n  const { setUser } = useUser()\r\n\r\n  const history = useHistory()\r\n\r\n  const [login, loginResult] = useMutation(LOGIN, {\r\n    onError: err => {\r\n      if (!err.graphQLErrors || !err.graphQLErrors[0]) {\r\n        console.log(err.message)\r\n      } else {\r\n        console.log(err.graphQLErrors[0].message)\r\n      }\r\n      setPassword(\"\")\r\n    }\r\n  })\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault()\r\n\r\n    login({ variables: { username, password } })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (loginResult.data) {\r\n      setUsername(\"\")\r\n      setPassword(\"\")\r\n\r\n      setUser(loginResult.data.login, remember)\r\n\r\n      history.push(\"/\")\r\n    }\r\n  }, [loginResult.data, setUser, history, remember])\r\n\r\n  return (\r\n    <div>\r\n      <h2>Kirjaudu sisään</h2>\r\n      <form onSubmit={onSubmit}>\r\n        <div>\r\n          <TextField\r\n            label=\"Käyttäjänimi\"\r\n            onChange={e => {setUsername(e.target.value)}}\r\n            name=\"username\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            label=\"Salasana\"\r\n            type=\"password\"\r\n            onChange={e => {setPassword(e.target.value)}}\r\n            name=\"password\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={remember}\r\n                onChange={() => setRemember(!remember)}\r\n                name=\"rememberMe\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Muista minut\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n            Kirjaudu\r\n          </Button>\r\n        </div>\r\n      </form>\r\n      <div>\r\n        tai\r\n      </div>\r\n      <div>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={() => history.push(\"/register\")}>\r\n          Luo uusi käyttäjä\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm","import React from \"react\"\r\nimport { AppBar, Toolbar, Button, /* Typography */ } from \"@material-ui/core\"\r\nimport { Link, } from \"react-router-dom\"\r\nimport { useUser } from \"../utils/stateHooks\"\r\n\r\nconst Menu = () => {\r\n  /* const { user, removeUser } = useUser() */\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <Button color=\"inherit\" component={Link} to=\"/play\">\r\n          Pelaa\r\n        </Button>\r\n        <Button color=\"inherit\" component={Link} to=\"/info\">\r\n          Ohjeet\r\n        </Button>\r\n        {/* {!user || user.guest \r\n          ?\r\n          <Button color=\"inherit\" component={Link} to=\"/login\">\r\n            Kirjaudu\r\n          </Button>\r\n          :\r\n          <Typography variant=\"subtitle1\" color=\"textPrimary\">\r\n              &quot;{user.tag}&quot; kirjautunut\r\n          </Typography>\r\n        } */}\r\n        {/* {!user || user.guest \r\n          ?\r\n          null\r\n          :\r\n          <Button color=\"inherit\" onClick={() => removeUser()} component={Link} to=\"/\">\r\n            Kirjaudu ulos\r\n          </Button>\r\n        } */}\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nexport default Menu","import React, { useState, useEffect } from \"react\"\r\nimport { TextField, Button, } from \"@material-ui/core\"\r\nimport { useMutation } from \"@apollo/client\"\r\nimport { ADD_USER } from \"../queries\"\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nconst RegisterForm = () => {\r\n  const [username, setUsername] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [confirmation, setConfirmation] = useState(\"\")\r\n  const [tag, setTag] = useState(\"\")\r\n  const history = useHistory()\r\n\r\n  const [addUser, addedResult] = useMutation(ADD_USER, {\r\n    onError: err => {\r\n      console.log(err.graphQLErrors[0].message)\r\n      window.alert(err.graphQLErrors[0].message)\r\n    }\r\n  })\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault()\r\n\r\n    const user = { username, password, tag }\r\n    addUser({ variables: { user } })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (addedResult.data) {\r\n      setUsername(\"\")\r\n      setPassword(\"\")\r\n      setTag(\"\")\r\n\r\n      window.alert(\"Käyttäjä luotu onnistuneesti.\")\r\n      history.push(\"/\")\r\n    }\r\n  }, [addedResult.data, history])\r\n\r\n  return (\r\n    <div>\r\n      <h2>Luo uusi käyttäjä</h2>\r\n      <form onSubmit={onSubmit}>\r\n        <div>\r\n          <TextField\r\n            label=\"Käyttäjänimi\"\r\n            onChange={e => {setUsername(e.target.value)}}\r\n            error={username.length !== 0 && username.length < 2}\r\n            helperText={\r\n              username.length !== 0 && username.length < 2\r\n                ? \"Liian lyhyt\"\r\n                : \"Käyttäjänimesi ei näy muille pelaajille.\"\r\n            }\r\n            required={true}\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            label=\"Pelinimi\"\r\n            onChange={e => {setTag(e.target.value)}}\r\n            helperText=\"Nimi joka näkyy muille pelaajille.\"\r\n            required={true}\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            label=\"Salasana\"\r\n            type=\"password\"\r\n            onChange={e => {setPassword(e.target.value)}}\r\n            error={password.length < 8 && password !== \"\"}\r\n            helperText={\r\n              password.length < 8 && password !== \"\"\r\n                ? \"Liian lyhyt\"\r\n                : null\r\n            }\r\n            required={true}\r\n          />\r\n          <div\r\n            style={{\r\n              paddingTop: 20,\r\n              paddingBottom: 10,\r\n            }}\r\n          >\r\n            <strong>Älä käytä samaa salasanaa, joka sinulla on muilla nettisivuilla. </strong>\r\n            Olen vain opiskelija, ja tämä on ensimmäinen nettiprojektini, joten en voi taata sivuston tietoturvallisuutta.\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            label=\"Salasana uudelleen\"\r\n            type=\"password\"\r\n            onChange={e => {setConfirmation(e.target.value)}}\r\n            error={confirmation !== password}\r\n            helperText={confirmation !== password ? \"Salasanat eivät vastaa toisiaan.\" : null}\r\n            required={true}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n            Luo käyttäjä\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RegisterForm","import React, { useState, useEffect } from \"react\"\r\nimport { Button, Link, Paper } from \"@material-ui/core\"\r\nimport { useMutation } from \"@apollo/client\"\r\nimport { CREATE_GAME } from \"../queries\"\r\nimport { useUser } from \"../utils/stateHooks\"\r\nimport { WHITESQUARE_COLOR, BLACKSQUARE_COLOR } from \"../utils/constants\"\r\n\r\nconst GameMenu = () => {\r\n  const [link, setLink] = useState(null)\r\n  const { user } = useUser()\r\n  const [createGame, createResult] = useMutation(CREATE_GAME, {\r\n    onError: err => {\r\n      if (!err.graphQLErrors || !err.graphQLErrors[0]) {\r\n        console.log(err.message)\r\n      } else {\r\n        console.log(err.graphQLErrors[0].message)\r\n      }\r\n    }\r\n  })\r\n\r\n  const newGame = () => {\r\n    if (!user) {\r\n      console.log(\"Sinun täytyy kirjautua ennen kuin pelaat\")\r\n    } else {\r\n      createGame()\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (createResult.data) {\r\n      const { id } = createResult.data.createGame\r\n      setLink(`${window.location}/${id}`)\r\n    }\r\n  }, [createResult.data])\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"contained\" onClick={newGame}>\r\n        Peli linkin kautta\r\n      </Button>\r\n      {link\r\n        ?\r\n        <Paper style={{\r\n          background: `linear-gradient(135deg, rgb(${WHITESQUARE_COLOR}), rgb(${BLACKSQUARE_COLOR}))`,\r\n          padding: 10,}}\r\n        >\r\n          Jaa tämä linkki kaverillesi. Sen kautta pääset pelaamaan.{\"  \"}\r\n          <Link href={link}>\r\n            {link}\r\n          </Link>\r\n        </Paper>\r\n        :\r\n        null\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GameMenu","export const SQUARE_SIZE= 70\r\n\r\nexport const WHITESQUARE_COLOR = \"29, 240, 201\"\r\nexport const BLACKSQUARE_COLOR = \"25, 145, 123\"\r\nexport const HIGHLIGHTED_COLOR = \"17, 209, 97\"\r\n\r\nexport const baseUrl = \"\"","import React, { useState } from \"react\"\r\n//import { SQUARE_HEIGHT, SQUARE_WIDTH } from \"../globals\"\r\nimport blackKing from \"../../sprites/blackking.svg\"\r\nimport blackQueen from \"../../sprites/blackqueen.svg\"\r\nimport blackRook from \"../../sprites/blackrook.svg\"\r\nimport blackBishop from \"../../sprites/blackbishop.svg\"\r\nimport blackKnight from \"../../sprites/blackknight.svg\"\r\nimport blackPawn from \"../../sprites/blackpawn.svg\"\r\nimport whiteKing from \"../../sprites/whiteking.svg\"\r\nimport whiteQueen from \"../../sprites/whitequeen.svg\"\r\nimport whiteRook from \"../../sprites/whiterook.svg\"\r\nimport whiteBishop from \"../../sprites/whitebishop.svg\"\r\nimport whiteKnight from \"../../sprites/whiteknight.svg\"\r\nimport whitePawn from \"../../sprites/whitepawn.svg\"\r\n\r\n/* const BLACK_COLOR = \"#000000\"\r\nconst WHITE_COLOR = \"#ffffff\" */\r\n\r\nconst pieceStyle = {\r\n  width: 65,\r\n  height: 65,\r\n  //display: \"table-cell\",\r\n  verticalAlign: \"middle\",\r\n}\r\nexport const getImgSrc = (type, side) => {\r\n  if (type === \"king\" && side === \"black\") {\r\n    return blackKing\r\n  } else if (type === \"queen\" && side === \"black\") {\r\n    return blackQueen\r\n  } else if (type === \"bishop\" && side === \"black\") {\r\n    return blackBishop\r\n  } else if (type === \"rook\" && side === \"black\") {\r\n    return blackRook\r\n  } else if (type === \"knight\" && side === \"black\") {\r\n    return blackKnight\r\n  } else if (type === \"pawn\" && side === \"black\") {\r\n    return blackPawn\r\n  } else if (type === \"king\" && side === \"white\") {\r\n    return whiteKing\r\n  } else if (type === \"queen\" && side === \"white\") {\r\n    return whiteQueen\r\n  } else if (type === \"bishop\" && side === \"white\") {\r\n    return whiteBishop\r\n  } else if (type === \"rook\" && side === \"white\") {\r\n    return whiteRook\r\n  } else if (type === \"knight\" && side === \"white\") {\r\n    return whiteKnight\r\n  } else if (type === \"pawn\" && side === \"white\") {\r\n    return whitePawn\r\n  }\r\n}\r\n\r\nlet dragged\r\n\r\n\r\n\r\n// functionality of a piece\r\n\r\nconst Piece = ({ style, id, side, type }) => {\r\n  const [opacity,/*  setOpacity */] = useState(1)\r\n\r\n  /* const handleDragStart = event => {\r\n    // dragged määritellään\r\n    dragged = event.target\r\n    setOpacity(0.5)\r\n    console.log(\"dragged:\", dragged)\r\n  }\r\n\r\n  const handleDragEnd = event => {\r\n    setOpacity(1)\r\n  } */\r\n\r\n\r\n  return (\r\n    <img\r\n      style={{ ...style, opacity }}\r\n      className=\"piece\"\r\n      draggable=\"false\"\r\n      /* onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd} */\r\n      type={id}\r\n      side={side}\r\n      id={id}\r\n      src={getImgSrc(type, side)}\r\n      alt=\"sprite\"\r\n    >\r\n    </img>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n// pieces\r\n\r\nconst King = ({ side, id }) => {\r\n  const kingStyle = { ...pieceStyle }\r\n\r\n  return (\r\n    <Piece style={kingStyle} id={id} side={side} type=\"king\">\r\n      K\r\n    </Piece>\r\n  )\r\n}\r\n\r\nconst Queen = ({ side, id }) => {\r\n  const queenStyle = { ...pieceStyle }\r\n\r\n  return (\r\n    <Piece style={queenStyle} id={id} side={side} type=\"queen\">\r\n      D\r\n    </Piece>\r\n  )\r\n}\r\n\r\nconst Rook = ({ side, id }) => {\r\n  const rookStyle = { ...pieceStyle }\r\n\r\n  return (\r\n    <Piece style={rookStyle} id={id} side={side} type=\"rook\">\r\n      T\r\n    </Piece>\r\n  )\r\n}\r\n\r\nconst Knight = ({ side, id }) => {\r\n  const knightStyle = { ...pieceStyle }\r\n\r\n  return (\r\n    <Piece style={knightStyle} id={id} side={side} type=\"knight\">\r\n      R\r\n    </Piece>\r\n  )\r\n}\r\n\r\nconst Bishop = ({ side, id }) => {\r\n  const bishopStyle = { ...pieceStyle }\r\n\r\n  return (\r\n    <Piece style={bishopStyle} id={id} side={side} type=\"bishop\">\r\n      L\r\n    </Piece>\r\n  )\r\n}\r\n\r\nconst Pawn = ({ side, id }) => {\r\n  const pawnStyle = { ...pieceStyle }\r\n\r\n  return (\r\n    <Piece style={pawnStyle} id={id} side={side} type=\"pawn\">\r\n      S\r\n    </Piece>\r\n  )\r\n}\r\n\r\n/*Piece.displayName = \"Piece\"\r\nKing.displayName = \"King\"\r\nQueen.displayName = \"Queen\"\r\nRook.displayName = \"Rook\"\r\nKnight.displayName = \"Knight\"\r\nBishop.displayName = \"Bishop\"\r\nPawn.displayName = \"Pawn\"*/\r\n\r\nexport { King, Queen, Rook, Knight, Bishop, Pawn, dragged }","import React, { useState, useEffect, useMemo } from \"react\"\r\nimport {\r\n  SQUARE_SIZE,\r\n  BLACKSQUARE_COLOR,\r\n  WHITESQUARE_COLOR,\r\n  HIGHLIGHTED_COLOR,\r\n} from \"../../utils/constants\"\r\nimport { King, Queen, Rook, Knight, Bishop, Pawn } from \"./pieces\"\r\n\r\n// a single chess square\r\n\r\nconst Square = ({ color, makeMove, location, piece, dragHelperMap, id, highlight }) => {\r\n  const specificColor = useMemo(() => `rgb(${color === \"white\" ? WHITESQUARE_COLOR : BLACKSQUARE_COLOR})`, [color])\r\n  const [squareColor, setSquareColor] = useState(specificColor)\r\n  useEffect(() => {\r\n    if (highlight) {\r\n      setSquareColor(`rgb(${HIGHLIGHTED_COLOR})`)\r\n    } else {\r\n      setSquareColor(specificColor)\r\n    }\r\n  }, [highlight, specificColor])\r\n\r\n  //squarestyles\r\n  const squareStyle = {\r\n    height: SQUARE_SIZE,\r\n    width: SQUARE_SIZE,\r\n    backgroundColor: squareColor,\r\n    textAlign: \"center\",\r\n    background: `radial-gradient(${squareColor}, ${specificColor})`,\r\n  }\r\n  //console.log(squareStyle)\r\n\r\n\r\n  // drop handlers\r\n\r\n  /* const handleDrop = async event => {\r\n    event.preventDefault()\r\n\r\n    const piece = {\r\n      type: dragHelperMap.get(Number(dragged.id)).type,\r\n      side: dragHelperMap.get(Number(dragged.id)).side\r\n    }\r\n    const oldLocation = {\r\n      row: Math.floor(Number(dragged.id) / 8),\r\n      column: Number(dragged.id) % 8\r\n    }\r\n    const newLocation = location\r\n\r\n    if (event.target.className === \"square\") {\r\n      setSquareColor(specificColor)\r\n    } else if (event.target.className === \"piece\") {\r\n      setSquareColor(specificColor)\r\n    }\r\n\r\n    try {\r\n      const res = await makeMove({ piece, oldLocation, newLocation })\r\n      if (!res.data.makeMove.lastMove.success) {\r\n        console.log(res.data.makeMove.lastMove.message)\r\n      }\r\n    } catch (exception) {\r\n      console.log(exception.message)\r\n    }\r\n  }\r\n\r\n  const handleDragEnter = event => {\r\n    if (event.target.className === \"square\") {\r\n      setSquareColor(HIGHLIGHTED_COLOR)\r\n    } else if (event.target.className === \"piece\") {\r\n      setSquareColor(HIGHLIGHTED_COLOR)\r\n    }\r\n  }\r\n\r\n  const handleDragLeave = event => {\r\n    if (event.target.className === \"square\" && event.relatedTarget.className !== \"piece\") {\r\n      if (event.target.id === \"white\") {\r\n        setSquareColor(specificColor)\r\n      } else {\r\n        setSquareColor(specificColor)\r\n      }\r\n    } else if (event.target.className === \"piece\" && event.relatedTarget.className !== \"square\") {\r\n      if (event.target.parentNode.id === \"white\") {\r\n        setSquareColor(specificColor)\r\n      } else {\r\n        setSquareColor(specificColor)\r\n      }\r\n    }\r\n  } */\r\n\r\n  let pieceToRender\r\n\r\n  if (piece) {\r\n    switch(piece.type) {\r\n\r\n    case \"pawn\":\r\n      pieceToRender = <Pawn side={piece.side} id={8 * location.row + location.column} />\r\n      break\r\n    case \"rook\":\r\n      pieceToRender = <Rook side={piece.side} id={8 * location.row + location.column} />\r\n      break\r\n    case \"knight\":\r\n      pieceToRender = <Knight side={piece.side} id={8 * location.row + location.column} />\r\n      break\r\n    case \"bishop\":\r\n      pieceToRender = <Bishop side={piece.side} id={8 * location.row + location.column} />\r\n      break\r\n    case \"queen\":\r\n      pieceToRender = <Queen side={piece.side} id={8 * location.row + location.column} />\r\n      break\r\n    case \"king\":\r\n      pieceToRender = <King side={piece.side} id={8 * location.row + location.column} />\r\n      break\r\n    default:\r\n      pieceToRender = null\r\n    }\r\n  }\r\n\r\n\r\n  //---------------------------------\r\n  if (pieceToRender) {\r\n    return (\r\n      <td\r\n        id={id}\r\n        style={squareStyle}\r\n        className=\"square\"\r\n        /* onDragLeave={handleDragLeave} */\r\n        /* onDragOver={event => {event.preventDefault()}} */\r\n        /* onDrop={handleDrop}\r\n        onDragEnter={handleDragEnter} */\r\n      >\r\n        {pieceToRender}\r\n      </td>\r\n    )\r\n  }\r\n  return (\r\n    <td\r\n      id={id}\r\n      style={squareStyle}\r\n      className=\"square\"\r\n      /* onDragLeave={handleDragLeave}\r\n      onDragOver={event => {event.preventDefault()}} */\r\n      /* onDrop={handleDrop}\r\n      onDragEnter={handleDragEnter} */\r\n    />\r\n  )\r\n}\r\n\r\nexport default Square","import React from \"react\"\r\nimport Square from \"./Square\"\r\nimport { SQUARE_SIZE } from \"../../utils/constants\"\r\n\r\n// Chessboard\r\n\r\nconst Board = ({ boardAlignment, board, makeMove, handleClick, chosenPiece }) => {\r\n\r\n  const dragHelperMap = new Map()\r\n  board.forEach((row, i) => {\r\n    row.forEach((piece, j) => {\r\n      dragHelperMap.set(8 * i + j, piece)\r\n    })\r\n  })\r\n\r\n  const squares = Array.from(Array(8), (e, i) => {\r\n    const row = new Array(8)\r\n\r\n    for (let j = 0; j < 8; j++) {\r\n      if ((i + j) % 2 === 0) {\r\n        row[j] = { piece: null, color: \"white\"}\r\n      } else {\r\n        row[j] = { piece: null, color: \"black\"}\r\n      }\r\n    }\r\n\r\n    return row\r\n  })\r\n\r\n  const boardStyle = {\r\n    height: SQUARE_SIZE * 8,\r\n    width: SQUARE_SIZE * 8,\r\n    borderStyle: \"solid\",\r\n    borderColor: \"black\",\r\n    borderWidth: \"2px\",\r\n    background: \"cyan\",\r\n  }\r\n\r\n  //conschece)osenol.log(ePi\r\n\r\n  return (\r\n    <table\r\n      className=\"board\"\r\n      onClick={handleClick}\r\n      cellSpacing=\"0\"\r\n      style={boardStyle}\r\n    >\r\n      <tbody>\r\n        {boardAlignment === \"white\" ? board.map((row, i) => {\r\n          return (\r\n            <tr key={i}>\r\n              <td>{8 - i}</td>\r\n              {\r\n                row.map((piece, j) => {\r\n                  let highlight = false\r\n                  if (chosenPiece) {\r\n                    chosenPiece.availableMoves.forEach(move => {\r\n                      if (move.newLocation.row === i && move.newLocation.column === j) {\r\n                        highlight = true\r\n                      }\r\n                    })\r\n                    if (chosenPiece.location.row === i && chosenPiece.location.column === j) {\r\n                      highlight = true\r\n                    }\r\n                  }\r\n                  return <Square\r\n                    key={8 * i + j}\r\n                    id={8 * i + j}\r\n                    color={squares[i][j].color}\r\n                    makeMove={makeMove}\r\n                    location={{ row: i, column: j }}\r\n                    piece={piece}\r\n                    dragHelperMap={dragHelperMap}\r\n                    highlight={highlight}\r\n                  />\r\n                })\r\n              }\r\n            </tr>\r\n          )\r\n        }) : board.map((row, i) => {\r\n          return (\r\n            <tr key={i}>\r\n              <td>{i + 1}</td>\r\n              {\r\n                row.map((piece, j) => {\r\n                  let highlight = false\r\n                  if (chosenPiece) {\r\n                    chosenPiece.availableMoves.forEach(move => {\r\n                      if (move.newLocation.row === 7 - i && move.newLocation.column === 7 - j) {\r\n                        highlight = true\r\n                      }\r\n                    })\r\n                    if (chosenPiece.location.row === 7 - i && chosenPiece.location.column === 7 - j) {\r\n                      highlight = true\r\n                    }\r\n                  }\r\n                  return <Square\r\n                    key={8 * (7 - i) + (7 - j)}\r\n                    id={8 * (7 - i) + (7 - j)}\r\n                    color={squares[7 - i][7 - j].color}\r\n                    makeMove={makeMove}\r\n                    location={{ row: (7 - i), column: (7 - j) }}\r\n                    piece={board[7 - i][7 - j]}\r\n                    dragHelperMap={dragHelperMap}\r\n                    highlight={highlight}\r\n                  />\r\n                })\r\n              }\r\n            </tr>\r\n          )\r\n        })}\r\n        {boardAlignment === \"white\" \r\n          ?\r\n          <tr>\r\n            <td></td>\r\n            <td>A</td>\r\n            <td>B</td>\r\n            <td>C</td>\r\n            <td>D</td>\r\n            <td>E</td>\r\n            <td>F</td>\r\n            <td>G</td>\r\n            <td>H</td>\r\n          </tr>\r\n          :\r\n          <tr>\r\n            <td></td>\r\n            <td>H</td>\r\n            <td>G</td>\r\n            <td>F</td>\r\n            <td>E</td>\r\n            <td>D</td>\r\n            <td>C</td>\r\n            <td>B</td>\r\n            <td>A</td>\r\n          </tr>\r\n        }\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport default Board","import React, { useState, useEffect } from \"react\"\r\nimport { useUser } from \"../../utils/stateHooks\"\r\nimport { Button, Paper, makeStyles, Typography } from \"@material-ui/core\"\r\nimport { WHITESQUARE_COLOR, BLACKSQUARE_COLOR } from \"../../utils/constants\"\r\n\r\nconst useStyles = makeStyles({\r\n  turnText: {\r\n    background: `linear-gradient(135deg, rgb(${WHITESQUARE_COLOR}), rgb(${BLACKSQUARE_COLOR}))`,\r\n    padding: 10,\r\n    height: \"8vh\",\r\n    width: \"40vh\",\r\n    textAlign: \"center\",\r\n  }\r\n})\r\n\r\nconst GameText = ({game: { check, currentPlayer, gameOver, promotionPlayerID, winner, blackPlayer }, promote }) => {\r\n  const { user, userLoading } = useUser()\r\n  const [text, setText] = useState(\"Odotetaan, että vastustaja liityy peliin.\")\r\n  const [emphasize, setEmphasize] = useState(false)\r\n  const classes = useStyles()\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      if (!blackPlayer) {\r\n        setEmphasize(false)\r\n        setText(\"Odotetaan, että vastustaja liityy peliin.\")\r\n      } else if (!gameOver) {\r\n        if (user.id === currentPlayer) {\r\n          if (check && check.threatenedPlayer === user.id) {\r\n            setText(\"On sinun vuorosi. Shakki!\")\r\n          } else {\r\n            setText(\"On sinun vuorosi.\")\r\n          }\r\n          setEmphasize(true)\r\n        } else {\r\n          if (check && check.threatenedPlayer !== user.id) {\r\n            setText(\"Odotetaan vastustajan siirtoa. Shakki!\")\r\n          } else {\r\n            setText(\"Odotetaan vastustajan siirtoa.\")\r\n          }\r\n          setEmphasize(false)\r\n        }\r\n      } else {\r\n        if (winner === user.id) {\r\n          setText(\"Voitit pelin! Onneksi olkoon!\")\r\n        } else {\r\n          setText(\"Ootko paska ku hävisit :D\")\r\n        }\r\n        setEmphasize(true)\r\n      }\r\n    }\r\n  }, [setText, blackPlayer, gameOver, currentPlayer, user, winner, check])\r\n\r\n  if (userLoading) {\r\n    return \"loading...\"\r\n  }\r\n\r\n  return (\r\n    <div className=\"gameText\">\r\n      <Paper className={classes.turnText}>\r\n        <Typography variant={emphasize ? \"h4\" : \"subtitle1\"}>\r\n          {text}\r\n        </Typography>\r\n      </Paper>\r\n      <div>\r\n        {\r\n          user.id === promotionPlayerID\r\n            ?\r\n            <div>\r\n              Valitse nappula, joksi haluat muuttaa sotilaan{\" \"}\r\n              <Button onClick={() => promote(\"queen\")}>\r\n                Kuningatar\r\n              </Button>\r\n              <Button onClick={() => promote(\"knight\")}>\r\n                Ratsu\r\n              </Button>\r\n            </div>\r\n            :\r\n            null\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GameText","import React, { useState } from \"react\"\r\nimport { getImgSrc } from \"./pieces\"\r\nimport { Button, makeStyles, Typography, Paper } from \"@material-ui/core\"\r\nimport { WHITESQUARE_COLOR, BLACKSQUARE_COLOR } from \"../../utils/constants\"\r\n\r\nconst getLocation = (location) => {\r\n  if (location.column === 0) {\r\n    return `A${8 - (location.row)}`\r\n  }\r\n  if (location.column === 1) {\r\n    return `B${8 - (location.row)}`\r\n  }\r\n  if (location.column === 2) {\r\n    return `C${8 - (location.row)}`\r\n  }\r\n  if (location.column === 3) {\r\n    return `D${8 - (location.row)}`\r\n  }\r\n  if (location.column === 4) {\r\n    return `E${8 - (location.row)}`\r\n  }\r\n  if (location.column === 5) {\r\n    return `F${8 - (location.row)}`\r\n  }\r\n  if (location.column === 6) {\r\n    return `G${8 - (location.row)}`\r\n  }\r\n  if (location.column === 7) {\r\n    return `H${8 - (location.row)}`\r\n  } else {\r\n    return \"ErrorLocation\"\r\n  }\r\n}\r\n\r\n/* const useStyles = makeStyles({\r\n  moves: {\r\n    background: `rgb(${WHITESQUARE_COLOR})`,\r\n  }\r\n}) */\r\n\r\nconst Move = ({ move, emphasize }) => {\r\n  const emphasizeStyle = {\r\n    borderLeftStyle: \"solid\",\r\n    borderColor: \"blue\",\r\n    borderWidth: \"1px\",\r\n    borderLeftWidth: \"10px\",\r\n\r\n    padding: 10,\r\n    background: \"cyan\",\r\n  }\r\n  const moveStyle = {\r\n    borderLeftStyle: \"solid\",\r\n    borderColor: \"blue\",\r\n    borderWidth: \"1px\",\r\n    borderLeftWidth: \"5px\",\r\n\r\n    margin: 5,\r\n    background: \"cyan\"\r\n  }\r\n  const pieceStyle = emphasize ? {\r\n    height: 60,\r\n    width: 60,\r\n  } : undefined\r\n\r\n  if (move.__typename === \"OrdinaryMove\") {\r\n    return (\r\n      <Paper style={emphasize ? emphasizeStyle : moveStyle}>\r\n        <img\r\n          style={pieceStyle}\r\n          className=\"piece\"\r\n          draggable=\"false\"\r\n          src={getImgSrc(move.piece.type, move.piece.side)}\r\n          alt={move.piece.type}\r\n        />\r\n        {getLocation(move.newLocation)}\r\n      </Paper>\r\n    )\r\n  }\r\n  if (move.__typename === \"CastlingMove\") {\r\n    return (\r\n      <Paper style={emphasize ? emphasizeStyle : moveStyle}>\r\n        Tornitus\r\n      </Paper>\r\n    )\r\n  }\r\n  if (move.__typename === \"PromotionMove\") {\r\n    return (\r\n      <Paper style={emphasize ? emphasizeStyle : moveStyle}>\r\n        {getLocation(move.promotedPiece.location)}\r\n        <img\r\n          style={pieceStyle}\r\n          className=\"piece\"\r\n          draggable=\"false\"\r\n          src={getImgSrc(move.promotedPiece.type, move.promotedPiece.side)}\r\n          alt={move.promotedPiece.type}\r\n        />\r\n        {\"--->\"}\r\n        <img\r\n          style={pieceStyle}\r\n          className=\"piece\"\r\n          draggable=\"false\"\r\n          src={getImgSrc(move.promotedTo, move.promotedPiece.side)}\r\n          alt={move.promotedPiece.type}\r\n        />\r\n      </Paper>\r\n    )\r\n  }\r\n  return (\r\n    <Paper>\r\n      Error\r\n    </Paper>\r\n  )\r\n}\r\n\r\nconst MoveHistory = ({ moveHistory }) => {\r\n  const moveHistoryStyle = {\r\n    overflowY: \"scroll\",\r\n    height: 350,\r\n  }\r\n  return (\r\n    <div className=\"moveHistory\" style={moveHistoryStyle}>\r\n      {moveHistory.map((move, index) => {\r\n\r\n        move = moveHistory[moveHistory.length - 1 - index]\r\n        \r\n        // other moves\r\n        if (index !== 0) {\r\n          return <Move move={move} key={index} />\r\n        } else {\r\n          return null\r\n        }\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst LastMove = ({ moveHistory }) => {\r\n  const [showAll, setShowAll] = useState(false)\r\n  const style = {\r\n    background: `linear-gradient(135deg, rgb(${WHITESQUARE_COLOR}), rgb(${BLACKSQUARE_COLOR}))`,\r\n    padding: \"20px\",\r\n    /* height: \"auto\", */\r\n    /* margin: \"2vh\" */\r\n  }\r\n\r\n  if (moveHistory.length === 0) {\r\n    return (\r\n      <Paper style={style}>\r\n        <Typography variant=\"subtitle2\">\r\n          Siirtoja ei ole vielä tehty\r\n        </Typography>\r\n      </Paper>\r\n    )\r\n  }\r\n\r\n  const lastMove = moveHistory[moveHistory.length - 1]\r\n\r\n  return (\r\n    <Paper style={style}>\r\n      <Typography variant=\"h5\">\r\n        Viimeisin siirto\r\n      </Typography>\r\n      <Move move={lastMove} emphasize={true} />\r\n      <Button variant=\"contained\" onClick={() => setShowAll(!showAll)} color=\"primary\">\r\n        Näytä kaikki siirrot\r\n      </Button>\r\n      {showAll ? <MoveHistory moveHistory={moveHistory} /> : null}\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default LastMove","import { HIGHLIGHTED_COLOR, WHITESQUARE_COLOR, BLACKSQUARE_COLOR } from \"../../utils/constants\"\r\n\r\n// checks is the square is valid to move to\r\nexport const isNotValid = ({ squareNode, pieceToMove, clickedPiece, game, user }) => {\r\n  return (\r\n    squareNode.style.background !== `radial-gradient(rgb(${HIGHLIGHTED_COLOR}), rgb(${BLACKSQUARE_COLOR}))` &&\r\n    squareNode.style.background !== `radial-gradient(rgb(${HIGHLIGHTED_COLOR}), rgb(${WHITESQUARE_COLOR}))`\r\n  ) || \r\n  (\r\n    clickedPiece &&\r\n    clickedPiece.id === pieceToMove.id\r\n  ) ||\r\n  (\r\n    game.gameOver ||\r\n    game.promotionPlayerID\r\n  ) ||\r\n  (\r\n    user.id !== game.currentPlayer\r\n  )\r\n}\r\n\r\n// checks if the piece is valid for movement\r\nexport const isValidPiece = ({ clickedPiece, game, user }) => {\r\n  /* console.log(clickedPiece)\r\n  console.log(game)\r\n  console.log(user) */\r\n  /* console.log(\"user.id === game.currentPlayer\", user.id === game.currentPlayer)\r\n  console.log(\"clickedPiece.side === game.whitePlayer === user.id ? white : black\",clickedPiece.side === (game.whitePlayer === user.id ? \"white\" : \"black\"))\r\n  console.log(\"!game.promotionPlayerID\",!game.promotionPlayerID)\r\n  console.log(\"!game.gameOver\",!game.gameOver) */\r\n  return (\r\n    user.id === game.currentPlayer &&\r\n    clickedPiece.side === (game.whitePlayer === user.id ? \"white\" : \"black\")\r\n  ) &&\r\n  (\r\n    !game.promotionPlayerID &&\r\n    !game.gameOver\r\n  )\r\n}","import React, { useState } from \"react\"\r\nimport { Paper, Button, Typography } from \"@material-ui/core\"\r\nimport { WHITESQUARE_COLOR, BLACKSQUARE_COLOR } from \"../../utils/constants\"\r\n\r\nconst GameButtons = ({ skipTurn, disabled }) => {\r\n  const [showSkipConfirm, setShowSkipConfirm] = useState(false)\r\n\r\n  const style = {\r\n    background: `linear-gradient(135deg, rgb(${WHITESQUARE_COLOR}), rgb(${BLACKSQUARE_COLOR}))`,\r\n    padding: \"20px\",\r\n  }\r\n\r\n  return (\r\n    <Paper style={style}>\r\n      {showSkipConfirm\r\n        ?\r\n        <div>\r\n          <Typography variant=\"subtitle2\">\r\n            Vahvista ohitus?\r\n          </Typography>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              skipTurn()\r\n              setShowSkipConfirm(false)\r\n            }}\r\n            disabled={disabled}\r\n          >\r\n            Ohita\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              setShowSkipConfirm(false)\r\n            }}\r\n          >\r\n            Peruuta\r\n          </Button>\r\n        </div>\r\n        :\r\n        <Button\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          onClick={() => setShowSkipConfirm(true)}\r\n          disabled={disabled}\r\n        >\r\n          Ohita vuoro\r\n        </Button>\r\n      }\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default GameButtons","import React, { useState } from \"react\"\r\nimport { useGame, useUser } from \"../../utils/stateHooks\"\r\nimport { handleApolloError } from \"../../utils/errorHandlers\"\r\nimport Board from \"./Board\"\r\nimport GameText from \"./GameText\"\r\nimport LastMove from \"./LastMove\"\r\nimport { isNotValid, isValidPiece } from \"./gameUtils\"\r\nimport { Grid, makeStyles, CircularProgress } from \"@material-ui/core\"\r\nimport GameButtons from \"./GameButtons\"\r\n\r\nconst useStyles = makeStyles({\r\n  game: {\r\n    //overflowY: \"scroll\",\r\n  }\r\n})\r\n\r\nconst Game = () => {\r\n  const {game, gameLoading, gameError, makeMove, promote, skipTurn } = useGame()\r\n  const { user, userLoading } = useUser()\r\n  const [pieceToMove, setPieceToMove] = useState(null)\r\n  const classes = useStyles()\r\n\r\n  if (gameLoading || userLoading) {\r\n    return <CircularProgress />\r\n  }\r\n  if (!game) {\r\n    return gameError.toString()\r\n  }\r\n  const {\r\n    board,\r\n    whitePlayer,\r\n    moveHistory,\r\n    currentPlayer,\r\n    promotionPlayerID,\r\n    check,\r\n    blackPlayer,\r\n  } = game\r\n\r\n  // handles a click on a piece or a square\r\n  const handleClick = async event => {\r\n    event.preventDefault()\r\n\r\n    let clickedElem = event.target\r\n\r\n    // the user clicked on a piece\r\n    if (clickedElem.className === \"piece\") {\r\n      const clickedPiece = board[Math.floor(Number(clickedElem.id) / 8)][Number(clickedElem.id) % 8]\r\n\r\n      if (pieceToMove) {\r\n        if (isNotValid({\r\n          squareNode: clickedElem.parentNode,\r\n          pieceToMove,\r\n          clickedPiece,\r\n          user,\r\n          game,\r\n        })) {\r\n          setPieceToMove(null)\r\n          return\r\n        }\r\n\r\n        const piece = { type: pieceToMove.type, side: pieceToMove.side }\r\n        const oldLocation = { row: pieceToMove.location.row, column: pieceToMove.location.column }\r\n        const newLocation = { row: clickedPiece.location.row, column: clickedPiece.location.column }\r\n\r\n        try {\r\n          const res = await makeMove({ piece, oldLocation, newLocation })\r\n          if (!res.data.makeMove.lastMove.success) {\r\n            console.log(res.data.makeMove.lastMove.message)\r\n          }\r\n        } catch (exception) {\r\n          handleApolloError(exception)\r\n        }\r\n        setPieceToMove(null)\r\n      } else if (isValidPiece({ clickedPiece, game, user })){\r\n        /* console.log(\"clickedPiece:\", clickedPiece) */\r\n        setPieceToMove(clickedPiece)\r\n      }\r\n\r\n      // the user clicked on a square\r\n    } else if (clickedElem.className === \"square\") {\r\n      const clickedPieceElem = clickedElem.firstChild\r\n      let clickedPiece\r\n      if (clickedPieceElem) {\r\n        clickedPiece = board[Math.floor(Number(clickedPieceElem.id) / 8)][Number(clickedPieceElem.id) % 8]\r\n      }\r\n\r\n      if (pieceToMove) {\r\n        //console.log(clickedElem)\r\n        if (isNotValid({\r\n          squareNode: clickedElem,\r\n          pieceToMove,\r\n          clickedPiece,\r\n          user,\r\n          game,\r\n        })) {\r\n          setPieceToMove(null)\r\n          return\r\n        }\r\n\r\n        const piece = { type: pieceToMove.type, side: pieceToMove.side }\r\n        const oldLocation = { row: pieceToMove.location.row, column: pieceToMove.location.column }\r\n        const newLocation = { row: Math.floor(Number(clickedElem.id) / 8), column: Number(clickedElem.id) % 8 }\r\n\r\n        try {\r\n          const res = await makeMove({ piece, oldLocation, newLocation })\r\n          if (!res.data.makeMove.lastMove.success) {\r\n            console.log(res.data.makeMove.lastMove.message)\r\n          }\r\n        } catch (exception) {\r\n          handleApolloError(exception)\r\n        }\r\n        setPieceToMove(null)\r\n      } else if (clickedPiece && isValidPiece({ clickedPiece, game, user })) {\r\n        setPieceToMove(clickedPiece)\r\n      }\r\n\r\n    } else {\r\n      setPieceToMove(null)\r\n    }\r\n  }\r\n\r\n  /* console.log(\"game rendered with board being:\", board) */\r\n\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"row\"\r\n      //alignItems=\"baseline\"\r\n      justify=\"center\"\r\n      className={classes.game}\r\n      spacing={2}\r\n      wrap=\"wrap\"\r\n    >\r\n      <Grid item xs={3} lg={2}>\r\n        <GameButtons\r\n          skipTurn={skipTurn}\r\n          disabled={\r\n            (user.id !== currentPlayer || promotionPlayerID !== null) || \r\n            (check !== null || (whitePlayer === null || blackPlayer === null))\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={10}\r\n        lg={6}\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        //wrap=\"wrap\"\r\n      >\r\n        <Board\r\n          board={board}\r\n          boardAlignment={user.id === whitePlayer ? \"white\" : \"black\"}\r\n          makeMove={makeMove}\r\n          handleClick={handleClick}\r\n          chosenPiece={pieceToMove}\r\n        />\r\n        <GameText game={game} promote={promote} />\r\n      </Grid>\r\n      <Grid item xs={3} lg={3}>\r\n        <LastMove moveHistory={moveHistory} />\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Game","import React from \"react\"\nimport { Grid, CircularProgress } from \"@material-ui/core\"\nimport { Switch, Route } from \"react-router-dom\"\nimport Footer from \"./components/Footer\"\nimport LoginForm from \"./components/LoginForm\"\nimport Menu from \"./components/Menu\"\nimport RegisterForm from \"./components/RegisterForm\"\nimport GameMenu from \"./components/GameMenu\"\nimport Game from \"./components/chess/Game\"\nimport { useUser } from \"./utils/stateHooks\"\nimport { Container, makeStyles } from \"@material-ui/core\"\n\nconst useStyles = makeStyles({\n  root: {\n    height: \"100%\",\n  }\n})\n\nconst App = () => {\n  const { user } = useUser()\n  const classes = useStyles()\n\n  return (\n    <Container classes={classes}>\n      <Grid\n        container\n        direction=\"column\"\n        alignItems=\"center\"\n        justify=\"space-between\"\n        classes={classes}\n        wrap=\"nowrap\"\n      >\n        <Menu />\n        {user\n          ?\n          <Switch>\n            <Route path=\"/play/:id\">\n              <Game />\n            </Route>\n            <Route path=\"/play\">\n              <GameMenu />\n            </Route>\n            <Route path=\"/login\">\n              <LoginForm />\n            </Route>\n            <Route path=\"/register\">\n              <RegisterForm />\n            </Route>\n          </Switch>\n          : <CircularProgress />\n        }\n        <Footer />\n      </Grid>\n    </Container>\n  )\n}\n\nexport default App\n"],"sourceRoot":""}