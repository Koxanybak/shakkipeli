{"version":3,"sources":["sprites/blackking.svg","sprites/blackqueen.svg","sprites/blackrook.svg","sprites/blackbishop.svg","sprites/blackknight.svg","sprites/blackpawn.svg","sprites/whiteking.svg","sprites/whitequeen.svg","sprites/whiterook.svg","sprites/whitebishop.svg","sprites/whiteknight.svg","sprites/whitepawn.svg","components/Footer.js","queries.js","utils/errorHandlers.js","utils/stateHooks.js","utils/context.js","components/LoginForm.js","components/Feedback.js","components/AddFriendDialog.js","components/ProfileDrawer.js","index.js","components/Menu.js","components/RegisterForm.js","utils/constants.js","components/GameMenu.js","components/chess/pieces.js","components/chess/Square.js","components/chess/Board.js","components/chess/GameText.js","components/chess/LastMove.js","components/chess/gameUtils.js","components/chess/GameButtons.js","components/chess/Game.js","components/Info.js","App.js"],"names":["module","exports","Footer","className","Paper","LOCATION","gql","IDLE_PIECE","MOVED_PIECE","MOVE_HISTORY_ENTRY","GAME_STATE_DETAILS","GET_GAME","SKIP_TURN","GAME_STATE_UPDATED","JOIN_GAME","PROMOTE","MAKE_MOVE","CREATE_GAME","REQUEST_DETAILS","INVITE_DETAILS","USER_DETAILS","GET_LOGGED_USER","LOGIN","ADD_USER","GET_USER_BY_ID","REQUEST_RECEIVED","REQUEST_ACCEPTED","SEND_FRIEND_REQUEST","ACCEPT_FRIEND_REQUEST","DECLINE_FRIEND_REQUEST","REMOVE_FRIEND","INVITE_RECEIVED","INVITE_RESOLVED","SEND_GAME_INVITE","RESOLVE_GAME_INVITE","handleApolloError","err","graphQLErrors","console","log","message","stack","useUser","client","useApolloClient","useState","token","setToken","useQuery","variables","window","localStorage","getItem","sessionStorage","onError","loading","data","error","removeUser","useCallback","a","removeItem","cache","reset","setUser","user","remember","newUserData","getLoggedUser","setItem","writeQuery","query","useEffect","userDataInStore","readQuery","userLoading","userError","useFriends","history","useHistory","addFriend","req","fromMutation","sentRequests","filter","r","id","receivedRequests","friends","find","f","tag","to","concat","from","setReceivedInvs","invList","receivedInvites","setSentInvs","sentInvites","useSubscription","userId","onSubscriptionComplete","onSubscriptionData","subscriptionData","addRecReq","requestReceived","requestAccepted","useMutation","onCompleted","addSentReq","sendFriendRequest","sendReq","sendReqData","acceptFriendRequest","acceptReq","acceptReqData","removeRecReq","declineFriendRequest","declineReq","declineReqData","removeFriend","inviteReceived","inv","inviteResolved","resolveStatus","push","game","sendGameInvite","sendGameInv","resolveGameInvite","resolveGameInv","FeedbackContext","React","createContext","LoginForm","username","setUsername","password","setPassword","setRemember","setFeedback","useContext","severity","login","loginResult","location","reload","style","padding","onSubmit","event","preventDefault","TextField","label","value","onChange","e","target","name","type","FormControlLabel","control","Checkbox","checked","color","Button","variant","onClick","Feedback","feedback","Snackbar","open","autoHideDuration","onClose","Alert","AddFriendDialog","forwardRef","ref","setOpen","setTag","useImperativeHandle","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","displayName","ProfileDrawer","_","show","setShow","friendRef","createRef","openDrawer","sendInvite","resolveInvite","accepted","guest","Fragment","SwipeableDrawer","onOpen","anchor","width","List","ListItem","ListItemText","primary","Divider","length","map","key","secondary","IconButton","requestId","Check","Close","SportsEsports","button","component","Link","ListItemIcon","ExitToApp","current","PersonAdd","wsUri","Menu","profileDrawerRef","AppBar","position","Toolbar","Grid","container","alignItems","justify","item","Typography","Badge","badgeContent","AccountCircle","RegisterForm","confirmation","setConfirmation","addUser","addedResult","background","helperText","required","paddingTop","paddingBottom","GameMenu","link","setLink","createGame","createResult","href","pieceStyle","height","verticalAlign","getImgSrc","side","blackKing","blackQueen","blackBishop","blackRook","blackKnight","blackPawn","whiteKing","whiteQueen","whiteBishop","whiteRook","whiteKnight","whitePawn","Piece","opacity","draggable","src","alt","King","kingStyle","Queen","queenStyle","Rook","rookStyle","Knight","knightStyle","Bishop","bishopStyle","Pawn","pawnStyle","Square","makeMove","piece","dragHelperMap","highlight","specificColor","useMemo","squareColor","setSquareColor","pieceToRender","squareStyle","backgroundColor","textAlign","row","column","Board","boardAlignment","board","handleClick","chosenPiece","Map","forEach","i","j","set","squares","Array","boardStyle","SQUARE_SIZE","borderStyle","borderColor","borderWidth","cellSpacing","availableMoves","move","newLocation","useStyles","makeStyles","turnText","GameText","check","currentPlayer","gameOver","promotionPlayerID","winner","blackPlayer","promote","text","setText","emphasize","setEmphasize","classes","threatenedPlayer","getLocation","Move","emphasizeStyle","borderLeftStyle","borderLeftWidth","moveStyle","margin","undefined","__typename","promotedPiece","promotedTo","MoveHistory","moveHistory","overflowY","index","LastMove","showAll","setShowAll","lastMove","isNotValid","squareNode","pieceToMove","clickedPiece","includes","isValidPiece","whitePlayer","GameButtons","skipTurn","disabled","opponentId","showSkipConfirm","setShowSkipConfirm","opponentData","opponentError","opponentLoading","CircularProgress","marginBottom","getUserById","size","Game","useParams","setGame","newGameData","gameDataInStore","gameId","getGame","gameStateUpdated","initialResult","joinGame","gameLoading","gameError","pieceType","oldLocation","useGame","setPieceToMove","toString","clickedElem","Math","floor","Number","parentNode","res","success","clickedPieceElem","firstChild","direction","spacing","wrap","xs","lg","Info","root","App","Provider","Container","path","authLink","setContext","headers","authorization","loc","protocol","host","httpLink","HttpLink","uri","wsLink","WebSocketLink","options","reconnect","connectionParams","authToken","splitLink","split","definition","getMainDefinition","kind","operation","ApolloClient","InMemoryCache","connectToDevTools","ReactDOM","render","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.fd457723.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blackking.66e1bcad.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackqueen.7b3e33e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackrook.96872a66.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackbishop.1f3b8d1a.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackknight.d39f1d02.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackpawn.1c52d8c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteking.250510ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/whitequeen.4320a2dd.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiterook.095b1a06.svg\";","module.exports = __webpack_public_path__ + \"static/media/whitebishop.09004fd2.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteknight.e6294efe.svg\";","module.exports = __webpack_public_path__ + \"static/media/whitepawn.d69014fb.svg\";","import React from \"react\"\r\nimport { Paper } from \"@material-ui/core\"\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <Paper>\r\n        Student project for Full Stack open 2020. By using this site you accept the use of essential cookies.\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer","import { gql } from \"@apollo/client\"\r\n\r\n\r\n// fragments\r\nconst LOCATION = gql`\r\n  fragment location on Location {\r\n    row\r\n    column\r\n  }\r\n`\r\n\r\nconst IDLE_PIECE = gql`\r\n  fragment idlePiece on Piece {\r\n    type\r\n    side\r\n    location {\r\n      ...location\r\n    }\r\n  }\r\n  ${LOCATION}\r\n`\r\n\r\nconst MOVED_PIECE = gql`\r\n  fragment movedPiece on Piece {\r\n    type\r\n    side\r\n    lastLocation {\r\n      ...location\r\n    }\r\n  }\r\n  ${LOCATION}\r\n`\r\n\r\nconst MOVE_HISTORY_ENTRY = gql`\r\n fragment moveHistoryEntry on MoveHistoryEntry {\r\n   leadToCheck\r\n   wonTheGame\r\n }\r\n`\r\n\r\nconst GAME_STATE_DETAILS = gql`\r\n  fragment gameStateDetails on Game {\r\n    board {\r\n      ...idlePiece\r\n      id\r\n      availableMoves {\r\n        newLocation {\r\n          ...location\r\n        }\r\n      }\r\n    }\r\n    id\r\n    currentPlayer\r\n    whitePlayer\r\n    blackPlayer\r\n    winner\r\n    gameOver\r\n    promotionPlayerID\r\n    check {\r\n      threatenedPlayer\r\n      movesAvailable {\r\n        piece {\r\n          type\r\n          side\r\n        }\r\n        newLocation {\r\n          ...location\r\n        }\r\n      }\r\n    }\r\n    moveHistory {\r\n      ... on CastlingMove {\r\n        piece {\r\n          ...movedPiece\r\n        }\r\n        castledPiece {\r\n          ...movedPiece\r\n        }\r\n      }\r\n      ... on PromotionMove {\r\n        promotedPiece {\r\n          ...idlePiece\r\n        }\r\n        promotedTo\r\n      }\r\n      ... on OrdinaryMove {\r\n        piece {\r\n          ...movedPiece\r\n        }\r\n        pieceEaten {\r\n          ...idlePiece\r\n        }\r\n        newLocation {\r\n          ...location\r\n        }\r\n      }\r\n      ... on SkipMove {\r\n        isSkip\r\n      }\r\n      ...moveHistoryEntry\r\n    }\r\n  }\r\n  ${LOCATION}\r\n  ${IDLE_PIECE}\r\n  ${MOVED_PIECE}\r\n  ${MOVE_HISTORY_ENTRY}\r\n`\r\n/* ${MOVED_PIECE}\r\n  ${MOVE_HISTORY_ENTRY} */\r\n\r\n/* moveHistory {\r\n  ... on OrdinaryMove {\r\n    piece {\r\n      ...movedPiece\r\n    }\r\n    pieceEaten {\r\n      ...idlePiece\r\n    }\r\n    newLocation {\r\n      ...location\r\n    }\r\n  }\r\n  ... on CastlingMove {\r\n    piece {\r\n      ...movedPiece\r\n    }\r\n    castledPiece {\r\n      ...movedPiece\r\n    }\r\n  }\r\n  ... on PromotionMove {\r\n    promotedPiece {\r\n      ...idlePiece\r\n    }\r\n    promotedTo\r\n  }\r\n  ...moveHistoryEntry\r\n} */\r\n\r\n\r\n// mutations and queries\r\n\r\n// game related\r\nexport const GET_GAME = gql`\r\n  query getGame($gameId: String!) {\r\n    getGame(\r\n      gameId: $gameId\r\n    ) {\r\n      ...gameStateDetails\r\n    }\r\n  }\r\n  ${GAME_STATE_DETAILS}\r\n`\r\n\r\nexport const SKIP_TURN = gql`\r\n  mutation skipTurn($gameId: String!) {\r\n    skipTurn(\r\n      gameId: $gameId\r\n    ) {\r\n      ...gameStateDetails\r\n    }\r\n  }\r\n  ${GAME_STATE_DETAILS}\r\n`\r\n\r\nexport const GAME_STATE_UPDATED = gql`\r\n  subscription gameStateUpdated($gameId: String!) {\r\n    gameStateUpdated(\r\n      gameId: $gameId\r\n    ) {\r\n      ...gameStateDetails\r\n    }\r\n  }\r\n  ${GAME_STATE_DETAILS}\r\n`\r\n\r\nexport const JOIN_GAME = gql`\r\n  mutation joinGame($gameId: String!) {\r\n    joinGame(\r\n      gameId: $gameId\r\n    ) {\r\n      ...gameStateDetails\r\n    }\r\n  }\r\n  ${GAME_STATE_DETAILS}\r\n`\r\n\r\nexport const PROMOTE = gql`\r\n  mutation promote($gameId: String!, $pieceType: String!) {\r\n    promote(\r\n      gameId: $gameId,\r\n      pieceType: $pieceType\r\n    ) {\r\n      ...gameStateDetails\r\n    }\r\n  }\r\n  ${GAME_STATE_DETAILS}\r\n`\r\n\r\nexport const MAKE_MOVE = gql`\r\n  mutation makeMove($move: MoveInput!) {\r\n    makeMove(\r\n      move: $move\r\n    ) {\r\n      lastMove {\r\n        success\r\n        message\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const CREATE_GAME = gql`\r\n  mutation createGame {\r\n    createGame {\r\n      board {\r\n        type\r\n        side\r\n      }\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\n// user related\r\n\r\n// fragments\r\nconst REQUEST_DETAILS = gql`\r\n  fragment requestDetails on FriendRequest {\r\n    from {\r\n      tag\r\n    }\r\n    to {\r\n      tag\r\n    }\r\n    id\r\n  }\r\n`\r\nconst INVITE_DETAILS = gql`\r\n  fragment inviteDetails on GameInvite {\r\n    from\r\n    to\r\n    resolveStatus\r\n    game {\r\n      ...gameStateDetails\r\n    }\r\n  }\r\n  ${GAME_STATE_DETAILS}\r\n`\r\nconst USER_DETAILS = gql`\r\n  fragment userDetails on UserWithToken {\r\n    username\r\n    tag\r\n    friends {\r\n      tag\r\n    }\r\n    sentRequests {\r\n      ...requestDetails\r\n    }\r\n    receivedRequests {\r\n      ...requestDetails\r\n    }\r\n    guest\r\n    id\r\n    token\r\n    sentInvites {\r\n      ...inviteDetails\r\n    }\r\n    receivedInvites {\r\n      ...inviteDetails\r\n    }\r\n  }\r\n  ${INVITE_DETAILS}\r\n  ${REQUEST_DETAILS}\r\n`\r\n\r\n// rest\r\nexport const GET_LOGGED_USER = gql`\r\n  query getLoggedUser($token: String) {\r\n    getLoggedUser(\r\n      token: $token\r\n    ) {\r\n      ...userDetails\r\n    }\r\n  }\r\n  ${USER_DETAILS}\r\n`\r\n\r\nexport const LOGIN = gql`\r\n  mutation login($username: String!, $password: String!) {\r\n    login(\r\n      username: $username,\r\n      password: $password\r\n    ) {\r\n      ...userDetails\r\n    }\r\n  }\r\n  ${USER_DETAILS}\r\n`\r\n\r\nexport const ADD_USER = gql`\r\n  mutation addUser($user: NewUserInput!) {\r\n    addUser(\r\n      user: $user\r\n    ) {\r\n      username\r\n      tag\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_USER_BY_ID = gql`\r\n  query getUserById($userId: String) {\r\n    getUserById(\r\n      userId: $userId\r\n    ) {\r\n      tag\r\n    }\r\n  }\r\n`\r\n\r\n// friend related\r\nexport const REQUEST_RECEIVED = gql`\r\n  subscription requestReceived($userId: String) {\r\n    requestReceived(\r\n      userId: $userId\r\n    ) {\r\n      ...requestDetails\r\n    }\r\n  }\r\n  ${REQUEST_DETAILS}\r\n`\r\n\r\nexport const REQUEST_ACCEPTED = gql`\r\n  subscription requestAccepted($userId: String) {\r\n    requestAccepted(\r\n      userId: $userId\r\n    ) {\r\n      ...requestDetails\r\n    }\r\n  }\r\n  ${REQUEST_DETAILS}\r\n`\r\n\r\nexport const SEND_FRIEND_REQUEST = gql`\r\n  mutation sendFriendRequest($tag: String) {\r\n    sendFriendRequest(\r\n      tag: $tag\r\n    ) {\r\n      ...requestDetails\r\n    }\r\n  }\r\n  ${REQUEST_DETAILS}\r\n`\r\n\r\nexport const ACCEPT_FRIEND_REQUEST = gql`\r\n  mutation acceptFriendRequest($requestId: String) {\r\n    acceptFriendRequest(\r\n      requestId: $requestId\r\n    ) {\r\n      ...requestDetails\r\n    }\r\n  }\r\n  ${REQUEST_DETAILS}\r\n`\r\n\r\nexport const DECLINE_FRIEND_REQUEST = gql`\r\n  mutation declineFriendRequest($requestId: String) {\r\n    declineFriendRequest(\r\n      requestId: $requestId\r\n    ) {\r\n      ...requestDetails\r\n    }\r\n  }\r\n  ${REQUEST_DETAILS}\r\n`\r\n\r\nexport const REMOVE_FRIEND = gql`\r\n  mutation removeFriend($tag: String) {\r\n    removeFriend(\r\n      tag: $tag\r\n    )\r\n  }\r\n`\r\n\r\nexport const INVITE_RECEIVED = gql`\r\n  subscription inviteReceived($tag: String) {\r\n    inviteReceived(\r\n      tag: $tag\r\n    ) {\r\n      ...inviteDetails\r\n    }\r\n  }\r\n  ${INVITE_DETAILS}\r\n`\r\n\r\nexport const INVITE_RESOLVED = gql`\r\n  subscription inviteResolved($tag: String) {\r\n    inviteResolved(\r\n      tag: $tag\r\n    ) {\r\n      ...inviteDetails\r\n    }\r\n  }\r\n  ${INVITE_DETAILS}\r\n`\r\n\r\nexport const SEND_GAME_INVITE = gql`\r\n  mutation sendGameInvite($tag: String) {\r\n    sendGameInvite(\r\n      tag: $tag\r\n    ) {\r\n      ...inviteDetails\r\n    }\r\n  }\r\n  ${INVITE_DETAILS}\r\n`\r\n\r\nexport const RESOLVE_GAME_INVITE = gql`\r\n  mutation resolveGameInvite($from: String, $accepted: Boolean) {\r\n    resolveGameInvite(\r\n      from: $from,\r\n      accepted: $accepted\r\n    ) {\r\n      ...inviteDetails\r\n    }\r\n  }\r\n  ${INVITE_DETAILS}\r\n`","export const handleApolloError = err => {\r\n  if (!err.graphQLErrors || !err.graphQLErrors[0]) {\r\n    console.log(err.message)\r\n    if (err.stack) {\r\n      console.log(err.stack)\r\n    }\r\n  } else {\r\n    console.log(err.graphQLErrors[0].message)\r\n    if (err.graphQLErrors[0].stack) {\r\n      console.log(err.graphQLErrors[0].stack)\r\n    }\r\n  }\r\n}","import { useEffect, useCallback, useState } from \"react\"\r\nimport { useQuery, useMutation, useSubscription, useApolloClient, /* useLazyQuery, */ } from \"@apollo/client\"\r\nimport {\r\n  GET_GAME,\r\n  MAKE_MOVE,\r\n  GAME_STATE_UPDATED,\r\n  JOIN_GAME, PROMOTE,\r\n  GET_LOGGED_USER,\r\n  SKIP_TURN,\r\n  REQUEST_RECEIVED,\r\n  REQUEST_ACCEPTED,\r\n  SEND_FRIEND_REQUEST,\r\n  ACCEPT_FRIEND_REQUEST,\r\n  REMOVE_FRIEND,\r\n  DECLINE_FRIEND_REQUEST,\r\n  INVITE_RECEIVED,\r\n  INVITE_RESOLVED,\r\n  SEND_GAME_INVITE,\r\n  RESOLVE_GAME_INVITE,\r\n} from \"../queries\"\r\nimport { useParams, useHistory } from \"react-router-dom\"\r\nimport { handleApolloError } from \"./errorHandlers\"\r\n\r\n// hook that gets the game state\r\nexport const useGame = () => {\r\n  const client = useApolloClient()\r\n  const { id } = useParams()\r\n\r\n  const setGame = newGameData => {\r\n    let gameDataInStore = client.readQuery({ query: GET_GAME, variables: { gameId: id } })\r\n    gameDataInStore = { getGame: newGameData.gameStateUpdated }\r\n  \r\n    /* console.log(\"newGameData:\", newGameData)\r\n    console.log(\"gameState tobe:\", gameDataInStore) */\r\n    client.writeQuery({\r\n      query: GET_GAME,\r\n      data: gameDataInStore,\r\n      variables: { id }\r\n    })\r\n    /* console.log(\"Game state updated with:\", client.readQuery({\r\n      query: GET_GAME,\r\n      variables: { id }\r\n    })) */\r\n  }\r\n\r\n  const initialResult = useQuery(GET_GAME, {\r\n    variables: { gameId: id },\r\n    onError: err => {\r\n      handleApolloError(err)\r\n    },\r\n  })\r\n  const [makeMove] = useMutation(MAKE_MOVE, {\r\n    onError: err => {\r\n      handleApolloError(err)\r\n    }\r\n  })\r\n  const [promote] = useMutation(PROMOTE)\r\n  const [skipTurn] = useMutation(SKIP_TURN, {\r\n    variables: { gameId: id },\r\n    onError: err => {\r\n      handleApolloError(err)\r\n    }\r\n  })\r\n  const [joinGame] = useMutation(JOIN_GAME, {\r\n    variables: { gameId: id },\r\n    onError: err => {\r\n      handleApolloError(err)\r\n    },\r\n    onCompleted: data => {\r\n      setGame(data)\r\n    }\r\n  })\r\n\r\n  useSubscription(GAME_STATE_UPDATED, {\r\n    onSubscriptionData: ({ subscriptionData }) => {\r\n      setGame(subscriptionData.data)\r\n      /* console.log(\"subscriptionBoard\",subscriptionData.data.gameStateUpdated.board) */\r\n      /* console.log(subscriptionData.data.gameStateUpdated.moveHistory) */\r\n    },\r\n    variables: { gameId: id }\r\n  })\r\n\r\n  useEffect(() => {\r\n    joinGame()\r\n  }, [joinGame])\r\n\r\n  const sendPromotedType = type => {\r\n    promote({ variables: { gameId: id, pieceType: type } })\r\n  }\r\n\r\n  return {\r\n    game: initialResult.loading || initialResult.error ? null : initialResult.data.getGame,\r\n    gameLoading: initialResult.loading,\r\n    gameError: initialResult.error,\r\n    promote: sendPromotedType,\r\n    makeMove: ({ piece, oldLocation, newLocation }) => makeMove({\r\n      variables: { move: { piece, oldLocation, newLocation, gameId: id } }\r\n    }),\r\n    skipTurn,\r\n  }\r\n}\r\n\r\n\r\n\r\n// hook that gets the user\r\nexport const useUser = () => {\r\n  const client = useApolloClient()\r\n  const [token, setToken] = useState(null)\r\n\r\n  // lazy user query\r\n  /* const [getUser] = useLazyQuery(GET_LOGGED_USER, {\r\n    variables: {\r\n      token: window.localStorage.getItem(\"loggedChessUser\")\r\n        ? window.localStorage.getItem(\"loggedChessUser\")\r\n        : window.sessionStorage.getItem(\"loggedChessUser\")\r\n    },\r\n    onCompleted: data => {\r\n      setUser(data.getLoggedUser)\r\n    },\r\n    onError: err => {\r\n      handleApolloError(err)\r\n    },\r\n  }) */\r\n  \r\n  // user query\r\n  const { loading, data, error } = useQuery(GET_LOGGED_USER, {\r\n    variables: {\r\n      token: window.localStorage.getItem(\"loggedChessUser\")\r\n        ? window.localStorage.getItem(\"loggedChessUser\")\r\n        : window.sessionStorage.getItem(\"loggedChessUser\")\r\n    },\r\n    onError: err => {\r\n      handleApolloError(err)\r\n    },\r\n  })\r\n\r\n  const removeUser = useCallback(async () => {\r\n    console.log(\"logged out\")\r\n    window.localStorage.removeItem(\"loggedChessUser\")\r\n    window.sessionStorage.removeItem(\"loggedChessUser\")\r\n    /* console.log(window.localStorage.getItem(\"loggedChessUser\"))\r\n    console.log(window.sessionStorage.getItem(\"loggedChessUser\")) */\r\n    setToken(null)\r\n    await client.cache.reset()\r\n    return\r\n  }, [client.cache])\r\n\r\n  const setUser = useCallback((user, remember,) => {\r\n    let newUserData = { getLoggedUser: user }\r\n\r\n    if (remember) {\r\n      window.localStorage.setItem(\"loggedChessUser\", user.token)\r\n    }\r\n    window.sessionStorage.setItem(\"loggedChessUser\", user.token)\r\n\r\n    client.writeQuery({\r\n      query: GET_LOGGED_USER,\r\n      data: newUserData,\r\n      variables: { token: user.token }\r\n    })\r\n    setToken(user.token)\r\n\r\n  }, [client])\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setUser(data.getLoggedUser)\r\n      setToken(data.getLoggedUser.token)\r\n    }\r\n  }, [data, setUser])\r\n\r\n  let userDataInStore = null\r\n\r\n  if ((!loading && !error) && token) {\r\n    /* console.log(token) */\r\n    userDataInStore = client.readQuery({\r\n      query: GET_LOGGED_USER,\r\n      variables: { token }\r\n    })\r\n  }\r\n  //console.log((!loading && !error) && token ? userDataInStore.getLoggedUser : null)\r\n\r\n\r\n  return {\r\n    user: (!loading && !error) && token ? userDataInStore.getLoggedUser : null,\r\n    userLoading: loading,\r\n    userError: error,\r\n    setUser,\r\n    removeUser,\r\n  }\r\n}\r\n\r\n// hook that manages friends\r\nexport const useFriends = (user) => {\r\n  const client = useApolloClient()\r\n  const history = useHistory()\r\n  //console.log(\"used friends with\", user)\r\n\r\n  // cache update funcs\r\n  const addRecReq = (req) => {\r\n    let newUserData = { getLoggedUser: {\r\n      ...user,\r\n      receivedRequests: user.receivedRequests.find(r => r.id === req.id)\r\n        ? user.receivedRequests\r\n        : user.receivedRequests.concat(req),\r\n    } }\r\n    client.writeQuery({\r\n      query: GET_LOGGED_USER,\r\n      data: newUserData,\r\n      variables: { token: user.token },\r\n    })\r\n  }\r\n  const removeRecReq = req => {\r\n    let newUserData = { getLoggedUser: {\r\n      ...user,\r\n      receivedRequests: user.receivedRequests.filter(r => r.id !== req.id)\r\n    } }\r\n    client.writeQuery({\r\n      query: GET_LOGGED_USER,\r\n      data: newUserData,\r\n      variables: { token: user.token },\r\n    })\r\n  }\r\n  const addSentReq = (req) => {\r\n    let newUserData = { getLoggedUser: {\r\n      ...user,\r\n      sentRequests: user.sentRequests.find(r => r.id === req.id)\r\n        ? user.sentRequests\r\n        : user.sentRequests.concat(req),\r\n    } }\r\n    client.writeQuery({\r\n      query: GET_LOGGED_USER,\r\n      data: newUserData,\r\n      variables: { token: user.token },\r\n    })\r\n  }\r\n  const addFriend = (req, fromMutation) => {\r\n    let newUserData = { getLoggedUser: {\r\n      ...user,\r\n      sentRequests: user.sentRequests.filter(r => r.id !== req.id),\r\n      receivedRequests: user.receivedRequests.filter(r => r.id !== req.id),\r\n      friends: user.friends.find(f => f.tag === req.to.tag)\r\n        ? user.friends\r\n        : user.friends.concat(fromMutation ? { tag: req.from.tag } : { tag: req.to.tag }),\r\n    } }\r\n    client.writeQuery({\r\n      query: GET_LOGGED_USER,\r\n      data: newUserData,\r\n      variables: { token: user.token },\r\n    })\r\n  }\r\n  const setReceivedInvs = (invList) => {\r\n    let newUserData = { getLoggedUser: {\r\n      ...user,\r\n      receivedInvites: invList,\r\n    } }\r\n    client.writeQuery({\r\n      query: GET_LOGGED_USER,\r\n      data: newUserData,\r\n      variables: { token: user.token },\r\n    })\r\n  }\r\n  const setSentInvs = (invList) => {\r\n    let newUserData = { getLoggedUser: {\r\n      ...user,\r\n      sentInvites: invList,\r\n    } }\r\n    client.writeQuery({\r\n      query: GET_LOGGED_USER,\r\n      data: newUserData,\r\n      variables: { token: user.token },\r\n    })\r\n  }\r\n\r\n  // subs and mutations\r\n  useSubscription(REQUEST_RECEIVED, {\r\n    variables: { userId: user ? user.id : null },\r\n    onError: err => {\r\n      console.log(\"virhe\")\r\n      handleApolloError(err)\r\n    },\r\n    onSubscriptionComplete: () => {\r\n      console.log(\"Listening to incoming friend requests\")\r\n    },\r\n    onSubscriptionData: ({ subscriptionData }) => {\r\n      console.log(\"Data from req reception:\", subscriptionData)\r\n      addRecReq(subscriptionData.data.requestReceived)\r\n    },\r\n  })\r\n\r\n  useSubscription(REQUEST_ACCEPTED, {\r\n    variables: { userId: user ? user.id : null },\r\n    onError: err => {\r\n      console.log(\"virhe\")\r\n      handleApolloError(err)\r\n    },\r\n    onSubscriptionComplete: () => {\r\n      console.log(\"Listening to accepts to the reqs...\")\r\n    },\r\n    onSubscriptionData: ({ subscriptionData }) => {\r\n      console.log(\"Data from req acception:\", subscriptionData)\r\n      addFriend(subscriptionData.data.requestAccepted)\r\n    },\r\n  })\r\n\r\n  const [sendReq, { data: sendReqData }] = useMutation(SEND_FRIEND_REQUEST, {\r\n    onCompleted: data => {\r\n      addSentReq(data.sendFriendRequest)\r\n    }\r\n  })\r\n  const [acceptReq, { data: acceptReqData }] = useMutation(ACCEPT_FRIEND_REQUEST, {\r\n    onError: err => {\r\n      handleApolloError(err)\r\n    },\r\n    onCompleted: data => {\r\n      addFriend(data.acceptFriendRequest, true)\r\n    }\r\n  })\r\n  const [declineReq, { data: declineReqData }] = useMutation(DECLINE_FRIEND_REQUEST, {\r\n    onError: err => {\r\n      handleApolloError(err)\r\n    },\r\n    onCompleted: data => {\r\n      removeRecReq(data.declineFriendRequest)\r\n    }\r\n  })\r\n  const [removeFriend] = useMutation(REMOVE_FRIEND, {\r\n    onError: err => {\r\n      handleApolloError(err)\r\n    },\r\n  })\r\n\r\n  // game invite stuff\r\n  useSubscription(INVITE_RECEIVED, {\r\n    variables: { tag: user ? user.tag : null },\r\n    onError: err => {\r\n      console.log(\"virhe\")\r\n      handleApolloError(err)\r\n    },\r\n    onSubscriptionData: ({ subscriptionData }) => {\r\n      console.log(\"Data from inv reception:\", subscriptionData)\r\n      if (!user.receivedInvites) {\r\n        setReceivedInvs([subscriptionData.data.inviteReceived])\r\n        console.log(\"were set to\", [subscriptionData.data.inviteReceived])\r\n        return\r\n      }\r\n      if (!user.receivedInvites.find(inv => inv.from === subscriptionData.data.inviteReceived.from)) {\r\n        setReceivedInvs(user.receivedInvites.concat(subscriptionData.data.inviteReceived))\r\n      }\r\n    },\r\n  })\r\n  useSubscription(INVITE_RESOLVED, {\r\n    variables: { tag: user ? user.tag : null },\r\n    onError: err => {\r\n      console.log(\"virhe\")\r\n      handleApolloError(err)\r\n    },\r\n    onSubscriptionData: ({ subscriptionData }) => {\r\n      console.log(\"Data from inv resolving:\", subscriptionData)\r\n      if (!user.sentInvites) {\r\n        setSentInvs([])\r\n      } else {\r\n        setSentInvs(user.sentInvites.filter(inv => {\r\n          return inv.to !== subscriptionData.data.inviteResolved.to\r\n        }))\r\n      }\r\n      if (subscriptionData.data.inviteResolved.resolveStatus === \"accepted\") {\r\n        history.push(\"/\")\r\n        history.push(`play/${subscriptionData.data.inviteResolved.game.id}`)\r\n      }\r\n    },\r\n  })\r\n\r\n  const [sendGameInv] = useMutation(SEND_GAME_INVITE, {\r\n    onCompleted: data => {\r\n      console.log(\"sent inv\", data.sendGameInvite)\r\n      if (!user.receivedInvites || !user.receivedInvites.find(inv => inv.from === data.sendGameInvite.to)) {\r\n        if (!user.sentInvites) {\r\n          setSentInvs([data.sendGameInvite])\r\n        } else if (data.sendGameInvite.resolveStatus === null && !user.sentInvites.find(inv => inv.to === data.sendGameInvite.to))\r\n          setSentInvs(user.sentInvites.concat(data.sendGameInvite))\r\n      }\r\n    }\r\n  })\r\n  const [resolveGameInv] = useMutation(RESOLVE_GAME_INVITE, {\r\n    onError: err => {\r\n      handleApolloError(err)\r\n    },\r\n    onCompleted: data => {\r\n      console.log(\"resolved inv\", data.resolveGameInvite)\r\n      if (!user.receivedInvites) {\r\n        setReceivedInvs([])\r\n      } else {\r\n        setReceivedInvs(user.receivedInvites.filter(inv => {\r\n          return inv.from !== data.resolveGameInvite.from\r\n        }))\r\n      }\r\n      if (data.resolveGameInvite.resolveStatus === \"accepted\") {\r\n        history.push(\"/\")\r\n        history.push(`play/${data.resolveGameInvite.game.id}`)\r\n      }\r\n    }\r\n  })\r\n\r\n  //console.log(\"in friends recinvs\", receivedInvs)\r\n\r\n  return {\r\n    acceptReq,\r\n    acceptReqData,\r\n    sendReq,\r\n    sendReqData,\r\n    removeFriend,\r\n    declineReq,\r\n    declineReqData,\r\n    sendGameInv,\r\n    resolveGameInv,\r\n  }\r\n}","import React from \"react\"\r\n\r\nexport const UserContext = React.createContext(null)\r\n\r\nexport const GameContext = React.createContext(null)\r\n\r\nexport const FeedbackContext = React.createContext(null)","import React, { useState, useEffect, useContext } from \"react\"\r\nimport { TextField, Button, Checkbox, FormControlLabel, Paper, } from \"@material-ui/core\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { LOGIN } from \"../queries\"\r\nimport { useMutation } from \"@apollo/client\"\r\nimport { useUser } from \"../utils/stateHooks\"\r\nimport { FeedbackContext } from \"../utils/context\"\r\n\r\n\r\nconst LoginForm = () => {\r\n  const [username, setUsername] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [remember, setRemember] = useState(true)\r\n  const { setFeedback } = useContext(FeedbackContext)\r\n\r\n  const { setUser } = useUser()\r\n\r\n  const history = useHistory()\r\n\r\n  const [login, loginResult] = useMutation(LOGIN, {\r\n    onError: err => {\r\n      if (!err.graphQLErrors || !err.graphQLErrors[0]) {\r\n        console.log(err.message)\r\n      } else {\r\n        console.log(err.graphQLErrors[0].message)\r\n      }\r\n      setFeedback({ message: err.message, severity: \"error\" })\r\n      setPassword(\"\")\r\n    }\r\n  })\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault()\r\n\r\n    login({ variables: { username, password } })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (loginResult.data) {\r\n      setUsername(\"\")\r\n      setPassword(\"\")\r\n\r\n      setUser(loginResult.data.login, remember)\r\n\r\n      history.push(\"/\")\r\n      window.location.reload(true)\r\n    }\r\n  }, [loginResult.data, setUser, history, remember])\r\n\r\n  return (\r\n    <div>\r\n      <Paper style={{ padding: 10 }}>\r\n        <h2>Kirjaudu sisään</h2>\r\n        <form onSubmit={onSubmit}>\r\n          <div>\r\n            <TextField\r\n              id=\"username\"\r\n              label=\"Käyttäjänimi\"\r\n              value={username}\r\n              onChange={e => {setUsername(e.target.value)}}\r\n              name=\"username\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              id=\"password\"\r\n              label=\"Salasana\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={e => {setPassword(e.target.value)}}\r\n              name=\"password\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={remember}\r\n                  onChange={() => setRemember(!remember)}\r\n                  name=\"rememberMe\"\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"Muista minut\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              id=\"login-button\"\r\n            >\r\n              Kirjaudu\r\n            </Button>\r\n          </div>\r\n        </form>\r\n        <div>\r\n          tai\r\n        </div>\r\n        <div>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={() => history.push(\"/register\")}>\r\n            Luo uusi käyttäjä\r\n          </Button>\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm","import React, { useContext } from \"react\"\r\nimport { Snackbar } from \"@material-ui/core\"\r\nimport { Alert } from \"@material-ui/lab\"\r\nimport { FeedbackContext } from \"../utils/context\"\r\n\r\nconst Feedback = () => {\r\n  const { feedback, setFeedback } = useContext(FeedbackContext)\r\n  /* console.log(feedback)\r\n  console.log(feedback ? true : false) */\r\n  /* console.log(feedback ? feedback.severity : \"info\") */\r\n\r\n  return (\r\n    <Snackbar open={feedback ? true : false} autoHideDuration={6000} onClose={() => setFeedback(null)}>\r\n      <Alert onClose={() => setFeedback(null)} severity={feedback ? feedback.severity : \"info\"}>\r\n        {feedback ? feedback.message : \"\"}\r\n      </Alert>\r\n    </Snackbar>\r\n  )\r\n}\r\n\r\nexport default Feedback","import React, { useState, useContext } from \"react\"\r\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, TextField, DialogActions, Button } from \"@material-ui/core\"\r\nimport { FeedbackContext } from \"../utils/context\"\r\nimport Feedback from \"./Feedback\"\r\n\r\nconst AddFriendDialog = React.forwardRef(({ sendReq }, ref) => {\r\n  const [open, setOpen] = useState(false)\r\n  const [tag, setTag] = useState(\"\")\r\n  const { setFeedback } = useContext(FeedbackContext)\r\n\r\n  React.useImperativeHandle(ref, () => {\r\n    return {\r\n      setOpen\r\n    }\r\n  })\r\n\r\n  const sendFriendRequest = async () => {\r\n    try {\r\n      await sendReq({ variables: { tag } })\r\n      setFeedback({ message: \"Kaveripyyntö lähetetty\", severity: \"success\" })\r\n    } catch (e) {\r\n      console.log(\"löytys vrihe\")\r\n      setFeedback({ message: e.message, severity: \"error\" })\r\n    }\r\n    setTag(\"\")\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} onClose={() => setOpen(false)}>\r\n        <DialogTitle>Lisää kaveri</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Kirjoita tähän kaverisi pelinimi.\r\n          </DialogContentText>\r\n          <TextField\r\n            id=\"add-friend-tag\"\r\n            value={tag}\r\n            label=\"Pelinimi\"\r\n            onChange={e => setTag(e.target.value)}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpen(false)} id=\"friend-request-cancel\">\r\n            Peruuta\r\n          </Button>\r\n          <Button onClick={() => sendFriendRequest()} id=\"friend-request-send\">\r\n            Lisää\r\n          </Button>\r\n        </DialogActions>\r\n        <DialogContent>\r\n          <Feedback />\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n})\r\n\r\nAddFriendDialog.displayName = \"AddFriendDialog\"\r\n\r\nexport default AddFriendDialog","import React, { useState, useImperativeHandle, } from \"react\"\r\nimport { SwipeableDrawer, List, ListItem, ListItemIcon, ListItemText, Link, Divider, IconButton, } from \"@material-ui/core\"\r\nimport { ExitToApp, PersonAdd, Check, Close, SportsEsports, } from \"@material-ui/icons\"\r\nimport AddFriendDialog from \"./AddFriendDialog\"\r\nimport { useUser, useFriends } from \"../utils/stateHooks\"\r\n\r\nconst ProfileDrawer = React.forwardRef((_, ref) => {\r\n  const [show, setShow] = useState(false)\r\n  const {\r\n    user,\r\n    removeUser,\r\n  } = useUser()\r\n  const {\r\n    acceptReq,\r\n    declineReq,\r\n    sendGameInv,\r\n    resolveGameInv,\r\n    sendReq,\r\n  } = useFriends(user)\r\n  const friendRef = React.createRef()\r\n\r\n  const openDrawer = () => {\r\n    setShow(true)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      openDrawer\r\n    }\r\n  })\r\n\r\n  const sendInvite = async tag => {\r\n    if (!user.receivedInvites || !user.receivedInvites.find(inv => inv.from === tag)) {\r\n      await sendGameInv({ variables: { tag } })\r\n    }\r\n  }\r\n\r\n  const resolveInvite = async (from, accepted) => {\r\n    try {\r\n      await resolveGameInv({ variables: { from, accepted, } })\r\n    } catch (e) {\r\n      console.log(e.message)\r\n    }\r\n  }\r\n\r\n  if (user && user.guest) {\r\n    return null\r\n  }\r\n\r\n  //console.log(\"ProfileDrawer is rendered and invs are\", receivedInvs)\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <SwipeableDrawer\r\n        open={show}\r\n        onClose={() => setShow(false)}\r\n        onOpen={() => setShow(true)}\r\n        anchor=\"right\"\r\n      >\r\n        <div style={{ width: \"32vh\" }}>\r\n          <List>\r\n            <ListItem>\r\n              <ListItemText primary={user ? `Kirjautuneena ${user.tag}` : null} />\r\n            </ListItem>\r\n            <Divider />\r\n            {user && user.receivedRequests.length !== 0\r\n              ? <React.Fragment>\r\n                <ListItem>\r\n                  <ListItemText primary=\"Kaveripyynnöt\" />\r\n                </ListItem>\r\n                {user.receivedRequests.map(req => {\r\n                  return (\r\n                    <ListItem key={req.id}>\r\n                      <ListItemText secondary={`Käyttäjältä ${req.from.tag}`} />\r\n                      <IconButton onClick={() => acceptReq({ variables: { requestId: req.id } })}>\r\n                        <Check />\r\n                      </IconButton>\r\n                      <IconButton onClick={() => declineReq({ variables: { requestId: req.id } })}>\r\n                        <Close />\r\n                      </IconButton>\r\n                    </ListItem>\r\n                  )\r\n                })}\r\n                <Divider />\r\n              </React.Fragment>\r\n              : null\r\n            }\r\n            <ListItem>\r\n              <ListItemText primary=\"Kaverit\" />\r\n            </ListItem>\r\n            {user && user.friends.length !== 0\r\n              ? user.friends.map(f => {\r\n                return (\r\n                  <ListItem key={f.tag}>\r\n                    <ListItemText secondary={f.tag} />\r\n                    <IconButton onClick={() => sendInvite(f.tag)}>\r\n                      <SportsEsports />\r\n                    </IconButton>\r\n                  </ListItem>\r\n                )\r\n              })\r\n              : <ListItem>\r\n                <ListItemText secondary=\"Sinulla ei ole vielä kavereita.\" />\r\n              </ListItem>\r\n            }\r\n            <Divider />\r\n            <ListItem>\r\n              <ListItemText primary=\"Lähetetyt pelikutsut\" />\r\n            </ListItem>\r\n            {(user && user.sentInvites) ? user.sentInvites.map(inv => {\r\n              return (\r\n                <ListItem key={inv.to}>\r\n                  <ListItemText secondary={`käyttäjälle ${inv.to}`} />\r\n                </ListItem>\r\n              )\r\n            }) : null}\r\n            <Divider />\r\n            <ListItem>\r\n              <ListItemText primary=\"Vastaanotetut pelikutsut\" />\r\n            </ListItem>\r\n            {(user && user.receivedInvites) ? user.receivedInvites.map(inv => {\r\n              return (\r\n                <ListItem key={inv.from}>\r\n                  <ListItemText secondary={`käyttäjältä ${inv.from}`} />\r\n                  <IconButton onClick={() => resolveInvite(inv.from, true)}>\r\n                    <Check />\r\n                  </IconButton>\r\n                  <IconButton onClick={() => resolveInvite(inv.from, false)}>\r\n                    <Close />\r\n                  </IconButton>\r\n                </ListItem>\r\n              )\r\n            }) : null}\r\n            <Divider />\r\n            <ListItem\r\n              button\r\n              onClick={() => {\r\n                removeUser()\r\n                console.log(\"has been removed\")\r\n                setShow(false)\r\n                window.location.reload()\r\n              }}\r\n              component={Link}\r\n              to=\"/\"\r\n            >\r\n              <ListItemIcon><ExitToApp /></ListItemIcon>\r\n              <ListItemText primary=\"Kirjaudu ulos\" />\r\n            </ListItem>\r\n            <ListItem button onClick={() => friendRef.current.setOpen(true)}>\r\n              <ListItemIcon><PersonAdd /></ListItemIcon>\r\n              <ListItemText primary=\"Lisää kaveri\" />\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemText secondary=\"Huom. kaverilistassa ei näy, onko kaveri paikalla shakkipelissä,\r\n              ja pelikutsu ei saavu perille hänen ollessa poissa.\r\n              Kaveripyynnön lähettäminen onnistuu kyllä, vaikka hän ei olisi paikalla.\" />\r\n            </ListItem>\r\n          </List>\r\n        </div>\r\n      </SwipeableDrawer>\r\n      <AddFriendDialog sendReq={sendReq} ref={friendRef} />\r\n    </React.Fragment>\r\n  )\r\n})\r\n\r\nProfileDrawer.displayName = \"ProfileDrawer\"\r\n\r\nexport default ProfileDrawer","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport App from \"./App\"\n\nimport { ApolloProvider, ApolloClient, InMemoryCache, HttpLink, split } from \"@apollo/client\"\nimport { setContext } from \"@apollo/link-context\"\nimport { getMainDefinition } from \"@apollo/client/utilities\"\nimport { WebSocketLink } from \"@apollo/link-ws\"\n\nconst authLink = setContext((_, { headers }) => {\n  const token = sessionStorage.getItem(\"loggedChessUser\")\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `bearer ${token}` : null\n    }\n  }\n})\n\nlet loc = window.location, wsUri\nif (loc.protocol === \"https:\") {\n  wsUri = \"wss:\"\n} else {\n  wsUri = \"ws:\"\n}\nwsUri += \"//\" + loc.host\n//console.log(`${wsUri}/graphql`)\n\nconst httpLink = new HttpLink({\n  uri: \"/graphql\"\n})\n\nconst wsLink = new WebSocketLink({\n  uri: `${wsUri}/graphql`,\n  options: {\n    reconnect: true,\n    connectionParams: {\n      authToken: sessionStorage.getItem(\"loggedChessUser\")\n        ? `bearer ${sessionStorage.getItem(\"loggedChessUser\")}`\n        : null\n    }\n  }\n})\n\nconst splitLink = split(\n  ({query}) => {\n    const definition = getMainDefinition(query)\n    return (\n      definition.kind === \"OperationDefinition\" &&\n      definition.operation === \"subscription\"\n    )\n  },\n  wsLink,\n  authLink.concat(httpLink),\n)\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: splitLink,\n  connectToDevTools: true,\n})\n\n\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Router>\n      <App />\n    </Router>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n)\n","import React from \"react\"\r\nimport { AppBar, Toolbar, Button, Grid, IconButton, Badge, Typography } from \"@material-ui/core\"\r\nimport { Link, } from \"react-router-dom\"\r\nimport { useUser } from \"../utils/stateHooks\"\r\nimport ProfileDrawer from \"./ProfileDrawer\"\r\nimport { AccountCircle } from \"@material-ui/icons\"\r\n\r\n/* const useStyles = makeStyles(() => ({\r\n  info: {\r\n    marginRight: \"80vh\",\r\n  }\r\n})) */\r\n\r\nconst Menu = () => {\r\n  const { user, } = useUser()\r\n  const profileDrawerRef = React.createRef()\r\n\r\n  //console.log(\"Menu is rendered and invs are\", receivedInvs)\r\n\r\n  const getNotifications = () => {\r\n    if (user) {\r\n      /* console.log(user.receivedRequests ? user.receivedRequests.length : 0)\r\n      console.log(user.receivedInvites ? user.receivedInvites.length : 0)\r\n      console.log(user.sentInvites ? user.sentInvites.length : 0)\r\n      console.log((user.receivedRequests ? user.receivedRequests.length : 0) + \r\n        (user.receivedInvites ? user.receivedInvites.length : 0) + \r\n        (user.sentInvites ? user.sentInvites.length : 0)) */\r\n      return (user.receivedRequests ? user.receivedRequests.length : 0) + \r\n      (user.receivedInvites ? user.receivedInvites.length : 0)\r\n    }\r\n    return 0\r\n  }\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <Grid\r\n          container\r\n          alignItems=\"center\"\r\n          justify=\"space-between\"\r\n        >\r\n          <Grid item>\r\n            <Button color=\"inherit\" component={Link} to=\"/play\">\r\n              Pelaa\r\n            </Button>\r\n            <Button color=\"inherit\" component={Link} to=\"/info\">\r\n              Ohjeet\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"subtitle2\">\r\n              Ongelmatilanteessa sivun uudelleenlaataaminen yleensä auttaa.\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            {!user || user.guest \r\n              ?\r\n              <Button color=\"inherit\" component={Link} to=\"/login\">\r\n                Kirjaudu\r\n              </Button>\r\n              :\r\n              <React.Fragment>\r\n                <IconButton onClick={() => profileDrawerRef.current.openDrawer()} id=\"profile-button\">\r\n                  <Badge badgeContent={getNotifications()} color=\"primary\">\r\n                    <AccountCircle style={{ color: \"white\" }} />\r\n                  </Badge>\r\n                </IconButton>\r\n              </React.Fragment>\r\n            }\r\n          </Grid>\r\n        </Grid>\r\n        <ProfileDrawer\r\n          ref={profileDrawerRef}\r\n        />\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nexport default Menu","import React, { useState, useEffect, useContext } from \"react\"\r\nimport { TextField, Button, Paper, } from \"@material-ui/core\"\r\nimport { useMutation } from \"@apollo/client\"\r\nimport { ADD_USER } from \"../queries\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { WHITESQUARE_COLOR, BLACKSQUARE_COLOR } from \"../utils/constants\"\r\nimport { FeedbackContext } from \"../utils/context\"\r\n\r\nconst RegisterForm = () => {\r\n  const [username, setUsername] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [confirmation, setConfirmation] = useState(\"\")\r\n  const [tag, setTag] = useState(\"\")\r\n  const { setFeedback } = useContext(FeedbackContext)\r\n  const history = useHistory()\r\n\r\n  const [addUser, addedResult] = useMutation(ADD_USER, {\r\n    onError: err => {\r\n      console.log(err.graphQLErrors[0].message)\r\n      setFeedback({ message: err.message, severity: \"error\" })\r\n    }\r\n  })\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault()\r\n\r\n    const user = { username, password, tag }\r\n    addUser({ variables: { user } })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (addedResult.data) {\r\n      setUsername(\"\")\r\n      setPassword(\"\")\r\n      setTag(\"\")\r\n\r\n      setFeedback({ message: \"Käyttäjä luotu onnistuneesti.\", severity: \"success\" })\r\n      history.push(\"/\")\r\n    }\r\n  }, [addedResult.data, history, setFeedback])\r\n\r\n  const style = {\r\n    background: `linear-gradient(135deg, rgb(${WHITESQUARE_COLOR}), rgb(${BLACKSQUARE_COLOR}))`,\r\n    padding: \"20px\",\r\n  }\r\n\r\n  return (\r\n    <Paper style={style}>\r\n      <h2>Luo uusi käyttäjä</h2>\r\n      <form onSubmit={onSubmit}>\r\n        <div>\r\n          <TextField\r\n            label=\"Käyttäjänimi\"\r\n            onChange={e => {setUsername(e.target.value)}}\r\n            error={username.length !== 0 && username.length < 2}\r\n            helperText={\r\n              username.length !== 0 && username.length < 2\r\n                ? \"Liian lyhyt\"\r\n                : \"Käyttäjänimesi ei näy muille pelaajille.\"\r\n            }\r\n            required={true}\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            label=\"Pelinimi\"\r\n            onChange={e => {setTag(e.target.value)}}\r\n            helperText=\"Nimi joka näkyy muille pelaajille.\"\r\n            required={true}\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            label=\"Salasana\"\r\n            type=\"password\"\r\n            onChange={e => {setPassword(e.target.value)}}\r\n            error={password.length < 8 && password !== \"\"}\r\n            helperText={\r\n              password.length < 8 && password !== \"\"\r\n                ? \"Liian lyhyt\"\r\n                : null\r\n            }\r\n            required={true}\r\n          />\r\n          <div\r\n            style={{\r\n              paddingTop: 20,\r\n              paddingBottom: 10,\r\n            }}\r\n          >\r\n            <strong>Älä käytä samaa salasanaa, joka sinulla on muilla nettisivuilla. </strong>\r\n            Olen vain opiskelija, ja tämä on ensimmäinen nettiprojektini, joten en voi taata sivuston tietoturvallisuutta.\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            label=\"Salasana uudelleen\"\r\n            type=\"password\"\r\n            onChange={e => {setConfirmation(e.target.value)}}\r\n            error={confirmation !== password}\r\n            helperText={confirmation !== password ? \"Salasanat eivät vastaa toisiaan.\" : null}\r\n            required={true}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n            Luo käyttäjä\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default RegisterForm","export const SQUARE_SIZE= 70\r\n\r\nexport const WHITESQUARE_COLOR = \"29, 240, 201\"\r\nexport const BLACKSQUARE_COLOR = \"25, 145, 123\"\r\nexport const HIGHLIGHTED_COLOR = \"17, 209, 97\"\r\n\r\nexport const baseUrl = \"\"","import React, { useState, useEffect } from \"react\"\r\nimport { Button, Link, Paper, Typography } from \"@material-ui/core\"\r\nimport { useMutation } from \"@apollo/client\"\r\nimport { CREATE_GAME } from \"../queries\"\r\nimport { useUser } from \"../utils/stateHooks\"\r\nimport { WHITESQUARE_COLOR, BLACKSQUARE_COLOR } from \"../utils/constants\"\r\n\r\nconst GameMenu = () => {\r\n  const [link, setLink] = useState(null)\r\n  const { user } = useUser()\r\n  const [createGame, createResult] = useMutation(CREATE_GAME, {\r\n    onError: err => {\r\n      if (!err.graphQLErrors || !err.graphQLErrors[0]) {\r\n        console.log(err.message)\r\n      } else {\r\n        console.log(err.graphQLErrors[0].message)\r\n      }\r\n    }\r\n  })\r\n\r\n  const newGame = () => {\r\n    if (!user) {\r\n      console.log(\"Sinun täytyy kirjautua ennen kuin pelaat\")\r\n    } else {\r\n      createGame()\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (createResult.data) {\r\n      const { id } = createResult.data.createGame\r\n      setLink(`${window.location}/${id}`)\r\n    }\r\n  }, [createResult.data])\r\n\r\n  return (\r\n    <div>\r\n      <Paper style={{\r\n        background: `linear-gradient(135deg, rgb(${WHITESQUARE_COLOR}), rgb(${BLACKSQUARE_COLOR}))`,\r\n        padding: 10,}}\r\n      >\r\n        {link\r\n          ?\r\n          <React.Fragment>\r\n            <Paper style={{\r\n              background: `linear-gradient(135deg, rgb(${WHITESQUARE_COLOR}), rgb(${BLACKSQUARE_COLOR}))`,\r\n              padding: 10,}}\r\n            >\r\n              Jaa tämä linkki kaverillesi. Sen kautta pääset pelaamaan.{\"  \"}\r\n              <Link href={link}>\r\n                {link}\r\n              </Link>\r\n            </Paper>\r\n            <Typography variant=\"subtitle2\">\r\n              voit myös kirjautua sisään ja kutsua kaverisi peliin profiilivalikosta.\r\n            </Typography>\r\n          </React.Fragment>\r\n          :\r\n          <React.Fragment>\r\n            <Button variant=\"contained\" onClick={newGame}>\r\n              Peli linkin kautta\r\n            </Button>\r\n            <Typography variant=\"subtitle2\">\r\n              tai kirjaudu sisään ja kutsu kaverisi peliin profiilivalikosta.\r\n            </Typography>\r\n          </React.Fragment>\r\n        }\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GameMenu","import React, { useState } from \"react\"\r\n//import { SQUARE_HEIGHT, SQUARE_WIDTH } from \"../globals\"\r\nimport blackKing from \"../../sprites/blackking.svg\"\r\nimport blackQueen from \"../../sprites/blackqueen.svg\"\r\nimport blackRook from \"../../sprites/blackrook.svg\"\r\nimport blackBishop from \"../../sprites/blackbishop.svg\"\r\nimport blackKnight from \"../../sprites/blackknight.svg\"\r\nimport blackPawn from \"../../sprites/blackpawn.svg\"\r\nimport whiteKing from \"../../sprites/whiteking.svg\"\r\nimport whiteQueen from \"../../sprites/whitequeen.svg\"\r\nimport whiteRook from \"../../sprites/whiterook.svg\"\r\nimport whiteBishop from \"../../sprites/whitebishop.svg\"\r\nimport whiteKnight from \"../../sprites/whiteknight.svg\"\r\nimport whitePawn from \"../../sprites/whitepawn.svg\"\r\n\r\n/* const BLACK_COLOR = \"#000000\"\r\nconst WHITE_COLOR = \"#ffffff\" */\r\n\r\nconst pieceStyle = {\r\n  width: 65,\r\n  height: 65,\r\n  //display: \"table-cell\",\r\n  verticalAlign: \"middle\",\r\n}\r\nexport const getImgSrc = (type, side) => {\r\n  if (type === \"king\" && side === \"black\") {\r\n    return blackKing\r\n  } else if (type === \"queen\" && side === \"black\") {\r\n    return blackQueen\r\n  } else if (type === \"bishop\" && side === \"black\") {\r\n    return blackBishop\r\n  } else if (type === \"rook\" && side === \"black\") {\r\n    return blackRook\r\n  } else if (type === \"knight\" && side === \"black\") {\r\n    return blackKnight\r\n  } else if (type === \"pawn\" && side === \"black\") {\r\n    return blackPawn\r\n  } else if (type === \"king\" && side === \"white\") {\r\n    return whiteKing\r\n  } else if (type === \"queen\" && side === \"white\") {\r\n    return whiteQueen\r\n  } else if (type === \"bishop\" && side === \"white\") {\r\n    return whiteBishop\r\n  } else if (type === \"rook\" && side === \"white\") {\r\n    return whiteRook\r\n  } else if (type === \"knight\" && side === \"white\") {\r\n    return whiteKnight\r\n  } else if (type === \"pawn\" && side === \"white\") {\r\n    return whitePawn\r\n  }\r\n}\r\n\r\nlet dragged\r\n\r\n\r\n\r\n// functionality of a piece\r\n\r\nconst Piece = ({ style, id, side, type }) => {\r\n  const [opacity,/*  setOpacity */] = useState(1)\r\n\r\n  /* const handleDragStart = event => {\r\n    // dragged määritellään\r\n    dragged = event.target\r\n    setOpacity(0.5)\r\n    console.log(\"dragged:\", dragged)\r\n  }\r\n\r\n  const handleDragEnd = event => {\r\n    setOpacity(1)\r\n  } */\r\n\r\n\r\n  return (\r\n    <img\r\n      style={{ ...style, opacity }}\r\n      className=\"piece\"\r\n      draggable=\"false\"\r\n      /* onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd} */\r\n      type={id}\r\n      side={side}\r\n      id={id}\r\n      src={getImgSrc(type, side)}\r\n      alt=\"sprite\"\r\n    >\r\n    </img>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n// pieces\r\n\r\nconst King = ({ side, id }) => {\r\n  const kingStyle = { ...pieceStyle }\r\n\r\n  return (\r\n    <Piece style={kingStyle} id={id} side={side} type=\"king\">\r\n      K\r\n    </Piece>\r\n  )\r\n}\r\n\r\nconst Queen = ({ side, id }) => {\r\n  const queenStyle = { ...pieceStyle }\r\n\r\n  return (\r\n    <Piece style={queenStyle} id={id} side={side} type=\"queen\">\r\n      D\r\n    </Piece>\r\n  )\r\n}\r\n\r\nconst Rook = ({ side, id }) => {\r\n  const rookStyle = { ...pieceStyle }\r\n\r\n  return (\r\n    <Piece style={rookStyle} id={id} side={side} type=\"rook\">\r\n      T\r\n    </Piece>\r\n  )\r\n}\r\n\r\nconst Knight = ({ side, id }) => {\r\n  const knightStyle = { ...pieceStyle }\r\n\r\n  return (\r\n    <Piece style={knightStyle} id={id} side={side} type=\"knight\">\r\n      R\r\n    </Piece>\r\n  )\r\n}\r\n\r\nconst Bishop = ({ side, id }) => {\r\n  const bishopStyle = { ...pieceStyle }\r\n\r\n  return (\r\n    <Piece style={bishopStyle} id={id} side={side} type=\"bishop\">\r\n      L\r\n    </Piece>\r\n  )\r\n}\r\n\r\nconst Pawn = ({ side, id }) => {\r\n  const pawnStyle = { ...pieceStyle }\r\n\r\n  return (\r\n    <Piece style={pawnStyle} id={id} side={side} type=\"pawn\">\r\n      S\r\n    </Piece>\r\n  )\r\n}\r\n\r\n/*Piece.displayName = \"Piece\"\r\nKing.displayName = \"King\"\r\nQueen.displayName = \"Queen\"\r\nRook.displayName = \"Rook\"\r\nKnight.displayName = \"Knight\"\r\nBishop.displayName = \"Bishop\"\r\nPawn.displayName = \"Pawn\"*/\r\n\r\nexport { King, Queen, Rook, Knight, Bishop, Pawn, dragged }","import React, { useState, useEffect, useMemo } from \"react\"\r\nimport {\r\n  SQUARE_SIZE,\r\n  BLACKSQUARE_COLOR,\r\n  WHITESQUARE_COLOR,\r\n  HIGHLIGHTED_COLOR,\r\n} from \"../../utils/constants\"\r\nimport { King, Queen, Rook, Knight, Bishop, Pawn } from \"./pieces\"\r\n\r\n// a single chess square\r\n\r\nconst Square = ({ color, makeMove, location, piece, dragHelperMap, id, highlight }) => {\r\n  const specificColor = useMemo(() => `rgb(${color === \"white\" ? WHITESQUARE_COLOR : BLACKSQUARE_COLOR})`, [color])\r\n  const [squareColor, setSquareColor] = useState(specificColor)\r\n  useEffect(() => {\r\n    if (highlight) {\r\n      setSquareColor(`rgb(${HIGHLIGHTED_COLOR})`)\r\n    } else {\r\n      setSquareColor(specificColor)\r\n    }\r\n  }, [highlight, specificColor])\r\n\r\n  //squarestyles\r\n  const squareStyle = {\r\n    height: SQUARE_SIZE,\r\n    width: SQUARE_SIZE,\r\n    backgroundColor: squareColor,\r\n    textAlign: \"center\",\r\n    background: `radial-gradient(${squareColor}, ${specificColor})`,\r\n  }\r\n  //console.log(squareStyle)\r\n\r\n\r\n  // drop handlers\r\n\r\n  /* const handleDrop = async event => {\r\n    event.preventDefault()\r\n\r\n    const piece = {\r\n      type: dragHelperMap.get(Number(dragged.id)).type,\r\n      side: dragHelperMap.get(Number(dragged.id)).side\r\n    }\r\n    const oldLocation = {\r\n      row: Math.floor(Number(dragged.id) / 8),\r\n      column: Number(dragged.id) % 8\r\n    }\r\n    const newLocation = location\r\n\r\n    if (event.target.className === \"square\") {\r\n      setSquareColor(specificColor)\r\n    } else if (event.target.className === \"piece\") {\r\n      setSquareColor(specificColor)\r\n    }\r\n\r\n    try {\r\n      const res = await makeMove({ piece, oldLocation, newLocation })\r\n      if (!res.data.makeMove.lastMove.success) {\r\n        console.log(res.data.makeMove.lastMove.message)\r\n      }\r\n    } catch (exception) {\r\n      console.log(exception.message)\r\n    }\r\n  }\r\n\r\n  const handleDragEnter = event => {\r\n    if (event.target.className === \"square\") {\r\n      setSquareColor(HIGHLIGHTED_COLOR)\r\n    } else if (event.target.className === \"piece\") {\r\n      setSquareColor(HIGHLIGHTED_COLOR)\r\n    }\r\n  }\r\n\r\n  const handleDragLeave = event => {\r\n    if (event.target.className === \"square\" && event.relatedTarget.className !== \"piece\") {\r\n      if (event.target.id === \"white\") {\r\n        setSquareColor(specificColor)\r\n      } else {\r\n        setSquareColor(specificColor)\r\n      }\r\n    } else if (event.target.className === \"piece\" && event.relatedTarget.className !== \"square\") {\r\n      if (event.target.parentNode.id === \"white\") {\r\n        setSquareColor(specificColor)\r\n      } else {\r\n        setSquareColor(specificColor)\r\n      }\r\n    }\r\n  } */\r\n\r\n  let pieceToRender\r\n\r\n  if (piece) {\r\n    switch(piece.type) {\r\n\r\n    case \"pawn\":\r\n      pieceToRender = <Pawn side={piece.side} id={8 * location.row + location.column} />\r\n      break\r\n    case \"rook\":\r\n      pieceToRender = <Rook side={piece.side} id={8 * location.row + location.column} />\r\n      break\r\n    case \"knight\":\r\n      pieceToRender = <Knight side={piece.side} id={8 * location.row + location.column} />\r\n      break\r\n    case \"bishop\":\r\n      pieceToRender = <Bishop side={piece.side} id={8 * location.row + location.column} />\r\n      break\r\n    case \"queen\":\r\n      pieceToRender = <Queen side={piece.side} id={8 * location.row + location.column} />\r\n      break\r\n    case \"king\":\r\n      pieceToRender = <King side={piece.side} id={8 * location.row + location.column} />\r\n      break\r\n    default:\r\n      pieceToRender = null\r\n    }\r\n  }\r\n\r\n\r\n  //---------------------------------\r\n  if (pieceToRender) {\r\n    return (\r\n      <td\r\n        id={id}\r\n        style={squareStyle}\r\n        className=\"square\"\r\n        /* onDragLeave={handleDragLeave} */\r\n        /* onDragOver={event => {event.preventDefault()}} */\r\n        /* onDrop={handleDrop}\r\n        onDragEnter={handleDragEnter} */\r\n      >\r\n        {pieceToRender}\r\n      </td>\r\n    )\r\n  }\r\n  return (\r\n    <td\r\n      id={id}\r\n      style={squareStyle}\r\n      className=\"square\"\r\n      /* onDragLeave={handleDragLeave}\r\n      onDragOver={event => {event.preventDefault()}} */\r\n      /* onDrop={handleDrop}\r\n      onDragEnter={handleDragEnter} */\r\n    />\r\n  )\r\n}\r\n\r\nexport default Square","import React from \"react\"\r\nimport Square from \"./Square\"\r\nimport { SQUARE_SIZE } from \"../../utils/constants\"\r\n\r\n// Chessboard\r\n\r\nconst Board = ({ boardAlignment, board, makeMove, handleClick, chosenPiece }) => {\r\n\r\n  const dragHelperMap = new Map()\r\n  board.forEach((row, i) => {\r\n    row.forEach((piece, j) => {\r\n      dragHelperMap.set(8 * i + j, piece)\r\n    })\r\n  })\r\n\r\n  const squares = Array.from(Array(8), (e, i) => {\r\n    const row = new Array(8)\r\n\r\n    for (let j = 0; j < 8; j++) {\r\n      if ((i + j) % 2 === 0) {\r\n        row[j] = { piece: null, color: \"white\"}\r\n      } else {\r\n        row[j] = { piece: null, color: \"black\"}\r\n      }\r\n    }\r\n\r\n    return row\r\n  })\r\n\r\n  const boardStyle = {\r\n    height: SQUARE_SIZE * 8,\r\n    width: SQUARE_SIZE * 8,\r\n    borderStyle: \"solid\",\r\n    borderColor: \"black\",\r\n    borderWidth: \"2px\",\r\n    background: \"cyan\",\r\n  }\r\n\r\n  //conschece)osenol.log(ePi\r\n\r\n  return (\r\n    <table\r\n      className=\"board\"\r\n      onClick={handleClick}\r\n      cellSpacing=\"0\"\r\n      style={boardStyle}\r\n    >\r\n      <tbody>\r\n        {boardAlignment === \"white\" ? board.map((row, i) => {\r\n          return (\r\n            <tr key={i}>\r\n              <td>{8 - i}</td>\r\n              {\r\n                row.map((piece, j) => {\r\n                  let highlight = false\r\n                  if (chosenPiece) {\r\n                    chosenPiece.availableMoves.forEach(move => {\r\n                      if (move.newLocation.row === i && move.newLocation.column === j) {\r\n                        highlight = true\r\n                      }\r\n                    })\r\n                    if (chosenPiece.location.row === i && chosenPiece.location.column === j) {\r\n                      highlight = true\r\n                    }\r\n                  }\r\n                  return <Square\r\n                    key={8 * i + j}\r\n                    id={8 * i + j}\r\n                    color={squares[i][j].color}\r\n                    makeMove={makeMove}\r\n                    location={{ row: i, column: j }}\r\n                    piece={piece}\r\n                    dragHelperMap={dragHelperMap}\r\n                    highlight={highlight}\r\n                  />\r\n                })\r\n              }\r\n            </tr>\r\n          )\r\n        }) : board.map((row, i) => {\r\n          return (\r\n            <tr key={i}>\r\n              <td>{i + 1}</td>\r\n              {\r\n                row.map((piece, j) => {\r\n                  let highlight = false\r\n                  if (chosenPiece) {\r\n                    chosenPiece.availableMoves.forEach(move => {\r\n                      if (move.newLocation.row === 7 - i && move.newLocation.column === 7 - j) {\r\n                        highlight = true\r\n                      }\r\n                    })\r\n                    if (chosenPiece.location.row === 7 - i && chosenPiece.location.column === 7 - j) {\r\n                      highlight = true\r\n                    }\r\n                  }\r\n                  return <Square\r\n                    key={8 * (7 - i) + (7 - j)}\r\n                    id={8 * (7 - i) + (7 - j)}\r\n                    color={squares[7 - i][7 - j].color}\r\n                    makeMove={makeMove}\r\n                    location={{ row: (7 - i), column: (7 - j) }}\r\n                    piece={board[7 - i][7 - j]}\r\n                    dragHelperMap={dragHelperMap}\r\n                    highlight={highlight}\r\n                  />\r\n                })\r\n              }\r\n            </tr>\r\n          )\r\n        })}\r\n        {boardAlignment === \"white\" \r\n          ?\r\n          <tr>\r\n            <td></td>\r\n            <td>A</td>\r\n            <td>B</td>\r\n            <td>C</td>\r\n            <td>D</td>\r\n            <td>E</td>\r\n            <td>F</td>\r\n            <td>G</td>\r\n            <td>H</td>\r\n          </tr>\r\n          :\r\n          <tr>\r\n            <td></td>\r\n            <td>H</td>\r\n            <td>G</td>\r\n            <td>F</td>\r\n            <td>E</td>\r\n            <td>D</td>\r\n            <td>C</td>\r\n            <td>B</td>\r\n            <td>A</td>\r\n          </tr>\r\n        }\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport default Board","import React, { useState, useEffect } from \"react\"\r\nimport { useUser } from \"../../utils/stateHooks\"\r\nimport { Button, Paper, makeStyles, Typography } from \"@material-ui/core\"\r\nimport { WHITESQUARE_COLOR, BLACKSQUARE_COLOR } from \"../../utils/constants\"\r\n\r\nconst useStyles = makeStyles({\r\n  turnText: {\r\n    background: `linear-gradient(135deg, rgb(${WHITESQUARE_COLOR}), rgb(${BLACKSQUARE_COLOR}))`,\r\n    padding: 10,\r\n    height: \"8vh\",\r\n    width: \"40vh\",\r\n    textAlign: \"center\",\r\n  }\r\n})\r\n\r\nconst GameText = ({game: { check, currentPlayer, gameOver, promotionPlayerID, winner, blackPlayer }, promote }) => {\r\n  const { user, userLoading } = useUser()\r\n  const [text, setText] = useState(\"Odotetaan, että vastustaja liityy peliin.\")\r\n  const [emphasize, setEmphasize] = useState(false)\r\n  const classes = useStyles()\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      if (!blackPlayer) {\r\n        setEmphasize(false)\r\n        setText(\"Odotetaan, että vastustaja liityy peliin.\")\r\n      } else if (!gameOver) {\r\n        if (user.id === currentPlayer) {\r\n          if (check && check.threatenedPlayer === user.id) {\r\n            setText(\"On sinun vuorosi. Shakki!\")\r\n          } else {\r\n            setText(\"On sinun vuorosi.\")\r\n          }\r\n          setEmphasize(true)\r\n        } else {\r\n          if (check && check.threatenedPlayer !== user.id) {\r\n            setText(\"Odotetaan vastustajan siirtoa. Shakki!\")\r\n          } else {\r\n            setText(\"Odotetaan vastustajan siirtoa.\")\r\n          }\r\n          setEmphasize(false)\r\n        }\r\n      } else {\r\n        if (winner === user.id) {\r\n          setText(\"Voitit pelin! Onneksi olkoon!\")\r\n        } else {\r\n          setText(\"Ootko paska ku hävisit :D\")\r\n        }\r\n        setEmphasize(true)\r\n      }\r\n    }\r\n  }, [setText, blackPlayer, gameOver, currentPlayer, user, winner, check])\r\n\r\n  if (userLoading) {\r\n    return \"loading...\"\r\n  }\r\n\r\n  return (\r\n    <div className=\"gameText\">\r\n      <Paper className={classes.turnText}>\r\n        <Typography variant={emphasize ? \"h4\" : \"subtitle1\"}>\r\n          {text}\r\n        </Typography>\r\n      </Paper>\r\n      <div>\r\n        {\r\n          user.id === promotionPlayerID\r\n            ?\r\n            <Paper className={classes.turnText}>\r\n              Valitse nappula, joksi haluat muuttaa sotilaan{\" \"}\r\n              <Button onClick={() => promote(\"queen\")}>\r\n                Kuningatar\r\n              </Button>\r\n              <Button onClick={() => promote(\"knight\")}>\r\n                Ratsu\r\n              </Button>\r\n            </Paper>\r\n            :\r\n            null\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GameText","import React, { useState } from \"react\"\r\nimport { getImgSrc } from \"./pieces\"\r\nimport { Button, Typography, Paper } from \"@material-ui/core\"\r\nimport { WHITESQUARE_COLOR, BLACKSQUARE_COLOR } from \"../../utils/constants\"\r\n\r\nconst getLocation = (location) => {\r\n  if (location.column === 0) {\r\n    return `A${8 - (location.row)}`\r\n  }\r\n  if (location.column === 1) {\r\n    return `B${8 - (location.row)}`\r\n  }\r\n  if (location.column === 2) {\r\n    return `C${8 - (location.row)}`\r\n  }\r\n  if (location.column === 3) {\r\n    return `D${8 - (location.row)}`\r\n  }\r\n  if (location.column === 4) {\r\n    return `E${8 - (location.row)}`\r\n  }\r\n  if (location.column === 5) {\r\n    return `F${8 - (location.row)}`\r\n  }\r\n  if (location.column === 6) {\r\n    return `G${8 - (location.row)}`\r\n  }\r\n  if (location.column === 7) {\r\n    return `H${8 - (location.row)}`\r\n  } else {\r\n    return \"ErrorLocation\"\r\n  }\r\n}\r\n\r\n/* const useStyles = makeStyles({\r\n  moves: {\r\n    background: `rgb(${WHITESQUARE_COLOR})`,\r\n  }\r\n}) */\r\n\r\nconst Move = ({ move, emphasize }) => {\r\n  const emphasizeStyle = {\r\n    borderLeftStyle: \"solid\",\r\n    borderColor: \"blue\",\r\n    borderWidth: \"1px\",\r\n    borderLeftWidth: \"10px\",\r\n\r\n    padding: 10,\r\n    background: \"cyan\",\r\n  }\r\n  const moveStyle = {\r\n    borderLeftStyle: \"solid\",\r\n    borderColor: \"blue\",\r\n    borderWidth: \"1px\",\r\n    borderLeftWidth: \"5px\",\r\n\r\n    margin: 5,\r\n    background: \"cyan\"\r\n  }\r\n  const pieceStyle = emphasize ? {\r\n    height: 60,\r\n    width: 60,\r\n  } : undefined\r\n\r\n  if (move.__typename === \"OrdinaryMove\") {\r\n    return (\r\n      <Paper style={emphasize ? emphasizeStyle : moveStyle}>\r\n        <img\r\n          style={pieceStyle}\r\n          className=\"piece\"\r\n          draggable=\"false\"\r\n          src={getImgSrc(move.piece.type, move.piece.side)}\r\n          alt={move.piece.type}\r\n        />\r\n        {getLocation(move.newLocation)}\r\n      </Paper>\r\n    )\r\n  }\r\n  if (move.__typename === \"CastlingMove\") {\r\n    return (\r\n      <Paper style={emphasize ? emphasizeStyle : moveStyle}>\r\n        Tornitus\r\n      </Paper>\r\n    )\r\n  }\r\n  if (move.__typename === \"PromotionMove\") {\r\n    return (\r\n      <Paper style={emphasize ? emphasizeStyle : moveStyle}>\r\n        {getLocation(move.promotedPiece.location)}\r\n        <img\r\n          style={pieceStyle}\r\n          className=\"piece\"\r\n          draggable=\"false\"\r\n          src={getImgSrc(move.promotedPiece.type, move.promotedPiece.side)}\r\n          alt={move.promotedPiece.type}\r\n        />\r\n        {\"--->\"}\r\n        <img\r\n          style={pieceStyle}\r\n          className=\"piece\"\r\n          draggable=\"false\"\r\n          src={getImgSrc(move.promotedTo, move.promotedPiece.side)}\r\n          alt={move.promotedPiece.type}\r\n        />\r\n      </Paper>\r\n    )\r\n  }\r\n  if (move.__typename === \"SkipMove\") {\r\n    return (\r\n      <Paper style={emphasize ? emphasizeStyle : moveStyle}>\r\n        Vuoro ohitettu.\r\n      </Paper>\r\n    )\r\n  }\r\n  return (\r\n    <Paper>\r\n      Error\r\n    </Paper>\r\n  )\r\n}\r\n\r\nconst MoveHistory = ({ moveHistory }) => {\r\n  const moveHistoryStyle = {\r\n    overflowY: \"scroll\",\r\n    height: 350,\r\n  }\r\n  return (\r\n    <div className=\"moveHistory\" style={moveHistoryStyle}>\r\n      {moveHistory.map((move, index) => {\r\n\r\n        move = moveHistory[moveHistory.length - 1 - index]\r\n        \r\n        // other moves\r\n        if (index !== 0) {\r\n          return <Move move={move} key={index} />\r\n        } else {\r\n          return null\r\n        }\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst LastMove = ({ moveHistory }) => {\r\n  const [showAll, setShowAll] = useState(false)\r\n  const style = {\r\n    background: `linear-gradient(135deg, rgb(${WHITESQUARE_COLOR}), rgb(${BLACKSQUARE_COLOR}))`,\r\n    padding: \"20px\",\r\n    /* height: \"auto\", */\r\n    /* margin: \"2vh\" */\r\n  }\r\n\r\n  if (moveHistory.length === 0) {\r\n    return (\r\n      <Paper style={style}>\r\n        <Typography variant=\"subtitle2\">\r\n          Siirtoja ei ole vielä tehty\r\n        </Typography>\r\n      </Paper>\r\n    )\r\n  }\r\n\r\n  const lastMove = moveHistory[moveHistory.length - 1]\r\n\r\n  return (\r\n    <Paper style={style}>\r\n      <Typography variant=\"h5\">\r\n        Viimeisin siirto\r\n      </Typography>\r\n      <Move move={lastMove} emphasize={true} />\r\n      <Button variant=\"contained\" onClick={() => setShowAll(!showAll)} color=\"primary\">\r\n        Näytä kaikki siirrot\r\n      </Button>\r\n      {showAll ? <MoveHistory moveHistory={moveHistory} /> : null}\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default LastMove","import { HIGHLIGHTED_COLOR, WHITESQUARE_COLOR, BLACKSQUARE_COLOR } from \"../../utils/constants\"\r\n\r\n// checks is the square is valid to move to\r\nexport const isNotValid = ({ squareNode, pieceToMove, clickedPiece, game, user }) => {\r\n  /* console.log(squareNode.style.background !== `radial-gradient(rgb(${HIGHLIGHTED_COLOR}), rgb(${BLACKSQUARE_COLOR}))`)\r\n  console.log(squareNode.style.background !== `radial-gradient(rgb(${HIGHLIGHTED_COLOR}), rgb(${WHITESQUARE_COLOR}))`)\r\n  console.log(squareNode.style.background)\r\n  console.log(!squareNode.style.background.includes(\"radial-gradient\")) */\r\n  return (\r\n    (!squareNode.style.background.includes(`radial-gradient(rgb(${HIGHLIGHTED_COLOR}), rgb(${BLACKSQUARE_COLOR}))`) &&\r\n    !squareNode.style.background.includes(`radial-gradient(rgb(${HIGHLIGHTED_COLOR}), rgb(${WHITESQUARE_COLOR}))`))\r\n  ) || \r\n  (\r\n    clickedPiece &&\r\n    clickedPiece.id === pieceToMove.id\r\n  ) ||\r\n  (\r\n    game.gameOver ||\r\n    game.promotionPlayerID\r\n  ) ||\r\n  (\r\n    user.id !== game.currentPlayer\r\n  )\r\n}\r\n\r\n// checks if the piece is valid for movement\r\nexport const isValidPiece = ({ clickedPiece, game, user }) => {\r\n  /* console.log(clickedPiece)\r\n  console.log(game)\r\n  console.log(user) */\r\n  /* console.log(\"user.id === game.currentPlayer\", user.id === game.currentPlayer)\r\n  console.log(\"clickedPiece.side === game.whitePlayer === user.id ? white : black\",clickedPiece.side === (game.whitePlayer === user.id ? \"white\" : \"black\"))\r\n  console.log(\"!game.promotionPlayerID\",!game.promotionPlayerID)\r\n  console.log(\"!game.gameOver\",!game.gameOver) */\r\n  return ((\r\n    user.id === game.currentPlayer &&\r\n    clickedPiece.side === (game.whitePlayer === user.id ? \"white\" : \"black\")\r\n  ) &&\r\n  (\r\n    !game.promotionPlayerID &&\r\n    !game.gameOver\r\n  )) &&\r\n  (\r\n    game.whitePlayer && game.blackPlayer\r\n  )\r\n}","import React, { useState } from \"react\"\r\nimport { Paper, Button, Typography, CircularProgress } from \"@material-ui/core\"\r\nimport { WHITESQUARE_COLOR, BLACKSQUARE_COLOR } from \"../../utils/constants\"\r\nimport { useQuery } from \"@apollo/client\"\r\nimport { GET_USER_BY_ID } from \"../../queries\"\r\nimport { handleApolloError } from \"../../utils/errorHandlers\"\r\n\r\nconst GameButtons = ({ skipTurn, disabled, opponentId }) => {\r\n  const [showSkipConfirm, setShowSkipConfirm] = useState(false)\r\n  const { data: opponentData, error: opponentError, loading: opponentLoading } = useQuery(GET_USER_BY_ID, {\r\n    variables: { userId: opponentId },\r\n    onError: err => {\r\n      handleApolloError(err)\r\n    }\r\n  })\r\n\r\n  const style = {\r\n    background: `linear-gradient(135deg, rgb(${WHITESQUARE_COLOR}), rgb(${BLACKSQUARE_COLOR}))`,\r\n    padding: \"20px\",\r\n    textAlign: \"center\"\r\n  }\r\n\r\n  /* console.log(\"opponentId:\", opponentId)\r\n  console.log(\"opponentData:\", opponentData)\r\n  console.log(\"opponentError:\", opponentError)\r\n  console.log(\"opponentLoading:\", opponentLoading) */\r\n\r\n  return (\r\n    <Paper style={style}>\r\n      {opponentId\r\n        ?\r\n        (opponentData && !opponentError && !opponentLoading)\r\n          ?\r\n          <Typography style={{ marginBottom: 20 }}>\r\n            Vastustajana <strong>{opponentData.getUserById.tag}</strong>\r\n          </Typography>\r\n          :\r\n          <CircularProgress />\r\n        :\r\n        <Typography style={{ marginBottom: 20 }}>\r\n          Odotetaan vastustajan liittymistä\r\n        </Typography>\r\n      }\r\n      {showSkipConfirm\r\n        ?\r\n        <div>\r\n          <Typography variant=\"subtitle2\">\r\n            Vahvista ohitus?\r\n          </Typography>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              skipTurn()\r\n              setShowSkipConfirm(false)\r\n            }}\r\n            disabled={disabled}\r\n          >\r\n            Ohita\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              setShowSkipConfirm(false)\r\n            }}\r\n          >\r\n            Peruuta\r\n          </Button>\r\n        </div>\r\n        :\r\n        <Button\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          onClick={() => setShowSkipConfirm(true)}\r\n          disabled={disabled}\r\n        >\r\n          Ohita vuoro\r\n        </Button>\r\n      }\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default GameButtons","import React, { useState } from \"react\"\r\nimport { useGame, useUser } from \"../../utils/stateHooks\"\r\nimport { handleApolloError } from \"../../utils/errorHandlers\"\r\nimport Board from \"./Board\"\r\nimport GameText from \"./GameText\"\r\nimport LastMove from \"./LastMove\"\r\nimport { isNotValid, isValidPiece } from \"./gameUtils\"\r\nimport { Grid, makeStyles, CircularProgress } from \"@material-ui/core\"\r\nimport GameButtons from \"./GameButtons\"\r\n\r\nconst useStyles = makeStyles({\r\n  game: {\r\n    //overflowY: \"scroll\",\r\n  }\r\n})\r\n\r\nconst Game = () => {\r\n  const {game, gameLoading, gameError, makeMove, promote, skipTurn } = useGame()\r\n  const { user, userLoading } = useUser()\r\n  const [pieceToMove, setPieceToMove] = useState(null)\r\n  const classes = useStyles()\r\n\r\n  if (gameLoading || userLoading) {\r\n    return <CircularProgress />\r\n  }\r\n  if (!game) {\r\n    return gameError.toString()\r\n  }\r\n  const {\r\n    board,\r\n    whitePlayer,\r\n    moveHistory,\r\n    currentPlayer,\r\n    promotionPlayerID,\r\n    check,\r\n    blackPlayer,\r\n  } = game\r\n\r\n  // handles a click on a piece or a square\r\n  const handleClick = async event => {\r\n    event.preventDefault()\r\n\r\n    let clickedElem = event.target\r\n\r\n    // the user clicked on a piece\r\n    if (clickedElem.className === \"piece\") {\r\n      const clickedPiece = board[Math.floor(Number(clickedElem.id) / 8)][Number(clickedElem.id) % 8]\r\n\r\n      if (pieceToMove) {\r\n        if (isNotValid({\r\n          squareNode: clickedElem.parentNode,\r\n          pieceToMove,\r\n          clickedPiece,\r\n          user,\r\n          game,\r\n        })) {\r\n          setPieceToMove(null)\r\n          return\r\n        }\r\n\r\n        const piece = { type: pieceToMove.type, side: pieceToMove.side }\r\n        const oldLocation = { row: pieceToMove.location.row, column: pieceToMove.location.column }\r\n        const newLocation = { row: clickedPiece.location.row, column: clickedPiece.location.column }\r\n\r\n        try {\r\n          const res = await makeMove({ piece, oldLocation, newLocation })\r\n          if (!res.data.makeMove.lastMove.success) {\r\n            console.log(res.data.makeMove.lastMove.message)\r\n          }\r\n        } catch (exception) {\r\n          handleApolloError(exception)\r\n        }\r\n        setPieceToMove(null)\r\n      } else if (isValidPiece({ clickedPiece, game, user })){\r\n        /* console.log(\"clickedPiece:\", clickedPiece) */\r\n        setPieceToMove(clickedPiece)\r\n        /* console.log(\"piece to move set\") */\r\n      }\r\n\r\n      // the user clicked on a square\r\n    } else if (clickedElem.className === \"square\") {\r\n      const clickedPieceElem = clickedElem.firstChild\r\n      let clickedPiece\r\n      if (clickedPieceElem) {\r\n        clickedPiece = board[Math.floor(Number(clickedPieceElem.id) / 8)][Number(clickedPieceElem.id) % 8]\r\n      }\r\n\r\n      /* console.log(\"clicked on a square\") */\r\n\r\n      if (pieceToMove) {\r\n        //console.log(clickedElem)\r\n        if (isNotValid({\r\n          squareNode: clickedElem,\r\n          pieceToMove,\r\n          clickedPiece,\r\n          user,\r\n          game,\r\n        })) {\r\n          /* console.log(\"was not valid\") */\r\n          setPieceToMove(null)\r\n          return\r\n        }\r\n\r\n        const piece = { type: pieceToMove.type, side: pieceToMove.side }\r\n        const oldLocation = { row: pieceToMove.location.row, column: pieceToMove.location.column }\r\n        const newLocation = { row: Math.floor(Number(clickedElem.id) / 8), column: Number(clickedElem.id) % 8 }\r\n        /* console.log(\"trying to make move\") */\r\n\r\n        try {\r\n          const res = await makeMove({ piece, oldLocation, newLocation })\r\n          if (!res.data.makeMove.lastMove.success) {\r\n            console.log(res.data.makeMove.lastMove.message)\r\n          }\r\n        } catch (exception) {\r\n          handleApolloError(exception)\r\n        }\r\n        setPieceToMove(null)\r\n      } else if (clickedPiece && isValidPiece({ clickedPiece, game, user })) {\r\n        setPieceToMove(clickedPiece)\r\n      }\r\n\r\n    } else {\r\n      setPieceToMove(null)\r\n    }\r\n  }\r\n\r\n  /* console.log(\"game rendered with board being:\", board) */\r\n\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"row\"\r\n      //alignItems=\"baseline\"\r\n      justify=\"center\"\r\n      className={classes.game}\r\n      spacing={2}\r\n      wrap=\"wrap\"\r\n    >\r\n      <Grid item xs={5} lg={2}>\r\n        <GameButtons\r\n          skipTurn={skipTurn}\r\n          disabled={\r\n            (user.id !== currentPlayer || promotionPlayerID !== null) || \r\n            (check !== null || (whitePlayer === null || blackPlayer === null))\r\n          }\r\n          opponentId={user.id === whitePlayer ? blackPlayer : whitePlayer}\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={10}\r\n        lg={6}\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        //wrap=\"wrap\"\r\n      >\r\n        <Board\r\n          board={board}\r\n          boardAlignment={user.id === whitePlayer ? \"white\" : \"black\"}\r\n          makeMove={makeMove}\r\n          handleClick={handleClick}\r\n          chosenPiece={pieceToMove}\r\n        />\r\n        <GameText game={game} promote={promote} />\r\n      </Grid>\r\n      <Grid item xs={3} lg={3}>\r\n        <LastMove moveHistory={moveHistory} />\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Game","import React from \"react\"\r\nimport { makeStyles, Paper } from \"@material-ui/core\"\r\nimport { WHITESQUARE_COLOR, BLACKSQUARE_COLOR } from \"../utils/constants\"\r\n\r\nconst useStyles = makeStyles({\r\n  turnText: {\r\n    background: `linear-gradient(135deg, rgb(${WHITESQUARE_COLOR}), rgb(${BLACKSQUARE_COLOR}))`,\r\n    padding: 10,\r\n    /* textAlign: \"center\", */\r\n  }\r\n})\r\n\r\nconst Info = () => {\r\n  const classes = useStyles()\r\n  return (\r\n    <Paper className={classes.turnText}>\r\n      - Shakkia pääsee pelaamaan klikaamalla &rdquo;pelaa&rdquo; -nappia ja sitten klikaamalla &rdquo;peli linkin kautta&rdquo; ja klikaamalla sen antamaa linkkiä.<br></br> Linkki (tai sen viemän osoite) pitää jakaa kaverille, ja sitten voitte pelata.<br></br>\r\n(HUOM. Shakkia ei voi pelata yksin, tosin linkin voi avata toiselle välilehdelle ja siten voi pelata yksin)<br></br><br></br>\r\n\r\n- Toinen tapa päästä peliin on luoda käyttäjä ja kirjautua sisään. Sen jälkeen voit lähettää kaveripyynnöön toiselle käyttäjälle ja kutsua tämän peliin profiilivalikosta.<br></br>\r\n(HUOM. Kaverilista ei näytä, ovatko kaverit paikalla nettisivulla vai eivät, ja pelikutsua ei saavu perille heidän ollessa poissa. Kaveripyyntö saapuu perille, vaikka he olisivatkin &rdquo;offline&rdquo;)<br></br>\r\n(HUOM. Kirjautuessa jos jätät &rdquo;muista minut&rdquo; ruksitetuksi, olet kirjautuneena kaikilla välilehdillä, etkä voi pelata silloin voi itseäsi vastaan kahdella välilehdellä)<br></br><br></br>\r\n\r\n- Shakin pitäisi noudattaa kaikkia shakin sääntöjä lukuunottamatta sitä, että vuoron voi halutessa ohittaa, jos ei ole shakkitilannetta.\r\nTämä on pelissä siksi, että normaliisti tilanteessa, jossa pelaaja ei voi liikuttaa mitään nappulaa, mutta kuningas ei kuitenkaan ole uhattuna, peli päättyy tasapeliin.\r\nItse en jaksanut toteuttaa algoritmia, joka tämän tarkastaisi (tai muuta tasapelin vaativaa toiminnallisuutta), joten tein napin, jotta peli pääsee etenemään tällaisissa tilanteissa.<br></br><br></br>\r\n\r\n- Jos ilmenee ongelmia esim. nappulat eivät liiku tai muuta, niin sivun uudelleenlataaminen auttaa yleensä.<br></br>\r\n(HUOM. lähetetyt ja vastaanotetut pelikutsut (ei kaveripyynnöt) katoavat tällöin näkyvistä)<br></br><br></br>\r\n\r\n- Sivu toimii Chromella ja Firefoxilla. Muista selaimista en ole varma.<br></br><br></br>\r\n- Kännykällä sivu myös toimii, mutta se näyttää hieman hassulta.\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default Info","import React, { useState } from \"react\"\nimport { Grid, CircularProgress } from \"@material-ui/core\"\nimport { Switch, Route } from \"react-router-dom\"\nimport Footer from \"./components/Footer\"\nimport LoginForm from \"./components/LoginForm\"\nimport Menu from \"./components/Menu\"\nimport RegisterForm from \"./components/RegisterForm\"\nimport GameMenu from \"./components/GameMenu\"\nimport Game from \"./components/chess/Game\"\nimport { useUser } from \"./utils/stateHooks\"\nimport { Container, makeStyles } from \"@material-ui/core\"\nimport { FeedbackContext } from \"./utils/context\"\nimport Feedback from \"./components/Feedback\"\nimport Info from \"./components/Info\"\n\nconst useStyles = makeStyles({\n  root: {\n    height: \"100%\",\n  }\n})\n\nconst App = () => {\n  const { user } = useUser()\n  const classes = useStyles()\n  const [feedback, setFeedback] = useState(null)\n  //console.log(\"app rendering and feedback is\", feedback)\n\n  return (\n    <FeedbackContext.Provider value={{ feedback, setFeedback }}>\n      <Container classes={classes}>\n        <Grid\n          container\n          direction=\"column\"\n          alignItems=\"center\"\n          justify=\"space-between\"\n          classes={classes}\n          wrap=\"nowrap\"\n        >\n          <Menu />\n          {user\n            ?\n            <Switch>\n              <Route path=\"/play/:id\">\n                <Game />\n              </Route>\n              <Route path=\"/play\">\n                <GameMenu />\n              </Route>\n              <Route path=\"/login\">\n                <LoginForm />\n              </Route>\n              <Route path=\"/register\">\n                <RegisterForm />\n              </Route>\n              <Route path=\"/info\">\n                <Info />\n              </Route>\n            </Switch>\n            : <CircularProgress />\n          }\n          <Feedback />\n          <Footer />\n        </Grid>\n      </Container>\n    </FeedbackContext.Provider>\n  )\n}\n\nexport default App\n"],"sourceRoot":""}