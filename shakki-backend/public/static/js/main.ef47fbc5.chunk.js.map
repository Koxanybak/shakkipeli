{"version":3,"sources":["sprites/blackking.svg","sprites/blackqueen.svg","sprites/blackrook.svg","sprites/blackbishop.svg","sprites/blackknight.svg","sprites/blackpawn.svg","sprites/whiteking.svg","sprites/whitequeen.svg","sprites/whiterook.svg","sprites/whitebishop.svg","sprites/whiteknight.svg","sprites/whitepawn.svg","components/Footer.js","queries.js","components/chess/pieces.js","index.js","utils/errorHandlers.js","utils/stateHooks.js","components/LoginForm.js","components/Menu.js","components/RegisterForm.js","components/GameMenu.js","components/chess/Square.js","utils/constants.js","components/chess/Board.js","components/chess/GameText.js","components/chess/gameUtils.js","components/chess/Game.js","App.js"],"names":["module","exports","Footer","dragged","wsUri","GAME_STATE_DETAILS","gql","GET_GAME","GAME_STATE_UPDATED","JOIN_GAME","PROMOTE","MAKE_MOVE","CREATE_GAME","GET_LOGGED_USER","LOGIN","ADD_USER","handleApolloError","err","graphQLErrors","console","log","message","stack","useUser","client","useApolloClient","useState","token","setToken","useLazyQuery","variables","window","localStorage","getItem","sessionStorage","onCompleted","data","setUser","getLoggedUser","onError","getUser","useQuery","loading","error","removeUser","useCallback","removeItem","user","remember","newUserData","setItem","writeQuery","query","useEffect","userDataInStore","readQuery","userLoading","userError","LoginForm","username","setUsername","password","setPassword","setRemember","history","useHistory","useMutation","login","loginResult","push","onSubmit","event","preventDefault","TextField","label","onChange","e","target","value","name","type","FormControlLabel","control","Checkbox","checked","color","Button","variant","onClick","Menu","AppBar","position","Toolbar","IconButton","edge","aria-label","component","Link","to","RegisterForm","confirmation","setConfirmation","tag","setTag","alert","addUser","addedResult","length","helperText","required","style","paddingTop","paddingBottom","GameMenu","link","setLink","createGame","createResult","id","location","href","pieceStyle","width","height","verticalAlign","getImgSrc","side","blackKing","blackQueen","blackBishop","blackRook","blackKnight","blackPawn","whiteKing","whiteQueen","whiteBishop","whiteRook","whiteKnight","whitePawn","Piece","opacity","setOpacity","className","draggable","onDragStart","onDragEnd","src","alt","King","kingStyle","Queen","queenStyle","Rook","rookStyle","Knight","knightStyle","Bishop","bishopStyle","Pawn","pawnStyle","Square","makeMove","piece","dragHelperMap","highlight","specificColor","useMemo","squareColor","setSquareColor","pieceToRender","squareStyle","backgroundColor","textAlign","background","handleDrop","a","get","Number","oldLocation","row","Math","floor","column","newLocation","res","lastMove","success","handleDragEnter","handleDragLeave","relatedTarget","parentNode","onDragLeave","onDragOver","onDrop","onDragEnter","Board","boardAlignment","board","handleClick","chosenPiece","Map","forEach","i","j","set","squares","Array","from","map","key","availableMoves","move","GameText","game","check","currentPlayer","gameOver","promotionPlayerID","winner","promote","threatenedPlayer","isNotValid","squareNode","pieceToMove","clickedPiece","isValidPiece","whitePlayer","Game","useParams","setGame","newGameData","gameDataInStore","gameId","getGame","gameStateUpdated","initialResult","joinGame","useSubscription","onSubscriptionData","subscriptionData","gameLoading","gameError","pieceType","useGame","setPieceToMove","toString","clickedElem","clickedPieceElem","firstChild","App","path","authLink","setContext","_","headers","authorization","loc","protocol","host","httpLink","HttpLink","uri","wsLink","WebSocketLink","options","reconnect","splitLink","split","definition","getMainDefinition","kind","operation","concat","ApolloClient","cache","InMemoryCache","connectToDevTools","ReactDOM","render","ApolloProvider","Container","document","getElementById"],"mappings":"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","file":"static/js/main.ef47fbc5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blackking.66e1bcad.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackqueen.7b3e33e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackrook.96872a66.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackbishop.1f3b8d1a.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackknight.d39f1d02.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackpawn.1c52d8c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteking.250510ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/whitequeen.4320a2dd.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiterook.095b1a06.svg\";","module.exports = __webpack_public_path__ + \"static/media/whitebishop.09004fd2.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteknight.e6294efe.svg\";","module.exports = __webpack_public_path__ + \"static/media/whitepawn.d69014fb.svg\";","import React from \"react\"\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div>\r\n      Student project for Full Stack open 2020\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer","import { gql } from \"@apollo/client\"\r\n\r\n\r\n// fragments\r\n\r\nconst GAME_STATE_DETAILS = gql`\r\n  fragment gameStateDetails on Game {\r\n    board {\r\n        type\r\n        side\r\n        id\r\n        location {\r\n          row\r\n          column\r\n        }\r\n        availableMoves {\r\n          newLocation {\r\n            row\r\n            column\r\n          }\r\n        }\r\n      }\r\n      id\r\n      currentPlayer\r\n      whitePlayer\r\n      blackPlayer\r\n      winner\r\n      gameOver\r\n      promotionPlayerID\r\n      check {\r\n        threatenedPlayer\r\n        movesAvailable {\r\n          piece {\r\n            type\r\n            side\r\n            id\r\n          }\r\n          newLocation {\r\n            row\r\n            column\r\n          }\r\n        }\r\n      }\r\n      moveHistory {\r\n        ... on OrdinaryMove {\r\n          piece {\r\n            type\r\n            side\r\n            id\r\n            lastLocation {\r\n              row\r\n              column\r\n            }\r\n          }\r\n          oldLocation {\r\n            row\r\n            column\r\n          }\r\n          newLocation {\r\n            row\r\n            column\r\n          }\r\n        }\r\n        ... on CastlingMove {\r\n          piece {\r\n            type\r\n            side\r\n            id\r\n            lastLocation {\r\n              row\r\n              column\r\n            }\r\n          }\r\n          castledPiece {\r\n            type\r\n            side\r\n            id\r\n            lastLocation {\r\n              row\r\n              column\r\n            }\r\n          }\r\n        }\r\n      }\r\n  }\r\n`\r\n\r\n/* const USER_DETAILS = gql`\r\n  fragment userDetails on User {\r\n    username\r\n    tag\r\n    friends {\r\n      tag\r\n    }\r\n    guest\r\n    id\r\n  }\r\n` */\r\n\r\n\r\n// mutations and queries\r\n\r\n// game related\r\nexport const GET_GAME = gql`\r\n  query getGame($gameId: String!) {\r\n    getGame(\r\n      gameId: $gameId\r\n    ) {\r\n      ...gameStateDetails\r\n    }\r\n  }\r\n  ${GAME_STATE_DETAILS}\r\n`\r\n\r\nexport const GAME_STATE_UPDATED = gql`\r\n  subscription gameStateUpdated($gameId: String!) {\r\n    gameStateUpdated(\r\n      gameId: $gameId\r\n    ) {\r\n      ...gameStateDetails\r\n    }\r\n  }\r\n  ${GAME_STATE_DETAILS}\r\n`\r\n\r\nexport const JOIN_GAME = gql`\r\n  mutation joinGame($gameId: String!) {\r\n    joinGame(\r\n      gameId: $gameId\r\n    ) {\r\n      ...gameStateDetails\r\n    }\r\n  }\r\n  ${GAME_STATE_DETAILS}\r\n`\r\n\r\nexport const PROMOTE = gql`\r\n  mutation promote($gameId: String!, $pieceType: String!) {\r\n    promote(\r\n      gameId: $gameId,\r\n      pieceType: $pieceType\r\n    ) {\r\n      ...gameStateDetails\r\n    }\r\n  }\r\n  ${GAME_STATE_DETAILS}\r\n`\r\n\r\nexport const MAKE_MOVE = gql`\r\n  mutation makeMove($move: MoveInput!) {\r\n    makeMove(\r\n      move: $move\r\n    ) {\r\n      lastMove {\r\n        success\r\n        message\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const CREATE_GAME = gql`\r\n  mutation createGame {\r\n    createGame {\r\n      board {\r\n        type\r\n        side\r\n      }\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\n// user related\r\nexport const GET_LOGGED_USER = gql`\r\n  query getLoggedUser($token: String) {\r\n    getLoggedUser(\r\n      token: $token\r\n    ) {\r\n      username\r\n      tag\r\n      friends {\r\n        tag\r\n      }\r\n      id\r\n      token\r\n      guest\r\n    }\r\n  }\r\n`\r\n\r\nexport const LOGIN = gql`\r\n  mutation login($username: String!, $password: String!) {\r\n    login(\r\n      username: $username,\r\n      password: $password\r\n    ) {\r\n      username\r\n      tag\r\n      friends {\r\n        tag\r\n      }\r\n      token\r\n      guest\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nexport const ADD_USER = gql`\r\n  mutation addUser($user: NewUserInput!) {\r\n    addUser(\r\n      user: $user\r\n    ) {\r\n      username\r\n      tag\r\n      id\r\n      friends {\r\n        tag\r\n      }\r\n    }\r\n  }\r\n`","import React, { useState } from \"react\"\r\n//import { SQUARE_HEIGHT, SQUARE_WIDTH } from \"../globals\"\r\nimport blackKing from \"../../sprites/blackking.svg\"\r\nimport blackQueen from \"../../sprites/blackqueen.svg\"\r\nimport blackRook from \"../../sprites/blackrook.svg\"\r\nimport blackBishop from \"../../sprites/blackbishop.svg\"\r\nimport blackKnight from \"../../sprites/blackknight.svg\"\r\nimport blackPawn from \"../../sprites/blackpawn.svg\"\r\nimport whiteKing from \"../../sprites/whiteking.svg\"\r\nimport whiteQueen from \"../../sprites/whitequeen.svg\"\r\nimport whiteRook from \"../../sprites/whiterook.svg\"\r\nimport whiteBishop from \"../../sprites/whitebishop.svg\"\r\nimport whiteKnight from \"../../sprites/whiteknight.svg\"\r\nimport whitePawn from \"../../sprites/whitepawn.svg\"\r\n\r\n/* const BLACK_COLOR = \"#000000\"\r\nconst WHITE_COLOR = \"#ffffff\" */\r\n\r\nconst pieceStyle = {\r\n  width: 65,\r\n  height: 65,\r\n  //display: \"table-cell\",\r\n  verticalAlign: \"middle\",\r\n}\r\nconst getImgSrc = (type, side) => {\r\n  if (type === \"king\" && side === \"black\") {\r\n    return blackKing\r\n  } else if (type === \"queen\" && side === \"black\") {\r\n    return blackQueen\r\n  } else if (type === \"bishop\" && side === \"black\") {\r\n    return blackBishop\r\n  } else if (type === \"rook\" && side === \"black\") {\r\n    return blackRook\r\n  } else if (type === \"knight\" && side === \"black\") {\r\n    return blackKnight\r\n  } else if (type === \"pawn\" && side === \"black\") {\r\n    return blackPawn\r\n  } else if (type === \"king\" && side === \"white\") {\r\n    return whiteKing\r\n  } else if (type === \"queen\" && side === \"white\") {\r\n    return whiteQueen\r\n  } else if (type === \"bishop\" && side === \"white\") {\r\n    return whiteBishop\r\n  } else if (type === \"rook\" && side === \"white\") {\r\n    return whiteRook\r\n  } else if (type === \"knight\" && side === \"white\") {\r\n    return whiteKnight\r\n  } else if (type === \"pawn\" && side === \"white\") {\r\n    return whitePawn\r\n  }\r\n}\r\n\r\nlet dragged\r\n\r\n\r\n\r\n// functionality of a piece\r\n\r\nconst Piece = ({ style, id, side, type }) => {\r\n  const [opacity, setOpacity] = useState(1)\r\n\r\n  const handleDragStart = event => {\r\n    // dragged määritellään\r\n    dragged = event.target\r\n    setOpacity(0.5)\r\n    console.log(\"dragged:\", dragged)\r\n  }\r\n\r\n  const handleDragEnd = event => {\r\n    setOpacity(1)\r\n  }\r\n\r\n\r\n  return (\r\n    <img\r\n      style={{ ...style, opacity }}\r\n      className=\"piece\"\r\n      draggable=\"true\"\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      type={id}\r\n      side={side}\r\n      id={id}\r\n      src={getImgSrc(type, side)}\r\n      alt=\"sprite\"\r\n    >\r\n    </img>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n// pieces\r\n\r\nconst King = ({ side, id }) => {\r\n  const kingStyle = { ...pieceStyle }\r\n  /* kingStyle.backgroundColor = side === \"black\" ? BLACK_COLOR : WHITE_COLOR\r\n  kingStyle.color = side === \"white\" ? BLACK_COLOR : WHITE_COLOR */\r\n\r\n  return (\r\n    <Piece style={kingStyle} id={id} side={side} type=\"king\">\r\n      K\r\n    </Piece>\r\n  )\r\n  /* return (\r\n    <img src={blackKing} alt=\"black king\"></img>\r\n  ) */\r\n}\r\n\r\nconst Queen = ({ side, id }) => {\r\n  const queenStyle = { ...pieceStyle }\r\n  /* queenStyle.backgroundColor = side === \"black\" ? BLACK_COLOR : WHITE_COLOR\r\n  queenStyle.color = side === \"white\" ? BLACK_COLOR : WHITE_COLOR */\r\n\r\n  return (\r\n    <Piece style={queenStyle} id={id} side={side} type=\"queen\">\r\n      D\r\n    </Piece>\r\n  )\r\n}\r\n\r\nconst Rook = ({ side, id }) => {\r\n  const rookStyle = { ...pieceStyle }\r\n  /* rookStyle.backgroundColor = side === \"black\" ? BLACK_COLOR : WHITE_COLOR\r\n  rookStyle.color = side === \"white\" ? BLACK_COLOR : WHITE_COLOR */\r\n\r\n  return (\r\n    <Piece style={rookStyle} id={id} side={side} type=\"rook\">\r\n      T\r\n    </Piece>\r\n  )\r\n}\r\n\r\nconst Knight = ({ side, id }) => {\r\n  const knightStyle = { ...pieceStyle }\r\n  /* knightStyle.backgroundColor = side === \"black\" ? BLACK_COLOR : WHITE_COLOR\r\n  knightStyle.color = side === \"white\" ? BLACK_COLOR : WHITE_COLOR */\r\n\r\n  return (\r\n    <Piece style={knightStyle} id={id} side={side} type=\"knight\">\r\n      R\r\n    </Piece>\r\n  )\r\n}\r\n\r\nconst Bishop = ({ side, id }) => {\r\n  const bishopStyle = { ...pieceStyle }\r\n  /* bishopStyle.backgroundColor = side === \"black\" ? BLACK_COLOR : WHITE_COLOR\r\n  bishopStyle.color = side === \"white\" ? BLACK_COLOR : WHITE_COLOR */\r\n\r\n  return (\r\n    <Piece style={bishopStyle} id={id} side={side} type=\"bishop\">\r\n      L\r\n    </Piece>\r\n  )\r\n}\r\n\r\nconst Pawn = ({ side, id }) => {\r\n  const pawnStyle = { ...pieceStyle }\r\n  /* pawnStyle.backgroundColor = side === \"black\" ? BLACK_COLOR : WHITE_COLOR\r\n  pawnStyle.color = side === \"white\" ? BLACK_COLOR : WHITE_COLOR */\r\n\r\n  return (\r\n    <Piece style={pawnStyle} id={id} side={side} type=\"pawn\">\r\n      S\r\n    </Piece>\r\n  )\r\n}\r\n\r\n/*Piece.displayName = \"Piece\"\r\nKing.displayName = \"King\"\r\nQueen.displayName = \"Queen\"\r\nRook.displayName = \"Rook\"\r\nKnight.displayName = \"Knight\"\r\nBishop.displayName = \"Bishop\"\r\nPawn.displayName = \"Pawn\"*/\r\n\r\nexport { King, Queen, Rook, Knight, Bishop, Pawn, dragged }","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport App from \"./App\"\nimport Container from \"@material-ui/core/Container\"\n\nimport { ApolloProvider, ApolloClient, InMemoryCache, HttpLink, split } from \"@apollo/client\"\nimport { setContext } from \"@apollo/link-context\"\nimport { getMainDefinition } from \"@apollo/client/utilities\"\nimport { WebSocketLink } from \"@apollo/link-ws\"\n\nconst authLink = setContext((_, { headers }) => {\n  const token = sessionStorage.getItem(\"loggedChessUser\")\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `bearer ${token}` : null\n    }\n  }\n})\n\nlet loc = window.location, wsUri\nif (loc.protocol === \"https:\") {\n  wsUri = \"wss:\"\n} else {\n  wsUri = \"ws:\"\n}\nwsUri += \"//\" + loc.host\nconsole.log(`${wsUri}/graphql`)\n\nconst httpLink = new HttpLink({\n  uri: \"/graphql\"\n})\n\nconst wsLink = new WebSocketLink({\n  uri: `${wsUri}/graphql`,\n  options: {\n    reconnect: true\n  }\n})\n\nconst splitLink = split(\n  ({query}) => {\n    const definition = getMainDefinition(query)\n    return (\n      definition.kind === \"OperationDefinition\" &&\n      definition.operation === \"subscription\"\n    )\n  },\n  wsLink,\n  authLink.concat(httpLink),\n)\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: splitLink,\n  connectToDevTools: true,\n})\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Container>\n      <Router>\n        <App />\n      </Router>\n    </Container>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n)\n","export const handleApolloError = err => {\r\n  if (!err.graphQLErrors || !err.graphQLErrors[0]) {\r\n    console.log(err.message)\r\n    if (err.stack) {\r\n      console.log(err.stack)\r\n    }\r\n  } else {\r\n    console.log(err.graphQLErrors[0].message)\r\n    if (err.graphQLErrors[0].stack) {\r\n      console.log(err.graphQLErrors[0].stack)\r\n    }\r\n  }\r\n}","import { useEffect, useCallback, useState } from \"react\"\r\nimport { useQuery, useMutation, useSubscription, useApolloClient, useLazyQuery } from \"@apollo/client\"\r\nimport { GET_GAME, MAKE_MOVE, GAME_STATE_UPDATED, JOIN_GAME, PROMOTE, GET_LOGGED_USER } from \"../queries\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport { handleApolloError } from \"./errorHandlers\"\r\n\r\n\r\nexport const useGame = () => {\r\n  const client = useApolloClient()\r\n  const { id } = useParams()\r\n\r\n  const setGame = newGameData => {\r\n    let gameDataInStore = client.readQuery({ query: GET_GAME, variables: { gameId: id } })\r\n    gameDataInStore = { getGame: newGameData.gameStateUpdated }\r\n  \r\n    /* console.log(\"newGameData:\", newGameData) */\r\n    client.writeQuery({\r\n      query: GET_GAME,\r\n      data: gameDataInStore,\r\n      variables: { id }\r\n    })\r\n    /* console.log(\"Game state updated with:\", client.readQuery({\r\n      query: GET_GAME,\r\n      variables: { id }\r\n    })) */\r\n  }\r\n\r\n  const initialResult = useQuery(GET_GAME, {\r\n    variables: { gameId: id },\r\n    onError: err => {\r\n      handleApolloError(err)\r\n    },\r\n  })\r\n  const [makeMove] = useMutation(MAKE_MOVE)\r\n  const [promote] = useMutation(PROMOTE)\r\n  const [joinGame] = useMutation(JOIN_GAME, {\r\n    variables: { gameId: id },\r\n    onError: err => {\r\n      handleApolloError(err)\r\n    },\r\n    onCompleted: data => {\r\n      setGame(data)\r\n    }\r\n  })\r\n\r\n  useSubscription(GAME_STATE_UPDATED, {\r\n    onSubscriptionData: ({ subscriptionData }) => {\r\n      setGame(subscriptionData.data)\r\n      /* console.log(subscriptionData.data.gameStateUpdated.moveHistory) */\r\n    },\r\n    variables: { gameId: id }\r\n  })\r\n\r\n  useEffect(() => {\r\n    joinGame()\r\n  }, [joinGame])\r\n\r\n  const sendPromotedType = type => {\r\n    promote({ variables: { gameId: id, pieceType: type } })\r\n  }\r\n\r\n  return {\r\n    game: initialResult.loading || initialResult.error ? null : initialResult.data.getGame,\r\n    gameLoading: initialResult.loading,\r\n    gameError: initialResult.error,\r\n    promote: sendPromotedType,\r\n    makeMove: ({ piece, oldLocation, newLocation }) => makeMove({\r\n      variables: { move: { piece, oldLocation, newLocation, gameId: id } }\r\n    })\r\n  }\r\n}\r\n\r\nexport const useUser = () => {\r\n  const client = useApolloClient()\r\n  const [token, setToken] = useState(null)\r\n\r\n  // lazy user query\r\n  const [getUser] = useLazyQuery(GET_LOGGED_USER, {\r\n    variables: {\r\n      token: window.localStorage.getItem(\"loggedChessUser\")\r\n        ? window.localStorage.getItem(\"loggedChessUser\")\r\n        : window.sessionStorage.getItem(\"loggedChessUser\")\r\n    },\r\n    onCompleted: data => {\r\n      setUser(data.getLoggedUser)\r\n    },\r\n    onError: err => {\r\n      handleApolloError(err)\r\n    },\r\n  })\r\n  \r\n  // user query\r\n  const { loading, data, error } = useQuery(GET_LOGGED_USER, {\r\n    variables: {\r\n      token: window.localStorage.getItem(\"loggedChessUser\")\r\n        ? window.localStorage.getItem(\"loggedChessUser\")\r\n        : window.sessionStorage.getItem(\"loggedChessUser\")\r\n    },\r\n    onError: err => {\r\n      handleApolloError(err)\r\n    },\r\n  })\r\n\r\n  const removeUser = useCallback(() => {\r\n    console.log(\"logged out\")\r\n    window.localStorage.removeItem(\"loggedChessUser\")\r\n    window.sessionStorage.removeItem(\"loggedChessUser\")\r\n    setToken(null)\r\n    getUser()\r\n    return\r\n  }, [getUser])\r\n\r\n  const setUser = useCallback((user, remember) => {\r\n    let newUserData = { getLoggedUser: user }\r\n\r\n    if (remember) {\r\n      console.log(\"localStorageen meni\")\r\n      window.localStorage.setItem(\"loggedChessUser\", user.token)\r\n    }\r\n    window.sessionStorage.setItem(\"loggedChessUser\", user.token)\r\n\r\n    client.writeQuery({\r\n      query: GET_LOGGED_USER,\r\n      data: newUserData,\r\n      variables: { token: user.token }\r\n    })\r\n\r\n  }, [client])\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setUser(data.getLoggedUser)\r\n      setToken(data.getLoggedUser.token)\r\n    }\r\n  }, [data, setUser])\r\n\r\n  let userDataInStore = null\r\n\r\n  if ((!loading && !error) && token) {\r\n    /* console.log(token) */\r\n    userDataInStore = client.readQuery({\r\n      query: GET_LOGGED_USER,\r\n      variables: { token }\r\n    })\r\n  }\r\n\r\n\r\n  return {\r\n    user: (!loading && !error) && token ? userDataInStore.getLoggedUser : null,\r\n    userLoading: loading,\r\n    userError: error,\r\n    setUser,\r\n    removeUser,\r\n  }\r\n}","import React, { useState, useEffect } from \"react\"\r\nimport { TextField, Button, Checkbox, FormControlLabel, } from \"@material-ui/core\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { LOGIN } from \"../queries\"\r\nimport { useMutation } from \"@apollo/client\"\r\nimport { useUser } from \"../utils/stateHooks\"\r\n\r\n\r\nconst LoginForm = () => {\r\n  const [username, setUsername] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [remember, setRemember] = useState(true)\r\n\r\n  const { setUser } = useUser()\r\n\r\n  const history = useHistory()\r\n\r\n  const [login, loginResult] = useMutation(LOGIN, {\r\n    onError: err => {\r\n      if (!err.graphQLErrors || !err.graphQLErrors[0]) {\r\n        console.log(err.message)\r\n      } else {\r\n        console.log(err.graphQLErrors[0].message)\r\n      }\r\n      setPassword(\"\")\r\n    }\r\n  })\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault()\r\n\r\n    login({ variables: { username, password } })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (loginResult.data) {\r\n      setUsername(\"\")\r\n      setPassword(\"\")\r\n\r\n      setUser(loginResult.data.login, remember)\r\n\r\n      history.push(\"/\")\r\n    }\r\n  }, [loginResult.data, setUser, history, remember])\r\n\r\n  return (\r\n    <div>\r\n      <h2>Kirjaudu sisään</h2>\r\n      <form onSubmit={onSubmit}>\r\n        <div>\r\n          <TextField\r\n            label=\"Käyttäjänimi\"\r\n            onChange={e => {setUsername(e.target.value)}}\r\n            name=\"username\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            label=\"Salasana\"\r\n            type=\"password\"\r\n            onChange={e => {setPassword(e.target.value)}}\r\n            name=\"password\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={remember}\r\n                onChange={() => setRemember(!remember)}\r\n                name=\"rememberMe\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Muista minut\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n            Kirjaudu\r\n          </Button>\r\n        </div>\r\n      </form>\r\n      <div>\r\n        tai\r\n      </div>\r\n      <div>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={() => history.push(\"/register\")}>\r\n          Luo uusi käyttäjä\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm","import React from \"react\"\r\nimport { AppBar, Toolbar, IconButton, Button, Typography } from \"@material-ui/core\"\r\nimport { Link, } from \"react-router-dom\"\r\nimport { useUser } from \"../utils/stateHooks\"\r\n\r\nconst Menu = () => {\r\n  const { user, removeUser } = useUser()\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n        </IconButton>\r\n        <Button color=\"inherit\" component={Link} to=\"/play\">\r\n          Pelaa\r\n        </Button>\r\n        <Button color=\"inherit\" component={Link} to=\"/info\">\r\n          Ohjeet\r\n        </Button>\r\n        {/* {!user || user.guest \r\n          ?\r\n          <Button color=\"inherit\" component={Link} to=\"/login\">\r\n            Kirjaudu\r\n          </Button>\r\n          :\r\n          <Typography variant=\"subtitle1\" color=\"textPrimary\">\r\n              &quot;{user.tag}&quot; kirjautunut\r\n          </Typography>\r\n        } */}\r\n        {/* {!user || user.guest \r\n          ?\r\n          null\r\n          :\r\n          <Button color=\"inherit\" onClick={() => removeUser()} component={Link} to=\"/\">\r\n            Kirjaudu ulos\r\n          </Button>\r\n        } */}\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nexport default Menu","import React, { useState, useEffect } from \"react\"\r\nimport { TextField, Button, } from \"@material-ui/core\"\r\nimport { useMutation } from \"@apollo/client\"\r\nimport { ADD_USER } from \"../queries\"\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nconst RegisterForm = () => {\r\n  const [username, setUsername] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [confirmation, setConfirmation] = useState(\"\")\r\n  const [tag, setTag] = useState(\"\")\r\n  const history = useHistory()\r\n\r\n  const [addUser, addedResult] = useMutation(ADD_USER, {\r\n    onError: err => {\r\n      console.log(err.graphQLErrors[0].message)\r\n      window.alert(err.graphQLErrors[0].message)\r\n    }\r\n  })\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault()\r\n\r\n    const user = { username, password, tag }\r\n    addUser({ variables: { user } })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (addedResult.data) {\r\n      setUsername(\"\")\r\n      setPassword(\"\")\r\n      setTag(\"\")\r\n\r\n      window.alert(\"Käyttäjä luotu onnistuneesti.\")\r\n      history.push(\"/\")\r\n    }\r\n  }, [addedResult.data, history])\r\n\r\n  return (\r\n    <div>\r\n      <h2>Luo uusi käyttäjä</h2>\r\n      <form onSubmit={onSubmit}>\r\n        <div>\r\n          <TextField\r\n            label=\"Käyttäjänimi\"\r\n            onChange={e => {setUsername(e.target.value)}}\r\n            error={username.length !== 0 && username.length < 2}\r\n            helperText={\r\n              username.length !== 0 && username.length < 2\r\n                ? \"Liian lyhyt\"\r\n                : \"Käyttäjänimesi ei näy muille pelaajille.\"\r\n            }\r\n            required={true}\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            label=\"Pelinimi\"\r\n            onChange={e => {setTag(e.target.value)}}\r\n            helperText=\"Nimi joka näkyy muille pelaajille.\"\r\n            required={true}\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            label=\"Salasana\"\r\n            type=\"password\"\r\n            onChange={e => {setPassword(e.target.value)}}\r\n            error={password.length < 8 && password !== \"\"}\r\n            helperText={\r\n              password.length < 8 && password !== \"\"\r\n                ? \"Liian lyhyt\"\r\n                : null\r\n            }\r\n            required={true}\r\n          />\r\n          <div\r\n            style={{\r\n              paddingTop: 20,\r\n              paddingBottom: 10,\r\n            }}\r\n          >\r\n            <strong>Älä käytä samaa salasanaa, joka sinulla on muilla nettisivuilla. </strong>\r\n            Olen vain opiskelija, ja tämä on ensimmäinen nettiprojektini, joten en voi taata sivuston tietoturvallisuutta.\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            label=\"Salasana uudelleen\"\r\n            type=\"password\"\r\n            onChange={e => {setConfirmation(e.target.value)}}\r\n            error={confirmation !== password}\r\n            helperText={confirmation !== password ? \"Salasanat eivät vastaa toisiaan.\" : null}\r\n            required={true}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n            Luo käyttäjä\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RegisterForm","import React, { useState, useEffect } from \"react\"\r\nimport { Button, Link } from \"@material-ui/core\"\r\nimport { useMutation } from \"@apollo/client\"\r\nimport { CREATE_GAME } from \"../queries\"\r\nimport { useUser } from \"../utils/stateHooks\"\r\n\r\nconst GameMenu = () => {\r\n  const [link, setLink] = useState(null)\r\n  const { user } = useUser()\r\n  const [createGame, createResult] = useMutation(CREATE_GAME, {\r\n    onError: err => {\r\n      if (!err.graphQLErrors || !err.graphQLErrors[0]) {\r\n        console.log(err.message)\r\n      } else {\r\n        console.log(err.graphQLErrors[0].message)\r\n      }\r\n    }\r\n  })\r\n\r\n  const newGame = () => {\r\n    if (!user) {\r\n      console.log(\"Sinun täytyy kirjautua ennen kuin pelaat\")\r\n    } else {\r\n      createGame()\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (createResult.data) {\r\n      const { id } = createResult.data.createGame\r\n      setLink(`${window.location}/${id}`)\r\n    }\r\n  }, [createResult.data])\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={newGame}>\r\n        Peli linkin kautta\r\n      </Button>\r\n      {link\r\n        ?\r\n        <div>\r\n          Jaa tämä linkki kaverillesi. Sen kautta pääset pelaamaan.{\"  \"}\r\n          <Link href={link}>\r\n            {link}\r\n          </Link>\r\n        </div>\r\n        :\r\n        null\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GameMenu","import React, { useState, useEffect, useMemo } from \"react\"\r\nimport {\r\n  SQUARE_HEIGHT,\r\n  SQUARE_WIDTH,\r\n  BLACKSQUARE_COLOR,\r\n  WHITESQUARE_COLOR,\r\n  HIGHLIGHTED_COLOR,\r\n} from \"../../utils/constants\"\r\nimport { King, Queen, Rook, Knight, Bishop, Pawn, dragged } from \"./pieces\"\r\n\r\n// a single chess square\r\n\r\nconst Square = ({ color, makeMove, location, piece, dragHelperMap, id, highlight }) => {\r\n  const specificColor = useMemo(() => `rgb(${color === \"white\" ? WHITESQUARE_COLOR : BLACKSQUARE_COLOR})`, [color])\r\n  const [squareColor, setSquareColor] = useState(specificColor)\r\n  useEffect(() => {\r\n    if (highlight) {\r\n      setSquareColor(`rgb(${HIGHLIGHTED_COLOR})`)\r\n    } else {\r\n      setSquareColor(specificColor)\r\n    }\r\n  }, [highlight, specificColor])\r\n\r\n  //squarestyles\r\n  const squareStyle = {\r\n    height: SQUARE_HEIGHT,\r\n    width: SQUARE_WIDTH,\r\n    backgroundColor: squareColor,\r\n    textAlign: \"center\",\r\n    background: `radial-gradient(${squareColor}, ${specificColor})`,\r\n  }\r\n  //console.log(squareStyle)\r\n\r\n\r\n  // drop handlers\r\n\r\n  const handleDrop = async event => {\r\n    event.preventDefault()\r\n\r\n    const piece = {\r\n      type: dragHelperMap.get(Number(dragged.id)).type,\r\n      side: dragHelperMap.get(Number(dragged.id)).side\r\n    }\r\n    const oldLocation = {\r\n      row: Math.floor(Number(dragged.id) / 8),\r\n      column: Number(dragged.id) % 8\r\n    }\r\n    const newLocation = location\r\n\r\n    if (event.target.className === \"square\") {\r\n      setSquareColor(specificColor)\r\n    } else if (event.target.className === \"piece\") {\r\n      setSquareColor(specificColor)\r\n    }\r\n\r\n    try {\r\n      const res = await makeMove({ piece, oldLocation, newLocation })\r\n      if (!res.data.makeMove.lastMove.success) {\r\n        console.log(res.data.makeMove.lastMove.message)\r\n      }\r\n    } catch (exception) {\r\n      console.log(exception.message)\r\n    }\r\n  }\r\n\r\n  const handleDragEnter = event => {\r\n    if (event.target.className === \"square\") {\r\n      setSquareColor(HIGHLIGHTED_COLOR)\r\n    } else if (event.target.className === \"piece\") {\r\n      setSquareColor(HIGHLIGHTED_COLOR)\r\n    }\r\n  }\r\n\r\n  const handleDragLeave = event => {\r\n    if (event.target.className === \"square\" && event.relatedTarget.className !== \"piece\") {\r\n      if (event.target.id === \"white\") {\r\n        setSquareColor(specificColor)\r\n      } else {\r\n        setSquareColor(specificColor)\r\n      }\r\n    } else if (event.target.className === \"piece\" && event.relatedTarget.className !== \"square\") {\r\n      if (event.target.parentNode.id === \"white\") {\r\n        setSquareColor(specificColor)\r\n      } else {\r\n        setSquareColor(specificColor)\r\n      }\r\n    }\r\n  }\r\n\r\n  let pieceToRender\r\n\r\n  if (piece) {\r\n    switch(piece.type) {\r\n\r\n    case \"pawn\":\r\n      pieceToRender = <Pawn side={piece.side} id={8 * location.row + location.column} />\r\n      break\r\n    case \"rook\":\r\n      pieceToRender = <Rook side={piece.side} id={8 * location.row + location.column} />\r\n      break\r\n    case \"knight\":\r\n      pieceToRender = <Knight side={piece.side} id={8 * location.row + location.column} />\r\n      break\r\n    case \"bishop\":\r\n      pieceToRender = <Bishop side={piece.side} id={8 * location.row + location.column} />\r\n      break\r\n    case \"queen\":\r\n      pieceToRender = <Queen side={piece.side} id={8 * location.row + location.column} />\r\n      break\r\n    case \"king\":\r\n      pieceToRender = <King side={piece.side} id={8 * location.row + location.column} />\r\n      break\r\n    default:\r\n      pieceToRender = null\r\n    }\r\n  }\r\n\r\n\r\n  //---------------------------------\r\n  if (pieceToRender) {\r\n    return (\r\n      <td\r\n        id={id}\r\n        style={squareStyle}\r\n        className=\"square\"\r\n        onDragLeave={handleDragLeave}\r\n        onDragOver={event => {event.preventDefault()}}\r\n        onDrop={handleDrop}\r\n        onDragEnter={handleDragEnter}\r\n      >\r\n        {pieceToRender}\r\n      </td>\r\n    )\r\n  }\r\n  return (\r\n    <td\r\n      id={id}\r\n      style={squareStyle}\r\n      className=\"square\"\r\n      onDragLeave={handleDragLeave}\r\n      onDragOver={event => {event.preventDefault()}}\r\n      onDrop={handleDrop}\r\n      onDragEnter={handleDragEnter}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Square","export const SQUARE_HEIGHT = 70\r\nexport const SQUARE_WIDTH = 70\r\n\r\nexport const WHITESQUARE_COLOR = \"29, 240, 201\"\r\nexport const BLACKSQUARE_COLOR = \"25, 145, 123\"\r\nexport const HIGHLIGHTED_COLOR = \"17, 209, 97\"\r\n\r\nexport const baseUrl = \"\"","import React from \"react\"\r\nimport Square from \"./Square\"\r\n\r\n// Chessboard\r\n\r\nconst Board = ({ boardAlignment, board, makeMove, handleClick, chosenPiece }) => {\r\n\r\n  const dragHelperMap = new Map()\r\n  board.forEach((row, i) => {\r\n    row.forEach((piece, j) => {\r\n      dragHelperMap.set(8 * i + j, piece)\r\n    })\r\n  })\r\n\r\n  const squares = Array.from(Array(8), (e, i) => {\r\n    const row = new Array(8)\r\n\r\n    for (let j = 0; j < 8; j++) {\r\n      if ((i + j) % 2 === 0) {\r\n        row[j] = { piece: null, color: \"white\"}\r\n      } else {\r\n        row[j] = { piece: null, color: \"black\"}\r\n      }\r\n    }\r\n\r\n    return row\r\n  })\r\n\r\n  //console.log(chosenPiece)\r\n\r\n  return (\r\n    <table className=\"board\" onClick={handleClick}>\r\n      <tbody>\r\n        {boardAlignment === \"white\" ? board.map((row, i) => {\r\n          return (\r\n            <tr key={i}>\r\n              {\r\n                row.map((piece, j) => {\r\n                  let highlight = false\r\n                  if (chosenPiece) {\r\n                    chosenPiece.availableMoves.forEach(move => {\r\n                      if (move.newLocation.row === i && move.newLocation.column === j) {\r\n                        highlight = true\r\n                      }\r\n                    })\r\n                    if (chosenPiece.location.row === i && chosenPiece.location.column === j) {\r\n                      highlight = true\r\n                    }\r\n                  }\r\n                  return <Square\r\n                    key={8 * i + j}\r\n                    id={8 * i + j}\r\n                    color={squares[i][j].color}\r\n                    makeMove={makeMove}\r\n                    location={{ row: i, column: j }}\r\n                    piece={piece}\r\n                    dragHelperMap={dragHelperMap}\r\n                    highlight={highlight}\r\n                  />\r\n                })\r\n              }\r\n            </tr>\r\n          )\r\n        }) : board.map((row, i) => {\r\n          return (\r\n            <tr key={i}>\r\n              {\r\n                row.map((piece, j) => {\r\n                  let highlight = false\r\n                  if (chosenPiece) {\r\n                    chosenPiece.availableMoves.forEach(move => {\r\n                      if (move.newLocation.row === 7 - i && move.newLocation.column === 7 - j) {\r\n                        highlight = true\r\n                      }\r\n                    })\r\n                    if (chosenPiece.location.row === 7 - i && chosenPiece.location.column === 7 - j) {\r\n                      highlight = true\r\n                    }\r\n                  }\r\n                  return <Square\r\n                    key={8 * (7 - i) + (7 - j)}\r\n                    id={8 * (7 - i) + (7 - j)}\r\n                    color={squares[7 - i][7 - j].color}\r\n                    makeMove={makeMove}\r\n                    location={{ row: (7 - i), column: (7 - j) }}\r\n                    piece={board[7 - i][7 - j]}\r\n                    dragHelperMap={dragHelperMap}\r\n                    highlight={highlight}\r\n                  />\r\n                })\r\n              }\r\n            </tr>\r\n          )\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport default Board","import React from \"react\"\r\nimport { useUser } from \"../../utils/stateHooks\"\r\nimport { Button } from \"@material-ui/core\"\r\n\r\nconst GameText = ({game: { check, currentPlayer, gameOver, promotionPlayerID, winner }, promote }) => {\r\n  const { user, userLoading } = useUser()\r\n\r\n  if (userLoading) {\r\n    return \"loading...\"\r\n  }\r\n\r\n  return (\r\n    <div className=\"gameText\">\r\n      {user.id === currentPlayer && !gameOver\r\n        ? \r\n        <h3>\r\n          On sinun vuorosi. {check && check.threatenedPlayer === user.id\r\n            ? \"Shakki!\"\r\n            : null}\r\n        </h3>\r\n        :\r\n        <div>\r\n          Odotetaan vastustajan siirtoa. {check && check.threatenedPlayer !== user.id\r\n            ? \"Shakki!\"\r\n            : null}\r\n        </div>}\r\n      <div>\r\n        {\r\n          user.id === promotionPlayerID\r\n            ?\r\n            <div>\r\n              Valitse nappula, joksi haluat muuttaa sotilaan{\" \"}\r\n              <Button onClick={() => promote(\"queen\")}>\r\n                Kuningatar\r\n              </Button>\r\n              <Button onClick={() => promote(\"knight\")}>\r\n                Ratsu\r\n              </Button>\r\n            </div>\r\n            :\r\n            null\r\n        }\r\n      </div>\r\n      <h3>\r\n        {\r\n          gameOver\r\n            ? winner === user.id\r\n              ? \"Voitit pelin! Onneksi olkoon!\"\r\n              : \"Ootko paska ku hävisit :D\"\r\n            : null\r\n        }\r\n      </h3>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GameText","import { HIGHLIGHTED_COLOR, WHITESQUARE_COLOR, BLACKSQUARE_COLOR } from \"../../utils/constants\"\r\n\r\n// checks is the square is valid to move to\r\nexport const isNotValid = ({ squareNode, pieceToMove, clickedPiece, game, user }) => {\r\n  return (\r\n    squareNode.style.background !== `radial-gradient(rgb(${HIGHLIGHTED_COLOR}), rgb(${BLACKSQUARE_COLOR}))` &&\r\n    squareNode.style.background !== `radial-gradient(rgb(${HIGHLIGHTED_COLOR}), rgb(${WHITESQUARE_COLOR}))`\r\n  ) || \r\n  (\r\n    clickedPiece &&\r\n    clickedPiece.id === pieceToMove.id\r\n  ) ||\r\n  (\r\n    game.gameOver ||\r\n    game.promotionPlayerID\r\n  ) ||\r\n  (\r\n    user.id !== game.currentPlayer\r\n  )\r\n}\r\n\r\n// checks if the piece is valid for movement\r\nexport const isValidPiece = ({ clickedPiece, game, user }) => {\r\n  /* console.log(clickedPiece)\r\n  console.log(game)\r\n  console.log(user) */\r\n  /* console.log(\"user.id === game.currentPlayer\", user.id === game.currentPlayer)\r\n  console.log(\"clickedPiece.side === game.whitePlayer === user.id ? white : black\",clickedPiece.side === (game.whitePlayer === user.id ? \"white\" : \"black\"))\r\n  console.log(\"!game.promotionPlayerID\",!game.promotionPlayerID)\r\n  console.log(\"!game.gameOver\",!game.gameOver) */\r\n  return (\r\n    user.id === game.currentPlayer &&\r\n    clickedPiece.side === (game.whitePlayer === user.id ? \"white\" : \"black\")\r\n  ) &&\r\n  (\r\n    !game.promotionPlayerID &&\r\n    !game.gameOver\r\n  )\r\n}","import React, { useState } from \"react\"\r\nimport { useGame, useUser } from \"../../utils/stateHooks\"\r\nimport { handleApolloError } from \"../../utils/errorHandlers\"\r\nimport Board from \"./Board\"\r\nimport GameText from \"./GameText\"\r\nimport { isNotValid, isValidPiece } from \"./gameUtils\"\r\n\r\nconst Game = () => {\r\n  const {game, gameLoading, gameError, makeMove, promote} = useGame()\r\n  const { user, userLoading } = useUser()\r\n  const [pieceToMove, setPieceToMove] = useState(null)\r\n\r\n  if (gameLoading || userLoading) {\r\n    return \"loading...\"\r\n  }\r\n  if (!game) {\r\n    return gameError.toString()\r\n  }\r\n  const {\r\n    board,\r\n    whitePlayer,\r\n  } = game\r\n\r\n  const handleClick = async event => {\r\n    event.preventDefault()\r\n\r\n    let clickedElem = event.target\r\n\r\n    // the user clicked on a piece\r\n    if (clickedElem.className === \"piece\") {\r\n      const clickedPiece = board[Math.floor(Number(clickedElem.id) / 8)][Number(clickedElem.id) % 8]\r\n\r\n      if (pieceToMove) {\r\n        if (isNotValid({\r\n          squareNode: clickedElem.parentNode,\r\n          pieceToMove,\r\n          clickedPiece,\r\n          user,\r\n          game,\r\n        })) {\r\n          setPieceToMove(null)\r\n          return\r\n        }\r\n\r\n        const piece = { type: pieceToMove.type, side: pieceToMove.side }\r\n        const oldLocation = { row: pieceToMove.location.row, column: pieceToMove.location.column }\r\n        const newLocation = { row: clickedPiece.location.row, column: clickedPiece.location.column }\r\n\r\n        try {\r\n          const res = await makeMove({ piece, oldLocation, newLocation })\r\n          if (!res.data.makeMove.lastMove.success) {\r\n            console.log(res.data.makeMove.lastMove.message)\r\n          }\r\n        } catch (exception) {\r\n          handleApolloError(exception)\r\n        }\r\n        setPieceToMove(null)\r\n      } else if (isValidPiece({ clickedPiece, game, user })){\r\n        setPieceToMove(clickedPiece)\r\n      }\r\n\r\n      // the user clicked on a square\r\n    } else if (clickedElem.className === \"square\") {\r\n      const clickedPieceElem = clickedElem.firstChild\r\n      let clickedPiece\r\n      if (clickedPieceElem) {\r\n        clickedPiece = board[Math.floor(Number(clickedPieceElem.id) / 8)][Number(clickedPieceElem.id) % 8]\r\n      }\r\n\r\n      if (pieceToMove) {\r\n        //console.log(clickedElem)\r\n        if (isNotValid({\r\n          squareNode: clickedElem,\r\n          pieceToMove,\r\n          clickedPiece,\r\n          user,\r\n          game,\r\n        })) {\r\n          setPieceToMove(null)\r\n          return\r\n        }\r\n\r\n        const piece = { type: pieceToMove.type, side: pieceToMove.side }\r\n        const oldLocation = { row: pieceToMove.location.row, column: pieceToMove.location.column }\r\n        const newLocation = { row: Math.floor(Number(clickedElem.id) / 8), column: Number(clickedElem.id) % 8 }\r\n\r\n        try {\r\n          const res = await makeMove({ piece, oldLocation, newLocation })\r\n          if (!res.data.makeMove.lastMove.success) {\r\n            console.log(res.data.makeMove.lastMove.message)\r\n          }\r\n        } catch (exception) {\r\n          handleApolloError(exception)\r\n        }\r\n        setPieceToMove(null)\r\n      } else if (clickedPiece && isValidPiece({ clickedPiece, game, user })) {\r\n        setPieceToMove(clickedPiece)\r\n      }\r\n\r\n    } else {\r\n      setPieceToMove(null)\r\n    }\r\n  }\r\n\r\n  //console.log(\"game is rendered with piece being\", pieceToMove)\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <div>\r\n        Suosittelen nappuloiden liikuttamista klikkaamalla vetämisen sijaan.\r\n      </div>\r\n      <Board\r\n        board={board}\r\n        boardAlignment={user.id === whitePlayer ? \"white\" : \"black\"}\r\n        makeMove={makeMove}\r\n        handleClick={handleClick}\r\n        chosenPiece={pieceToMove}\r\n      />\r\n      <GameText game={game} promote={promote} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Game","import React from \"react\"\nimport { Switch, Route } from \"react-router-dom\"\nimport Footer from \"./components/Footer\"\nimport LoginForm from \"./components/LoginForm\"\nimport Menu from \"./components/Menu\"\nimport RegisterForm from \"./components/RegisterForm\"\nimport GameMenu from \"./components/GameMenu\"\nimport Game from \"./components/chess/Game\"\nimport { useUser } from \"./utils/stateHooks\"\n\nconst App = () => {\n  const { user } = useUser()\n\n  return (\n    <div>\n      <Menu />\n      {user\n        ?\n        <Switch>\n          <Route path=\"/play/:id\">\n            <Game />\n          </Route>\n          <Route path=\"/play\">\n            <GameMenu />\n          </Route>\n          <Route path=\"/login\">\n            <LoginForm />\n          </Route>\n          <Route path=\"/register\">\n            <RegisterForm />\n          </Route>\n        </Switch>\n        : \"Ladataan...\"\n      }\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n"],"sourceRoot":""}