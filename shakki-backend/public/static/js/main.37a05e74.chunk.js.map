{"version":3,"sources":["sprites/blackking.svg","sprites/blackqueen.svg","sprites/blackrook.svg","sprites/blackbishop.svg","sprites/blackknight.svg","sprites/blackpawn.svg","sprites/whiteking.svg","sprites/whitequeen.svg","sprites/whiterook.svg","sprites/whitebishop.svg","sprites/whiteknight.svg","sprites/whitepawn.svg","queries.js","components/chess/pieces.js","index.js","utils/context.js","components/chess/Square.js","utils/constants.js","utils/cacheUpdaters.js","components/chess/Board.js","components/Footer.js","components/LoginForm.js","components/Menu.js","components/RegisterForm.js","components/GameMenu.js","App.js"],"names":["module","exports","dragged","newUri","GET_GAME","gql","MOVE_MADE","JOIN_GAME","PROMOTE","GET_LOGGED_USER","MAKE_MOVE","LOGIN","ADD_USER","CREATE_GAME","pieceStyle","width","height","verticalAlign","getImgSrc","type","side","blackKing","blackQueen","blackBishop","blackRook","blackKnight","blackPawn","whiteKing","whiteQueen","whiteBishop","whiteRook","whiteKnight","whitePawn","Piece","style","id","className","draggable","onDragStart","event","target","opacity","onDragEnd","src","alt","King","kingStyle","Queen","queenStyle","Rook","rookStyle","Knight","knightStyle","Bishop","bishopStyle","Pawn","pawnStyle","UserContext","React","createContext","GameContext","Square","pieceToRender","color","makeMove","location","piece","dragHelperMap","gameId","useContext","white","backgroundColor","textAlign","black","handleDrop","a","preventDefault","console","log","get","Number","oldLocation","row","Math","floor","column","newLocation","parent","parentNode","variables","move","res","data","lastMove","success","message","onDragLeave","relatedTarget","onDragOver","onDrop","onDragEnter","updateGameState","newGameData","client","gameInStore","readQuery","query","getGame","moveMade","writeQuery","Board","useApolloClient","useParams","setGameId","user","initialResult","useQuery","onError","err","graphQLErrors","onCompleted","useMutation","promote","joinGame","useSubscription","onSubscriptionData","subscriptionData","useEffect","sendPromotedType","pieceType","loading","error","toString","board","whitePlayer","currentPlayer","gameOver","winner","promotionPlayerID","Map","forEach","i","j","set","squares","Array","from","e","map","key","Button","onClick","Footer","LoginForm","useState","username","setUsername","password","setPassword","setUser","history","useHistory","login","loginResult","token","window","sessionStorage","setItem","push","onSubmit","TextField","label","onChange","value","name","variant","Menu","AppBar","position","Toolbar","IconButton","edge","aria-label","component","Link","to","Typography","tag","RegisterForm","confirmation","setConfirmation","setTag","alert","addUser","addedResult","length","helperText","required","paddingTop","paddingBottom","GameMenu","link","setLink","createGame","createResult","href","App","userResult","getItem","getLoggedUser","guest","Provider","path","authLink","setContext","_","headers","authorization","loc","protocol","host","httpLink","HttpLink","uri","wsLink","WebSocketLink","options","reconnect","splitLink","split","definition","getMainDefinition","kind","operation","concat","ApolloClient","cache","InMemoryCache","connectToDevTools","ReactDOM","render","ApolloProvider","Container","document","getElementById"],"mappings":"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","file":"static/js/main.37a05e74.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blackking.66e1bcad.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackqueen.7b3e33e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackrook.96872a66.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackbishop.1f3b8d1a.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackknight.d39f1d02.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackpawn.1c52d8c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteking.250510ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/whitequeen.4320a2dd.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiterook.095b1a06.svg\";","module.exports = __webpack_public_path__ + \"static/media/whitebishop.09004fd2.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteknight.e6294efe.svg\";","module.exports = __webpack_public_path__ + \"static/media/whitepawn.d69014fb.svg\";","import { gql } from \"@apollo/client\"\r\n\r\nexport const GET_GAME = gql`\r\n  query getGame($gameId: String!) {\r\n    getGame(\r\n      gameId: $gameId\r\n    ) {\r\n      board {\r\n        type\r\n        side\r\n        id\r\n      }\r\n      id\r\n      currentPlayer\r\n      whitePlayer\r\n      blackPlayer\r\n      winner\r\n      gameOver\r\n      promotionPlayerID\r\n      check {\r\n        threatenedSide\r\n        movesAvailable {\r\n          piece {\r\n            type\r\n            side\r\n            id\r\n          }\r\n          newLocation {\r\n            row\r\n            column\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const MOVE_MADE = gql`\r\n  subscription moveMade($gameId: String!) {\r\n    moveMade(\r\n      gameId: $gameId\r\n    ) {\r\n      board {\r\n        type\r\n        side\r\n        id\r\n      }\r\n      id\r\n      lastMove {\r\n        success\r\n      }\r\n      currentPlayer\r\n      whitePlayer\r\n      blackPlayer\r\n      winner\r\n      gameOver\r\n      promotionPlayerID\r\n      check {\r\n        threatenedSide\r\n        movesAvailable {\r\n          piece {\r\n            type\r\n            side\r\n            id\r\n          }\r\n          newLocation {\r\n            row\r\n            column\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const JOIN_GAME = gql`\r\n  mutation joinGame($gameId: String!) {\r\n    joinGame(\r\n      gameId: $gameId\r\n    ) {\r\n      board {\r\n        type\r\n        side\r\n        id\r\n      }\r\n      id\r\n      currentPlayer\r\n      whitePlayer\r\n      blackPlayer\r\n      winner\r\n      gameOver\r\n      promotionPlayerID\r\n      check {\r\n        threatenedSide\r\n        movesAvailable {\r\n          piece {\r\n            type\r\n            side\r\n            id\r\n          }\r\n          newLocation {\r\n            row\r\n            column\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const PROMOTE = gql`\r\n  mutation promote($gameId: String!, $pieceType: String!) {\r\n    promote(\r\n      gameId: $gameId,\r\n      pieceType: $pieceType\r\n    ) {\r\n      board {\r\n        type\r\n        side\r\n        id\r\n      }\r\n      id\r\n      currentPlayer\r\n      whitePlayer\r\n      blackPlayer\r\n      winner\r\n      gameOver\r\n      promotionPlayerID\r\n      check {\r\n        threatenedSide\r\n        movesAvailable {\r\n          piece {\r\n            type\r\n            side\r\n            id\r\n          }\r\n          newLocation {\r\n            row\r\n            column\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_LOGGED_USER = gql`\r\n  query getLoggedUser($token: String) {\r\n    getLoggedUser(\r\n      token: $token\r\n    ) {\r\n      username\r\n      tag\r\n      friends {\r\n        tag\r\n      }\r\n      id\r\n      token\r\n      guest\r\n    }\r\n  }\r\n`\r\n\r\nexport const MAKE_MOVE = gql`\r\n  mutation makeMove($move: MoveInput!) {\r\n    makeMove(\r\n      move: $move\r\n    ) {\r\n      lastMove {\r\n        success\r\n        message\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const LOGIN = gql`\r\n  mutation login($username: String!, $password: String!) {\r\n    login(\r\n      username: $username,\r\n      password: $password\r\n    ) {\r\n      username\r\n      tag\r\n      friends {\r\n        tag\r\n      }\r\n      token\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nexport const ADD_USER = gql`\r\n  mutation addUser($user: NewUserInput!) {\r\n    addUser(\r\n      user: $user\r\n    ) {\r\n      username\r\n      tag\r\n      id\r\n      friends {\r\n        tag\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const CREATE_GAME = gql`\r\n  mutation createGame {\r\n    createGame {\r\n      board {\r\n        type\r\n        side\r\n      }\r\n      id\r\n    }\r\n  }\r\n`","import React from \"react\"\r\n//import { SQUARE_HEIGHT, SQUARE_WIDTH } from \"../globals\"\r\nimport blackKing from \"../../sprites/blackking.svg\"\r\nimport blackQueen from \"../../sprites/blackqueen.svg\"\r\nimport blackRook from \"../../sprites/blackrook.svg\"\r\nimport blackBishop from \"../../sprites/blackbishop.svg\"\r\nimport blackKnight from \"../../sprites/blackknight.svg\"\r\nimport blackPawn from \"../../sprites/blackpawn.svg\"\r\nimport whiteKing from \"../../sprites/whiteking.svg\"\r\nimport whiteQueen from \"../../sprites/whitequeen.svg\"\r\nimport whiteRook from \"../../sprites/whiterook.svg\"\r\nimport whiteBishop from \"../../sprites/whitebishop.svg\"\r\nimport whiteKnight from \"../../sprites/whiteknight.svg\"\r\nimport whitePawn from \"../../sprites/whitepawn.svg\"\r\n\r\n/* const BLACK_COLOR = \"#000000\"\r\nconst WHITE_COLOR = \"#ffffff\" */\r\n\r\nconst pieceStyle = {\r\n  width: 65,\r\n  height: 65,\r\n  //display: \"table-cell\",\r\n  verticalAlign: \"middle\",\r\n}\r\nconst getImgSrc = (type, side) => {\r\n  if (type === \"king\" && side === \"black\") {\r\n    return blackKing\r\n  } else if (type === \"queen\" && side === \"black\") {\r\n    return blackQueen\r\n  } else if (type === \"bishop\" && side === \"black\") {\r\n    return blackBishop\r\n  } else if (type === \"rook\" && side === \"black\") {\r\n    return blackRook\r\n  } else if (type === \"knight\" && side === \"black\") {\r\n    return blackKnight\r\n  } else if (type === \"pawn\" && side === \"black\") {\r\n    return blackPawn\r\n  } else if (type === \"king\" && side === \"white\") {\r\n    return whiteKing\r\n  } else if (type === \"queen\" && side === \"white\") {\r\n    return whiteQueen\r\n  } else if (type === \"bishop\" && side === \"white\") {\r\n    return whiteBishop\r\n  } else if (type === \"rook\" && side === \"white\") {\r\n    return whiteRook\r\n  } else if (type === \"knight\" && side === \"white\") {\r\n    return whiteKnight\r\n  } else if (type === \"pawn\" && side === \"white\") {\r\n    return whitePawn\r\n  }\r\n}\r\n\r\nlet dragged\r\n\r\n\r\n\r\n// functionality of a piece\r\n\r\nconst Piece = ({ style, id, side, type }) => {\r\n  const handleDragStart = event => {\r\n    // dragged määritellään\r\n    dragged = event.target\r\n    event.target.style.opacity = 0.5\r\n  }\r\n\r\n  const handleDragEnd = event => {\r\n    event.target.style.opacity = 1\r\n  }\r\n\r\n\r\n  return (\r\n    <img\r\n      style={style}\r\n      className=\"piece\"\r\n      draggable=\"true\"\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      type={id}\r\n      side={side}\r\n      id={id}\r\n      src={getImgSrc(type, side)}\r\n      alt=\"sprite\"\r\n    >\r\n    </img>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n// pieces\r\n\r\nconst King = ({ side, id }) => {\r\n  const kingStyle = { ...pieceStyle }\r\n  /* kingStyle.backgroundColor = side === \"black\" ? BLACK_COLOR : WHITE_COLOR\r\n  kingStyle.color = side === \"white\" ? BLACK_COLOR : WHITE_COLOR */\r\n\r\n  return (\r\n    <Piece style={kingStyle} id={id} side={side} type=\"king\">\r\n      K\r\n    </Piece>\r\n  )\r\n  /* return (\r\n    <img src={blackKing} alt=\"black king\"></img>\r\n  ) */\r\n}\r\n\r\nconst Queen = ({ side, id }) => {\r\n  const queenStyle = { ...pieceStyle }\r\n  /* queenStyle.backgroundColor = side === \"black\" ? BLACK_COLOR : WHITE_COLOR\r\n  queenStyle.color = side === \"white\" ? BLACK_COLOR : WHITE_COLOR */\r\n\r\n  return (\r\n    <Piece style={queenStyle} id={id} side={side} type=\"queen\">\r\n      D\r\n    </Piece>\r\n  )\r\n}\r\n\r\nconst Rook = ({ side, id }) => {\r\n  const rookStyle = { ...pieceStyle }\r\n  /* rookStyle.backgroundColor = side === \"black\" ? BLACK_COLOR : WHITE_COLOR\r\n  rookStyle.color = side === \"white\" ? BLACK_COLOR : WHITE_COLOR */\r\n\r\n  return (\r\n    <Piece style={rookStyle} id={id} side={side} type=\"rook\">\r\n      T\r\n    </Piece>\r\n  )\r\n}\r\n\r\nconst Knight = ({ side, id }) => {\r\n  const knightStyle = { ...pieceStyle }\r\n  /* knightStyle.backgroundColor = side === \"black\" ? BLACK_COLOR : WHITE_COLOR\r\n  knightStyle.color = side === \"white\" ? BLACK_COLOR : WHITE_COLOR */\r\n\r\n  return (\r\n    <Piece style={knightStyle} id={id} side={side} type=\"knight\">\r\n      R\r\n    </Piece>\r\n  )\r\n}\r\n\r\nconst Bishop = ({ side, id }) => {\r\n  const bishopStyle = { ...pieceStyle }\r\n  /* bishopStyle.backgroundColor = side === \"black\" ? BLACK_COLOR : WHITE_COLOR\r\n  bishopStyle.color = side === \"white\" ? BLACK_COLOR : WHITE_COLOR */\r\n\r\n  return (\r\n    <Piece style={bishopStyle} id={id} side={side} type=\"bishop\">\r\n      L\r\n    </Piece>\r\n  )\r\n}\r\n\r\nconst Pawn = ({ side, id }) => {\r\n  const pawnStyle = { ...pieceStyle }\r\n  /* pawnStyle.backgroundColor = side === \"black\" ? BLACK_COLOR : WHITE_COLOR\r\n  pawnStyle.color = side === \"white\" ? BLACK_COLOR : WHITE_COLOR */\r\n\r\n  return (\r\n    <Piece style={pawnStyle} id={id} side={side} type=\"pawn\">\r\n      S\r\n    </Piece>\r\n  )\r\n}\r\n\r\n/*Piece.displayName = \"Piece\"\r\nKing.displayName = \"King\"\r\nQueen.displayName = \"Queen\"\r\nRook.displayName = \"Rook\"\r\nKnight.displayName = \"Knight\"\r\nBishop.displayName = \"Bishop\"\r\nPawn.displayName = \"Pawn\"*/\r\n\r\nexport { King, Queen, Rook, Knight, Bishop, Pawn, dragged }","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport App from \"./App\"\nimport Container from \"@material-ui/core/Container\"\n\nimport { ApolloProvider, ApolloClient, InMemoryCache, HttpLink, split } from \"@apollo/client\"\nimport { setContext } from \"@apollo/link-context\"\nimport { getMainDefinition } from \"@apollo/client/utilities\"\nimport { WebSocketLink } from \"@apollo/link-ws\"\n\nconst authLink = setContext((_, { headers }) => {\n  const token = sessionStorage.getItem(\"loggedChessUser\")\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `bearer ${token}` : null\n    }\n  }\n})\n\nlet loc = window.location, newUri\nif (loc.protocol === \"https:\") {\n  newUri = \"wss:\"\n} else {\n  newUri = \"ws:\"\n}\nnewUri += \"//\" + loc.host\nconsole.log(`${newUri}/graphql`)\n\nconst httpLink = new HttpLink({\n  uri: \"/graphql\"\n})\n\nconst wsLink = new WebSocketLink({\n  uri: `${newUri}/graphql`,\n  //uri: \"/graphql\",\n  options: {\n    reconnect: true\n  }\n})\n\nconst splitLink = split(\n  ({query}) => {\n    const definition = getMainDefinition(query)\n    return (\n      definition.kind === \"OperationDefinition\" &&\n      definition.operation === \"subscription\"\n    )\n  },\n  wsLink,\n  authLink.concat(httpLink),\n)\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: splitLink,\n  connectToDevTools: true,\n})\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Container>\n      <Router>\n        <App />\n      </Router>\n    </Container>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n)\n","import React from \"react\"\r\n\r\nexport const UserContext = React.createContext(null)\r\n\r\nexport const GameContext = React.createContext(null)","import React, { useContext } from \"react\"\r\nimport {\r\n  SQUARE_HEIGHT,\r\n  SQUARE_WIDTH,\r\n  BLACKSQUARE_COLOR,\r\n  WHITESQUARE_COLOR,\r\n  HIGHLIGHTED_COLOR,\r\n} from \"../../utils/constants\"\r\nimport { King, Queen, Rook, Knight, Bishop, Pawn, dragged } from \"./pieces\"\r\nimport { GameContext } from \"../../utils/context\"\r\n\r\n// a single chess square\r\n\r\nconst Square = ({ color, makeMove, location, piece, dragHelperMap }) => {\r\n  const { gameId } = useContext(GameContext)\r\n\r\n  //squarestyles\r\n  const white = {\r\n    height: SQUARE_HEIGHT,\r\n    width: SQUARE_WIDTH,\r\n    backgroundColor: WHITESQUARE_COLOR,\r\n    textAlign: \"center\",\r\n  }\r\n  const black = {\r\n    height: SQUARE_HEIGHT,\r\n    width: SQUARE_WIDTH,\r\n    backgroundColor: BLACKSQUARE_COLOR,\r\n    textAlign: \"center\",\r\n  }\r\n\r\n\r\n\r\n  // drop handlers\r\n\r\n  const handleDrop = async event => {\r\n    event.preventDefault()\r\n\r\n    console.log(\"dragged:\", dragged)\r\n\r\n    const piece = {\r\n      type: dragHelperMap.get(Number(dragged.id)).type,\r\n      side: dragHelperMap.get(Number(dragged.id)).side\r\n    }\r\n    const oldLocation = {\r\n      row: Math.floor(Number(dragged.id) / 8),\r\n      column: Number(dragged.id) % 8\r\n    }\r\n    const newLocation = location\r\n\r\n    if (event.target.className === \"square\") {\r\n      event.target.style.backgroundColor = color === \"white\" ? WHITESQUARE_COLOR : BLACKSQUARE_COLOR\r\n    } else if (event.target.className === \"piece\") {\r\n      const parent = event.target.parentNode\r\n\r\n      parent.style.backgroundColor = parent.id === \"white\" ? WHITESQUARE_COLOR : BLACKSQUARE_COLOR\r\n    }\r\n\r\n    try {\r\n      const res = await makeMove({\r\n        variables: { move: { piece, oldLocation, newLocation, gameId } }\r\n      })\r\n      if (!res.data.makeMove.lastMove.success) {\r\n        console.log(res.data.makeMove.lastMove.message)\r\n      }\r\n    } catch (exception) {\r\n      console.log(exception.message)\r\n    }\r\n  }\r\n\r\n  const handleDragEnter = event => {\r\n    if (event.target.className === \"square\") {\r\n      event.target.style.backgroundColor = HIGHLIGHTED_COLOR\r\n    } else if (event.target.className === \"piece\") {\r\n      event.target.parentNode.style.backgroundColor = HIGHLIGHTED_COLOR\r\n    }\r\n  }\r\n\r\n  const handleDragLeave = event => {\r\n    if (event.target.className === \"square\" && event.relatedTarget.className !== \"piece\") {\r\n      if (event.target.id === \"white\") {\r\n        event.target.style.backgroundColor = WHITESQUARE_COLOR\r\n      } else {\r\n        event.target.style.backgroundColor = BLACKSQUARE_COLOR\r\n      }\r\n    } else if (event.target.className === \"piece\" && event.relatedTarget.className !== \"square\") {\r\n      if (event.target.parentNode.id === \"white\") {\r\n        event.target.parentNode.style.backgroundColor = WHITESQUARE_COLOR\r\n      } else {\r\n        event.target.parentNode.style.backgroundColor = BLACKSQUARE_COLOR\r\n      }\r\n    }\r\n  }\r\n\r\n  let pieceToRender\r\n\r\n  if (piece) {\r\n    switch(piece.type) {\r\n\r\n    case \"pawn\":\r\n      pieceToRender = <Pawn side={piece.side} id={8 * location.row + location.column} />\r\n      break\r\n    case \"rook\":\r\n      pieceToRender = <Rook side={piece.side} id={8 * location.row + location.column} />\r\n      break\r\n    case \"knight\":\r\n      pieceToRender = <Knight side={piece.side} id={8 * location.row + location.column} />\r\n      break\r\n    case \"bishop\":\r\n      pieceToRender = <Bishop side={piece.side} id={8 * location.row + location.column} />\r\n      break\r\n    case \"queen\":\r\n      pieceToRender = <Queen side={piece.side} id={8 * location.row + location.column} />\r\n      break\r\n    case \"king\":\r\n      pieceToRender = <King side={piece.side} id={8 * location.row + location.column} />\r\n      break\r\n    default:\r\n      pieceToRender = null\r\n    }\r\n  }\r\n\r\n\r\n  //---------------------------------\r\n\r\n  return (\r\n    <td\r\n      id={color === \"white\" ? \"white\" : \"black\"}\r\n      style={color === \"white\" ? white : black}\r\n      className=\"square\"\r\n      onDragLeave={handleDragLeave}\r\n      onDragOver={event => {event.preventDefault()}}\r\n      onDrop={handleDrop}\r\n      onDragEnter={handleDragEnter}\r\n    >\r\n      {pieceToRender}\r\n    </td>\r\n  )\r\n}\r\n\r\nexport default Square","export const SQUARE_HEIGHT = 70\r\nexport const SQUARE_WIDTH = 70\r\n\r\nexport const WHITESQUARE_COLOR = \"#1df0c9\"\r\nexport const BLACKSQUARE_COLOR = \"#19917b\"\r\nexport const HIGHLIGHTED_COLOR = \"#11d161\"\r\n\r\nexport const baseUrl = \"\"","import { GET_GAME } from \"../queries\"\r\nimport { useApolloClient } from \"@apollo/client\"\r\n\r\nexport const updateGameState = (newGameData, client, gameId) => {\r\n  let gameInStore = client.readQuery({ query: GET_GAME, variables: { gameId } })\r\n  gameInStore = { getGame: newGameData.moveMade }\r\n\r\n  console.log(\"newGameData:\", newGameData)\r\n  client.writeQuery({\r\n    query: GET_GAME,\r\n    data: gameInStore,\r\n    variables: { gameId }\r\n  })\r\n  console.log(\"Game state updated with:\",client.readQuery({\r\n    query: GET_GAME,\r\n    variables: { gameId }\r\n  }))\r\n}\r\n\r\nexport const useGame = (gameId) => {\r\n  const client = useApolloClient()\r\n\r\n  return client.readQuery({ query: GET_GAME, variables: { gameId } }).getGame.id\r\n}","import React, { useEffect, useContext } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport { useQuery, useMutation, useSubscription, useApolloClient } from \"@apollo/client\"\r\nimport { GET_GAME, MAKE_MOVE, MOVE_MADE, JOIN_GAME, PROMOTE } from \"../../queries\"\r\nimport Square from \"./Square\"\r\nimport { updateGameState } from \"../../utils/cacheUpdaters\"\r\nimport { GameContext, UserContext } from \"../../utils/context\"\r\nimport { Button } from \"@material-ui/core\"\r\n//import { Queen, Rook, Bishop, Knight, } from \"./pieces\"\r\n\r\n\r\n// Chessboard\r\n\r\nconst Board = () => {\r\n  const client = useApolloClient()\r\n  const { id } = useParams()\r\n  const { setGameId } = useContext(GameContext)\r\n  const { user } = useContext(UserContext)\r\n  const initialResult = useQuery(GET_GAME, {\r\n    variables: { gameId: id },\r\n    onError: err => {\r\n      if (!err.graphQLErrors || !err.graphQLErrors[0]) {\r\n        console.log(err.message)\r\n      } else {\r\n        console.log(err.graphQLErrors[0].message)\r\n      }\r\n    },\r\n    onCompleted: data => {\r\n      setGameId(data.getGame.id)\r\n    }\r\n  })\r\n  const [makeMove] = useMutation(MAKE_MOVE)\r\n  const [promote] = useMutation(PROMOTE)\r\n  const [joinGame] = useMutation(JOIN_GAME, {\r\n    variables: { gameId: id },\r\n    onError: err => {\r\n      if (!err.graphQLErrors || !err.graphQLErrors[0]) {\r\n        console.log(err.message)\r\n      } else {\r\n        console.log(err.graphQLErrors[0].message)\r\n      }\r\n    },\r\n    onCompleted: data => {\r\n      updateGameState(data, client, id)\r\n    }\r\n  })\r\n\r\n  useSubscription(MOVE_MADE, {\r\n    onSubscriptionData: ({ subscriptionData }) => {\r\n      updateGameState(subscriptionData.data, client, id)\r\n    },\r\n    variables: { gameId: id }\r\n  })\r\n\r\n  useEffect(() => {\r\n    joinGame()\r\n  }, [joinGame])\r\n\r\n  const sendPromotedType = type => {\r\n    promote({ variables: { gameId: id, pieceType: type } })\r\n  }\r\n\r\n  if (initialResult.loading) {\r\n    return \"loading...\"\r\n  }\r\n\r\n  if (!initialResult.data) {\r\n    return initialResult.error.toString()\r\n  }\r\n\r\n  const {\r\n    board,\r\n    whitePlayer,\r\n    currentPlayer,\r\n    gameOver,\r\n    winner,\r\n    promotionPlayerID,\r\n  } = initialResult.data.getGame\r\n\r\n  const dragHelperMap = new Map()\r\n  board.forEach((row, i) => {\r\n    row.forEach((piece, j) => {\r\n      dragHelperMap.set(8 * i + j, piece)\r\n    })\r\n  })\r\n\r\n  /* const blackBoard = Array.from(Array(8), () => {\r\n    const row = new Array(8)\r\n\r\n    for (let j = 0; j < 8; j++) {\r\n      row[j] = null\r\n    }\r\n\r\n    return row\r\n  })\r\n  console.log(\"board:\", board)\r\n  console.log(\"blackBoard:\", blackBoard)\r\n  for (let i = 7; i >= 0; i--) {\r\n    for (let j = 7; j >= 0; j--) {\r\n      console.log(i, j)\r\n      blackBoard[i][j] = board[i - 7][j - 7]\r\n    }\r\n  } */\r\n\r\n  const squares = Array.from(Array(8), (e, i) => {\r\n    const row = new Array(8)\r\n\r\n    for (let j = 0; j < 8; j++) {\r\n      if ((i + j) % 2 === 0) {\r\n        row[j] = { piece: null, color: \"white\"}\r\n      } else {\r\n        row[j] = { piece: null, color: \"black\"}\r\n      }\r\n    }\r\n\r\n    return row\r\n  })\r\n\r\n  //console.log(\"board renderöidään\")\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        Olet {user.id === whitePlayer\r\n          ? \"valkoiset\"\r\n          : \"mustat\"}. {user.id === currentPlayer\r\n          ? \"On sinun vuorosi.\" : \"Odotetaan vastustajan siirtoa.\"}\r\n      </div>\r\n      <table>\r\n        <tbody>\r\n          {user.id === whitePlayer ? board.map((row, i) => {\r\n            return (\r\n              <tr key={i}>\r\n                {\r\n                  row.map((piece, j) => {\r\n                    return <Square\r\n                      key={8 * i + j}\r\n                      color={squares[i][j].color}\r\n                      makeMove={makeMove}\r\n                      location={{ row: i, column: j }}\r\n                      piece={piece}\r\n                      dragHelperMap={dragHelperMap}\r\n                    />\r\n                  })\r\n                }\r\n              </tr>\r\n            )\r\n          }) : board.map((row, i) => {\r\n            return (\r\n              <tr key={i}>\r\n                {\r\n                  row.map((piece, j) => {\r\n                    return <Square\r\n                      key={8 * (7 - i) + (7 - j)}\r\n                      color={squares[7 - i][7 - j].color}\r\n                      makeMove={makeMove}\r\n                      location={{ row: (7 - i), column: (7 - j) }}\r\n                      piece={board[7 - i][7 - j]}\r\n                      dragHelperMap={dragHelperMap}\r\n                    />\r\n                  })\r\n                }\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <div>\r\n        {\r\n          user.id === promotionPlayerID\r\n            ?\r\n            <div>\r\n              Valitse nappula, joksi haluat muuttaa sotilaan\r\n              <Button onClick={() => sendPromotedType(\"queen\")}>\r\n                Kuningatar\r\n              </Button>\r\n              <Button onClick={() => sendPromotedType(\"rook\")}>\r\n                Torni\r\n              </Button>\r\n              <Button onClick={() => sendPromotedType(\"knight\")}>\r\n                Ratsu\r\n              </Button>\r\n              <Button onClick={() => sendPromotedType(\"bishop\")}>\r\n                Lähetti\r\n              </Button>\r\n            </div>\r\n            :\r\n            null\r\n        }\r\n      </div>\r\n      <div>\r\n        {\r\n          gameOver\r\n            ? winner === user.id\r\n              ? \"Voitit pelin! Onneksi olkoon!\"\r\n              : \"Ootko paska ku hävisit :D\"\r\n            : null\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Board","import React from \"react\"\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div>\r\n      Student project for Full Stack open 2020\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer","import React, { useState, useEffect, useContext } from \"react\"\r\nimport { TextField, Button, } from \"@material-ui/core\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { LOGIN } from \"../queries\"\r\nimport { useMutation } from \"@apollo/client\"\r\nimport { UserContext } from \"../utils/context\"\r\n\r\n\r\nconst LoginForm = () => {\r\n  const [username, setUsername] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n\r\n  const { setUser } = useContext(UserContext)\r\n\r\n  const history = useHistory()\r\n\r\n  const [login, loginResult] = useMutation(LOGIN, {\r\n    onError: err => {\r\n      console.log(err.graphQLErrors[0].message)\r\n      setPassword(\"\")\r\n    }\r\n  })\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault()\r\n\r\n    login({ variables: { username, password } })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (loginResult.data) {\r\n      setUsername(\"\")\r\n      setPassword(\"\")\r\n\r\n      console.log(loginResult.data.login.token)\r\n      window.sessionStorage.setItem(\"loggedChessUser\", loginResult.data.login.token)\r\n      setUser(loginResult.data.login)\r\n\r\n      history.push(\"/\")\r\n    }\r\n  }, [loginResult.data, setUser, history])\r\n\r\n  return (\r\n    <div>\r\n      <h2>Kirjaudu sisään</h2>\r\n      <form onSubmit={onSubmit}>\r\n        <div>\r\n          <TextField\r\n            label=\"Käyttäjänimi\"\r\n            onChange={e => {setUsername(e.target.value)}}\r\n            name=\"username\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            label=\"Salasana\"\r\n            type=\"password\"\r\n            onChange={e => {setPassword(e.target.value)}}\r\n            name=\"password\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n            Kirjaudu\r\n          </Button>\r\n        </div>\r\n      </form>\r\n      <div>\r\n        tai\r\n      </div>\r\n      <div>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={() => history.push(\"/register\")}>\r\n          Luo uusi käyttäjä\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm","import React, { useContext } from \"react\"\r\nimport { AppBar, Toolbar, IconButton, Button, Typography } from \"@material-ui/core\"\r\nimport { Link, } from \"react-router-dom\"\r\nimport { UserContext } from \"../utils/context\"\r\n\r\nconst Menu = () => {\r\n  const { user } = useContext(UserContext)\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n        </IconButton>\r\n        <Button color=\"inherit\" component={Link} to=\"/play\">\r\n          Pelaa\r\n        </Button>\r\n        <Button color=\"inherit\" component={Link} to=\"/info\">\r\n          Ohjeet\r\n        </Button>\r\n        {!user \r\n          ?\r\n          <Button color=\"inherit\" component={Link} to=\"/login\">\r\n            Kirjaudu\r\n          </Button>\r\n          :\r\n          <Typography variant=\"subtitle1\" color=\"secondary\">\r\n              `&quot;`{user.tag}`&quot;` kirjautunut\r\n          </Typography>\r\n        }\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nexport default Menu","import React, { useState, useEffect } from \"react\"\r\nimport { TextField, Button, } from \"@material-ui/core\"\r\nimport { useMutation } from \"@apollo/client\"\r\nimport { ADD_USER } from \"../queries\"\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nconst RegisterForm = () => {\r\n  const [username, setUsername] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [confirmation, setConfirmation] = useState(\"\")\r\n  const [tag, setTag] = useState(\"\")\r\n  const history = useHistory()\r\n\r\n  const [addUser, addedResult] = useMutation(ADD_USER, {\r\n    onError: err => {\r\n      console.log(err.graphQLErrors[0].message)\r\n      window.alert(err.graphQLErrors[0].message)\r\n    }\r\n  })\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault()\r\n\r\n    const user = { username, password, tag }\r\n    addUser({ variables: { user } })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (addedResult.data) {\r\n      setUsername(\"\")\r\n      setPassword(\"\")\r\n      setTag(\"\")\r\n\r\n      window.alert(\"Käyttäjä luotu onnistuneesti.\")\r\n      history.push(\"/\")\r\n    }\r\n  }, [addedResult.data, history])\r\n\r\n  return (\r\n    <div>\r\n      <h2>Luo uusi käyttäjä</h2>\r\n      <form onSubmit={onSubmit}>\r\n        <div>\r\n          <TextField\r\n            label=\"Käyttäjänimi\"\r\n            onChange={e => {setUsername(e.target.value)}}\r\n            error={username.length !== 0 && username.length < 2}\r\n            helperText={\r\n              username.length !== 0 && username.length < 2\r\n                ? \"Liian lyhyt\"\r\n                : \"Käyttäjänimesi ei näy muille pelaajille.\"\r\n            }\r\n            required={true}\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            label=\"Pelinimi\"\r\n            onChange={e => {setTag(e.target.value)}}\r\n            helperText=\"Nimi joka näkyy muille pelaajille.\"\r\n            required={true}\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            label=\"Salasana\"\r\n            type=\"password\"\r\n            onChange={e => {setPassword(e.target.value)}}\r\n            error={password.length < 8 && password !== \"\"}\r\n            helperText={\r\n              password.length < 8 && password !== \"\"\r\n                ? \"Liian lyhyt\"\r\n                : null\r\n            }\r\n            required={true}\r\n          />\r\n          <div\r\n            style={{\r\n              paddingTop: 20,\r\n              paddingBottom: 10,\r\n            }}\r\n          >\r\n            <strong>Älä käytä samaa salasanaa, joka sinulla on muilla nettisivuilla. </strong>\r\n            Olen vain opiskelija, ja tämä on ensimmäinen nettiprojektini, joten en voi taata sivuston tietoturvallisuutta.\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            label=\"Salasana uudelleen\"\r\n            type=\"password\"\r\n            onChange={e => {setConfirmation(e.target.value)}}\r\n            error={confirmation !== password}\r\n            helperText={confirmation !== password ? \"Salasanat eivät vastaa toisiaan.\" : null}\r\n            required={true}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n            Luo käyttäjä\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RegisterForm","import React, { useState, useContext, useEffect } from \"react\"\r\nimport { Button, Link } from \"@material-ui/core\"\r\nimport { UserContext } from \"../utils/context\"\r\n//import { baseUrl } from \"../utils/constants\"\r\nimport { useMutation } from \"@apollo/client\"\r\nimport { CREATE_GAME } from \"../queries\"\r\n\r\nconst GameMenu = () => {\r\n  const [link, setLink] = useState(null)\r\n  const { user } = useContext(UserContext)\r\n  //const { setGame } = useContext(GameContext)\r\n  const [createGame, createResult] = useMutation(CREATE_GAME, {\r\n    onError: err => {\r\n      //console.log(err.graphQlErrors[0].message)\r\n      console.log(err.message)\r\n    }\r\n  })\r\n\r\n  const newGame = () => {\r\n    if (!user) {\r\n      console.log(\"Sinun täytyy kirjautua ennen kuin pelaat\")\r\n    } else {\r\n      createGame()\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (createResult.data) {\r\n      const { id } = createResult.data.createGame\r\n      setLink(`${window.location}/${id}`)\r\n    }\r\n  }, [createResult.data])\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={newGame}>\r\n        Peli linkin kautta\r\n      </Button>\r\n      {link\r\n        ?\r\n        <div>\r\n          Jaa tämä linkki kaverillesi. Sen kautta pääset pelaamaan.{\"  \"}\r\n          <Link href={link}>\r\n            {link}\r\n          </Link>\r\n        </div>\r\n        :\r\n        null\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GameMenu","import React, { useState, useEffect } from \"react\"\nimport Board from \"./components/chess/Board\"\nimport { Switch, Route } from \"react-router-dom\"\nimport Footer from \"./components/Footer\"\nimport LoginForm from \"./components/LoginForm\"\nimport Menu from \"./components/Menu\"\nimport { UserContext, GameContext } from \"./utils/context\"\nimport RegisterForm from \"./components/RegisterForm\"\nimport { useQuery } from \"@apollo/client\"\nimport { GET_LOGGED_USER } from \"./queries\"\nimport GameMenu from \"./components/GameMenu\"\n\nconst App = () => {\n  const [user, setUser] = useState(null)\n  const [gameId, setGameId] = useState(null)\n  const userResult = useQuery(GET_LOGGED_USER, {\n    variables: { token: window.sessionStorage.getItem(\"loggedChessUser\") }\n  })\n\n  useEffect(() => {\n    if (userResult.data) {\n      if (userResult.data.getLoggedUser.guest) {\n        setUser(userResult.data.getLoggedUser)\n        window.sessionStorage.setItem(\"loggedChessUser\", userResult.data.getLoggedUser.token)\n      } else {\n        setUser(userResult.data.getLoggedUser)\n      }\n    }\n  }, [userResult.data])\n\n  //console.log(\"App renderöidään\")\n  return (\n    <div>\n      <UserContext.Provider value={{ user, setUser }}>\n        <Menu />\n        {user ?\n          <Switch>\n            <Route path=\"/play/:id\">\n              <GameContext.Provider value={{ gameId, setGameId }}>\n                <Board />\n              </GameContext.Provider>\n            </Route>\n            <Route path=\"/play\">\n              <GameContext.Provider value={{ gameId, setGameId }}>\n                <GameMenu />\n              </GameContext.Provider>\n            </Route>\n            <Route path=\"/login\">\n              <LoginForm />\n            </Route>\n            <Route path=\"/register\">\n              <RegisterForm />\n            </Route>\n          </Switch> : \"loading\"\n        }\n        <Footer />\n      </UserContext.Provider>\n    </div>\n  )\n}\n\nexport default App\n"],"sourceRoot":""}